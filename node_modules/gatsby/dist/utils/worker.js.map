{"version":3,"sources":["../../src/utils/worker.js"],"names":["fs","require","path","Promise","generatePathToOutput","outputPath","outputFileName","replace","test","join","process","cwd","renderHTML","htmlComponentRendererPath","paths","concurrency","map","resolve","reject","htmlComponentRenderer","default","throwAway","htmlString","outputFile","e"],"mappings":";;;;;AAAA,MAAMA,KAAKC,QAAS,UAAT,CAAX;;AACA,MAAMC,OAAOD,QAAS,MAAT,CAAb;;AACA,MAAME,UAAUF,QAAS,UAAT,CAAhB,C,CAEA;;;AACA,MAAMG,uBAAuBC,cAAc;AACzC,MAAIC,iBAAiBD,WAAWE,OAAX,CAAmB,UAAnB,EAAgC,EAAhC,CAArB,CADyC,CACe;;AAExD,MAAI,CAAC,cAAcC,IAAd,CAAmBF,cAAnB,CAAL,EAAyC;AACvCA,qBAAiBJ,KAAKO,IAAL,CAAUH,cAAV,EAA2B,YAA3B,CAAjB;AACD;;AAED,SAAOJ,KAAKO,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAA0B,QAA1B,EAAmCL,cAAnC,CAAP;AACD,CARD;;AAUO,SAASM,UAAT,CAAoB;AAAEC,2BAAF;AAA6BC,OAA7B;AAAoCC;AAApC,CAApB,EAAuE;AAC5E,SAAOZ,QAAQa,GAAR,CACLF,KADK,EAELZ,QACE,IAAIC,OAAJ,CAAY,CAACc,OAAD,EAAUC,MAAV,KAAqB;AAC/B,UAAMC,wBAAwBlB,QAAQY,yBAAR,CAA9B;;AACA,QAAI;AACFM,4BAAsBC,OAAtB,CAA8BlB,IAA9B,EAAoC,CAACmB,SAAD,EAAYC,UAAZ,KAA2B;AAC7DL,gBAAQjB,GAAGuB,UAAH,CAAcnB,qBAAqBF,IAArB,CAAd,EAA0CoB,UAA1C,CAAR;AACD,OAFD;AAGD,KAJD,CAIE,OAAOE,CAAP,EAAU;AACVN,aAAOM,CAAP;AACD;AACF,GATD,CAHG,EAaL;AAAET;AAAF,GAbK,CAAP;AAeD","sourcesContent":["const fs = require(`fs-extra`)\nconst path = require(`path`)\nconst Promise = require(`bluebird`)\n\n// copied from https://github.com/markdalgleish/static-site-generator-webpack-plugin/blob/master/index.js#L161\nconst generatePathToOutput = outputPath => {\n  let outputFileName = outputPath.replace(/^(\\/|\\\\)/, ``) // Remove leading slashes for webpack-dev-server\n\n  if (!/\\.(html?)$/i.test(outputFileName)) {\n    outputFileName = path.join(outputFileName, `index.html`)\n  }\n\n  return path.join(process.cwd(), `public`, outputFileName)\n}\n\nexport function renderHTML({ htmlComponentRendererPath, paths, concurrency }) {\n  return Promise.map(\n    paths,\n    path =>\n      new Promise((resolve, reject) => {\n        const htmlComponentRenderer = require(htmlComponentRendererPath)\n        try {\n          htmlComponentRenderer.default(path, (throwAway, htmlString) => {\n            resolve(fs.outputFile(generatePathToOutput(path), htmlString))\n          })\n        } catch (e) {\n          reject(e)\n        }\n      }),\n    { concurrency }\n  )\n}\n"],"file":"worker.js"}