{"version":3,"sources":["../../src/redux/index.js"],"names":["Redux","require","Promise","_","composeWithDevTools","fs","mitt","stringify","emitter","reducers","objectToMap","obj","map","Map","Object","keys","forEach","key","set","mapToObject","value","initialState","file","readFileSync","process","cwd","Buffer","isBuffer","JSON","parse","staticQueryComponents","components","nodes","e","env","NODE_ENV","console","log","store","REDUX_DEVTOOLS","sitePackageJSON","composeEnhancers","realtime","port","name","createStore","combineReducers","applyMiddleware","multi","dispatch","next","action","Array","isArray","filter","Boolean","saveState","state","pickedState","pick","stringified","writeFile","saveStateDebounced","debounce","subscribe","lastAction","getState","emit","type","bootstrapFinished","gatsby_executing_command","on","exports","getNodes","from","values","getNode","id","get","hasNodeChanged","digest","node","internal","contentDigest","loadNodeContent","isString","content","resolve","plugin","flattenedPlugins","find","plug","owner","Error","then","getNodeAndSavePathDependency","path","createPageDependency","nodeId"],"mappings":"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","sourcesContent":["const Redux = require(`redux`)\nconst Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst { composeWithDevTools } = require(`remote-redux-devtools`)\nconst fs = require(`fs`)\nconst mitt = require(`mitt`)\nconst stringify = require(`json-stringify-safe`)\n\n// Create event emitter for actions\nconst emitter = mitt()\n\n// Reducers\nconst reducers = require(`./reducers`)\n\nconst objectToMap = obj => {\n  let map = new Map()\n  Object.keys(obj).forEach(key => {\n    map.set(key, obj[key])\n  })\n  return map\n}\n\nconst mapToObject = map => {\n  const obj = {}\n  for (let [key, value] of map) {\n    obj[key] = value\n  }\n  return obj\n}\n\n// Read from cache the old node data.\nlet initialState = {}\ntry {\n  const file = fs.readFileSync(`${process.cwd()}/.cache/redux-state.json`)\n  // Apparently the file mocking in node-tracking-test.js\n  // can override the file reading replacing the mocked string with\n  // an already parsed object.\n  if (Buffer.isBuffer(file) || typeof file === `string`) {\n    initialState = JSON.parse(file)\n  }\n  if (initialState.staticQueryComponents) {\n    initialState.staticQueryComponents = objectToMap(\n      initialState.staticQueryComponents\n    )\n  }\n  if (initialState.components) {\n    initialState.components = objectToMap(initialState.components)\n  }\n  if (initialState.nodes) {\n    initialState.nodes = objectToMap(initialState.nodes)\n  }\n} catch (e) {\n  if (process.env.NODE_ENV === `test`) {\n    console.log(`error loading initialState`, e)\n  }\n  // ignore errors.\n}\n\nlet store\n// Only setup the Redux devtools if explicitly enabled.\nif (process.env.REDUX_DEVTOOLS === `true`) {\n  const sitePackageJSON = require(`${process.cwd()}/package.json`)\n  const composeEnhancers = composeWithDevTools({\n    realtime: true,\n    port: 19999,\n    name: sitePackageJSON.name,\n  })\n  store = Redux.createStore(\n    Redux.combineReducers({ ...reducers }),\n    initialState,\n    composeEnhancers(\n      Redux.applyMiddleware(function multi({ dispatch }) {\n        return next => action =>\n          Array.isArray(action)\n            ? action.filter(Boolean).map(dispatch)\n            : next(action)\n      })\n    )\n  )\n} else {\n  store = Redux.createStore(\n    Redux.combineReducers({ ...reducers }),\n    initialState,\n    Redux.applyMiddleware(function multi({ dispatch }) {\n      return next => action =>\n        Array.isArray(action)\n          ? action.filter(Boolean).map(dispatch)\n          : next(action)\n    })\n  )\n}\n\n// Persist state.\nconst saveState = state => {\n  const pickedState = _.pick(state, [\n    `nodes`,\n    `status`,\n    `componentDataDependencies`,\n    `jsonDataPaths`,\n    `components`,\n    `staticQueryComponents`,\n  ])\n\n  pickedState.staticQueryComponents = mapToObject(\n    pickedState.staticQueryComponents\n  )\n  pickedState.components = mapToObject(pickedState.components)\n  pickedState.nodes = mapToObject(pickedState.nodes)\n  const stringified = stringify(pickedState, null, 2)\n  fs.writeFile(\n    `${process.cwd()}/.cache/redux-state.json`,\n    stringified,\n    () => {}\n  )\n}\nconst saveStateDebounced = _.debounce(saveState, 1000)\n\nstore.subscribe(() => {\n  const lastAction = store.getState().lastAction\n  emitter.emit(lastAction.type, lastAction)\n})\n\n// During development, once bootstrap is finished, persist state on changes.\nlet bootstrapFinished = false\nif (process.env.gatsby_executing_command === `develop`) {\n  emitter.on(`BOOTSTRAP_FINISHED`, () => {\n    bootstrapFinished = true\n    saveState(store.getState())\n  })\n  emitter.on(`*`, () => {\n    if (bootstrapFinished) {\n      saveStateDebounced(store.getState())\n    }\n  })\n}\n\n// During builds, persist state once bootstrap has finished.\nif (process.env.gatsby_executing_command === `build`) {\n  emitter.on(`BOOTSTRAP_FINISHED`, () => {\n    saveState(store.getState())\n  })\n}\n\n/** Event emitter */\nexports.emitter = emitter\n\n/** Redux store */\nexports.store = store\n\n/**\n * Get all nodes from redux store.\n *\n * @returns {Array}\n */\nexports.getNodes = () => {\n  const nodes = store.getState().nodes\n  if (nodes) {\n    return Array.from(nodes.values())\n  } else {\n    return []\n  }\n}\nconst getNode = id => store.getState().nodes.get(id)\n\n/** Get node by id from store.\n *\n * @param {string} id\n * @returns {Object}\n */\nexports.getNode = getNode\n\n/**\n * Determine if node has changed.\n *\n * @param {string} id\n * @param {string} digest\n * @returns {boolean}\n */\nexports.hasNodeChanged = (id, digest) => {\n  const node = store.getState().nodes.get(id)\n  if (!node) {\n    return true\n  } else {\n    return node.internal.contentDigest !== digest\n  }\n}\n\n/**\n * Get content for a node from the plugin that created it.\n *\n * @param {Object} node\n * @returns {promise}\n */\nexports.loadNodeContent = node => {\n  if (_.isString(node.internal.content)) {\n    return Promise.resolve(node.internal.content)\n  } else {\n    return new Promise(resolve => {\n      // Load plugin's loader function\n      const plugin = store\n        .getState()\n        .flattenedPlugins.find(plug => plug.name === node.internal.owner)\n      const { loadNodeContent } = require(plugin.resolve)\n      if (!loadNodeContent) {\n        throw new Error(\n          `Could not find function loadNodeContent for plugin ${plugin.name}`\n        )\n      }\n\n      return loadNodeContent(node).then(content => {\n        // TODO update node's content field here.\n        resolve(content)\n      })\n    })\n  }\n}\n\n/**\n * Get node and save path dependency.\n *\n * @param {string} id\n * @param {string} path\n * @returns {Object} node\n */\nexports.getNodeAndSavePathDependency = (id, path) => {\n  const { createPageDependency } = require(`./actions/add-page-dependency`)\n  const node = getNode(id)\n  createPageDependency({ path, nodeId: id })\n  return node\n}\n\n// Start plugin runner which listens to the store\n// and invokes Gatsby API based on actions.\nrequire(`./plugin-runner`)\n"],"file":"index.js"}