{"version":3,"sources":["webpack:///./src/pages/components/checkboxes/code.js","webpack:///./src/components/subnavigation.js","webpack:///./node_modules/prismjs/prism.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/components/codetoggle.js","webpack:///./src/components/codetoggle-scss.js"],"names":["currentPageNameLower","toLowerCase","__webpack_exports__","default","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_2__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_3__","data-id","id","type","defaultChecked","htmlFor","disabled","_components_codetoggle__WEBPACK_IMPORTED_MODULE_4__","_components_codetoggle_scss__WEBPACK_IMPORTED_MODULE_5__","name","234","e","t","n","c","l","_ref","sectionName","getPageName","getSectionName","gatsby__WEBPACK_IMPORTED_MODULE_1__","Link","to","activeClassName","236","_self","window","WorkerGlobalScope","self","Prism","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","content","alias","map","replace","o","Object","prototype","toString","call","match","objId","obj","__id","defineProperty","value","clone","visited","key","hasOwnProperty","forEach","v","i","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","arguments","length","newToken","ret","token","DFS","this","callback","plugins","highlightAll","async","highlightAllUnder","document","container","env","selector","hooks","run","element","elements","querySelectorAll","highlightElement","language","parent","test","parentNode","nodeName","code","textContent","Worker","worker","filename","onmessage","evt","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","from","k","p","len","delNum","slice","after","args","push","wrapped","Array","splice","apply","rest","all","add","callbacks","matchedStr","join","tag","classes","attributes","aliases","keys","addEventListener","message","parse","close","script","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","module","exports","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","title","xml","html","mathml","svg","css","atrule","rule","url","string","property","important","function","style","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","function-variable","constant","template-string","interpolation","interpolation-punctuation","js","querySelector","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","h","tex","pre","getAttribute","extension","appendChild","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","toolbar","registerButton","setAttribute","href","g","Function","eval","CodeToggle","props","_this","_React$Component","state","showCode","toggleCode","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","setState","prevState","componentDidMount","prismjs__WEBPACK_IMPORTED_MODULE_4___default","render","react__WEBPACK_IMPORTED_MODULE_3___default","onClick","children","Component","242","s","r","d","CodeToggleSCSS"],"mappings":"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","file":"component---src-pages-components-checkboxes-code-js-3fa0bf0e96b2f146ba85.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\nimport CodeToggleSCSS from '../../../components/codetoggle-scss'\n\nconst currentPageName = \"Checkboxes\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n    <div className=\"row\">\n      <div className=\"column column--full\">\n\n        <h2 className=\"example-header no-margin--top\">Custom Checkboxes <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Custom_Checkboxes\"></button></h2>\n    \t\t<p>To use custom checkboxes, be sure to include your input <strong>before</strong> your label. Failing to do so will break styles.</p>\n    \t\t<div className=\"row example-container\">\n    \t\t  <fieldset className=\"column column--third\">\n    \t\t    <label>Checkboxes</label>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox1--custom\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox1--custom\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox2--custom\"/>\n    \t\t      <label htmlFor=\"dashing-checkbox2--custom\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox3--custom\"/>\n    \t\t      <label htmlFor=\"dashing-checkbox3--custom\">Option 3 is much longer and indents when it goes beyond one line</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n\n    \t\t  <fieldset className=\"column column--full\">\n    \t\t    <label>Disabled Checkbox</label>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled\" disabled defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-disabled\">Disabled</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled2\" disabled/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-disabled2\">Disabled</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n\n    \t\t  <fieldset className=\"column column--full has-error\">\n    \t\t    <label>Checkboxes with Errors</label>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--error1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox--error1\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--error2\" />\n    \t\t      <label htmlFor=\"dashing-checkbox--error2\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--error3\" />\n    \t\t      <label htmlFor=\"dashing-checkbox--error3\">Option 3</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n\n    \t\t  <fieldset className=\"column column--full has-warning\">\n    \t\t    <label>Checkboxes with Warnings</label>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--warning1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox--warning1\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--warning2\" />\n    \t\t      <label htmlFor=\"dashing-checkbox--warning2\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--warning3\" />\n    \t\t      <label htmlFor=\"dashing-checkbox--warning3\">Option 3</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n\n    \t\t  <fieldset className=\"column column--full\">\n    \t\t    <label>Inline Checkboxes</label>\n    \t\t    <div className=\"checkbox--custom inline\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-inline1\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom inline\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline2\"/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-inline2\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom inline\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline3\"/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-inline3\">Option 3</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n    \t\t</div>\n\n        <CodeToggle>\n{`<!-- Custom Checkboxes -->\n<fieldset class=\"column column--third\">\n  <label>Checkboxes</label>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox1--custom\" checked/>\n    <label for=\"dashing-checkbox1--custom\">Option 1</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox2--custom\"/>\n    <label for=\"dashing-checkbox2--custom\">Option 2</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox3--custom\"/>\n    <label for=\"dashing-checkbox3--custom\">Option 3 is much longer and indents when it goes beyond one line</label>\n  </div>\n</fieldset>\n\n<fieldset class=\"column column--full\">\n  <label>Disabled Checkbox</label>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled\" disabled checked/>\n    <label for=\"dashing-checkbox--custom-disabled\">Disabled</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled2\" disabled/>\n    <label for=\"dashing-checkbox--custom-disabled2\">Disabled</label>\n  </div>\n</fieldset>\n\n<!-- Add the class .has-error to the parent container to apply error styles -->\n<fieldset class=\"column column--full has-error\">\n  <label>Checkboxes with Errors</label>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--error1\" checked/>\n    <label for=\"dashing-checkbox--error1\">Option 1</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--error2\" />\n    <label for=\"dashing-checkbox--error2\">Option 2</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--error3\" />\n    <label for=\"dashing-checkbox--error3\">Option 3</label>\n  </div>\n</fieldset>\n\n<!-- Add the class .has-warning to the parent container to apply warning styles -->\n<fieldset class=\"column column--full has-warning\">\n  <label>Checkboxes with Warnings</label>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--warning1\" checked/>\n    <label for=\"dashing-checkbox--warning1\">Option 1</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--warning2\" />\n    <label for=\"dashing-checkbox--warning2\">Option 2</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--warning3\" />\n    <label for=\"dashing-checkbox--warning3\">Option 3</label>\n  </div>\n</fieldset>\n\n<!-- Add the class .inline to the .checkbox--custom element to list your checkboxes vertially -->\n<fieldset class=\"column column--full\">\n  <label>Inline Checkboxes</label>\n  <div class=\"checkbox--custom inline\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline1\" checked/>\n    <label for=\"dashing-checkbox--custom-inline1\">Option 1</label>\n  </div>\n  <div class=\"checkbox--custom inline\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline2\"/>\n    <label for=\"dashing-checkbox--custom-inline2\">Option 2</label>\n  </div>\n  <div class=\"checkbox--custom inline\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline3\"/>\n    <label for=\"dashing-checkbox--custom-inline3\">Option 3</label>\n  </div>\n</fieldset>`}\n        </CodeToggle>\n        <CodeToggleSCSS>\n{`//Include these variables in your theme file to change the color of your checkbox\n$checkbox--active: $blue !default; //Color of checkbox when checked\n$checkbox--icon: $white !default; //Color of check icon when checked\n$checkbox--focus: $blue-300 !default; //Color of border around checkbox when focused\n$checkbox--disabled: $gray-150 !default; //Color of checkbox when checked and disabled\n$checkbox--icon-disabled: $gray-500 !default; //Color of check icon when checked and disabled`}\n        </CodeToggleSCSS>\n\n        <h2 className=\"example-header\">Default Checkbox Card <button className=\"button button--transparent button--copy-link\" id=\"Default_Checkbox_Card\"></button></h2>\n    \t\t<p>To use smaller checkbox cards apply the <code className=\"example-text\">.checkbox-card--small</code> class to the <code className=\"example-text\">.checkbox-card</code>.</p>\n    \t\t<div className=\"row example-container\">\n    \t\t  <fieldset className=\"column column--full\">\n    \t\t    <label>Checkbox Card</label>\n    \t\t    <div className=\"checkbox-card\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"checkbox-inline1\" className=\"card\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox-card\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline2\" />\n    \t\t      <label htmlFor=\"checkbox-inline2\" className=\"card\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox-card\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline3\" disabled />\n    \t\t      <label htmlFor=\"checkbox-inline3\" className=\"card disabled\">Disabled</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n    \t\t</div>\n\n        <CodeToggle>\n{`<fieldset class=\"column column--full\">\n  <label>Checkbox Card</label>\n  <div class=\"checkbox-card\">\n    <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline1\" checked/>\n    <label for=\"checkbox-inline1\" class=\"card\">Option 1</label>\n  </div>\n  <div class=\"checkbox-card\">\n    <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline2\" />\n    <label for=\"checkbox-inline2\" class=\"card\">Option 2</label>\n  </div>\n  <div class=\"checkbox-card\">\n    <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline3\" disabled />\n    <label for=\"checkbox-inline3\" class=\"card disabled\">Disabled</label>\n  </div>\n</fieldset>`}\n        </CodeToggle>\n        <CodeToggleSCSS>\n{`//Include these variables in your theme file to change the color or padding of your checkbox button cards\n$card-checkbox--active: $blue !default; //Color of checkbox and card when checked\n$card-checkbox--focus: $blue-300 !default; //Color of border around card-checkbox when focused\n$card-checkbox--padding: 1rem !default; //Padding of checkbox`}\n        </CodeToggleSCSS>\n\n        <h2 className=\"example-header\">Small Checkbox Card <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Small_Checkbox_Card\"></button></h2>\n    \t\t<p>To use smaller checkbox cards apply the <code className=\"example-text\">.checkbox-card--small</code> class to the <code className=\"example-text\">.checkbox-card</code>.</p>\n    \t\t<div className=\"row example-container\">\n    \t\t\t<fieldset className=\"column column--full\">\n    \t\t\t\t<label>Small Checkbox Card</label>\n    \t\t\t\t<div className=\"checkbox-card checkbox-card--small\">\n    \t\t\t\t\t<input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small1\" defaultChecked={true}/>\n    \t\t\t\t\t<label htmlFor=\"checkbox-small1\" className=\"card\">Option 1</label>\n    \t\t\t\t</div>\n    \t\t\t\t<div className=\"checkbox-card checkbox-card--small\">\n    \t\t\t\t\t<input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small2\" />\n    \t\t\t\t\t<label htmlFor=\"checkbox-small2\" className=\"card\">Option 2</label>\n    \t\t\t\t</div>\n    \t\t\t\t<div className=\"checkbox-card checkbox-card--small\">\n    \t\t\t\t\t<input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small3\" disabled />\n    \t\t\t\t\t<label htmlFor=\"checkbox-small3\" className=\"card disabled\">Disabled</label>\n    \t\t\t\t</div>\n    \t\t\t</fieldset>\n    \t\t</div>\n\n        <CodeToggle>\n{`<fieldset class=\"column column--full\">\n  <label>Small Checkbox Card</label>\n  <div class=\"checkbox-card checkbox-card--small\">\n    <input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small1\" checked/>\n    <label for=\"checkbox-small1\" class=\"card\">Option 1</label>\n  </div>\n  <div class=\"checkbox-card checkbox-card--small\">\n    <input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small2\" />\n    <label for=\"checkbox-small2\" class=\"card\">Option 2</label>\n  </div>\n  <div class=\"checkbox-card checkbox-card--small\">\n    <input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small3\" disabled />\n    <label for=\"checkbox-small3\" class=\"card disabled\">Disabled</label>\n  </div>\n</fieldset>`}\n        </CodeToggle>\n\n        <h2 className=\"example-header\">Block Checkbox Card <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Block_Checkbox_Card\"></button></h2>\n    \t\t<p>To use block style checkbox cards apply the <code className=\"example-text\">.is-block</code> class to the <code className=\"example-text\">.checkbox-card</code>.</p>\n    \t\t<div className=\"row example-container\">\n    \t\t  <fieldset className=\"column column--half\">\n    \t\t    <label>Block Checkbox Card</label>\n    \t\t    <div className=\"checkbox-card is-block\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"checkbox-block1\" className=\"card\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox-card is-block\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block2\" />\n    \t\t      <label htmlFor=\"checkbox-block2\" className=\"card\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox-card is-block\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block3\" disabled />\n    \t\t      <label htmlFor=\"checkbox-block3\" className=\"card disabled\">Disabled</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n    \t\t</div>\n\n        <CodeToggle>\n{`<fieldset class=\"column column--half\">\n  <label>Block Checkbox Card</label>\n  <div class=\"checkbox-card is-block\">\n    <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block1\" checked/>\n    <label for=\"checkbox-block1\" class=\"card\">Option 1</label>\n  </div>\n  <div class=\"checkbox-card is-block\">\n    <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block2\" />\n    <label for=\"checkbox-block2\" class=\"card\">Option 2</label>\n  </div>\n  <div class=\"checkbox-card is-block\">\n    <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block3\" disabled />\n    <label for=\"checkbox-block3\" class=\"card disabled\">Disabled</label>\n  </div>\n</fieldset>`}\n        </CodeToggle>\n\n      </div>\n    </div>\n    </AppContent>\n  </Layout>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  return (\n    <div className=\"subnav-links\">\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/code\"} activeClassName=\"active\">Code</Link>\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"} activeClassName=\"active\">Guidelines</Link>\n    </div>\n  );\n};\n\nexport default SubNav\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o, visited) {\n\t\t\tvar type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = {};\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = [];\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = _.util.clone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\tif (env.code) {\n\t\t\t\t_.hooks.run('before-highlight', env);\n\t\t\t\tenv.element.textContent = env.code;\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t}\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tvar Token = _.Token;\n\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(^|[^\\\\])[\"']/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n\t'string': {\n\t\tpattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css',\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n\t\talias: 'function'\n\t},\n\t'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\${[^}]+}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null // See below\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\nPrism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript',\n\t\t\tgreedy: true\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\n\t\tif (Prism.plugins.toolbar) {\n\t\t\tPrism.plugins.toolbar.registerButton('download-file', function (env) {\n\t\t\t\tvar pre = env.element.parentNode;\n\t\t\t\tif (!pre || !/pre/i.test(pre.nodeName) || !pre.hasAttribute('data-src') || !pre.hasAttribute('data-download-link')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\t\t\t\tvar a = document.createElement('a');\n\t\t\t\ta.textContent = pre.getAttribute('data-download-link-label') || 'Download';\n\t\t\t\ta.setAttribute('download', '');\n\t\t\t\ta.href = src;\n\t\t\t\treturn a;\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\n})();","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import React from 'react'\nimport Prism from 'prismjs';\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    var script = document.createElement('script');\n    script.src = \"/prism.js\";\n    document.getElementsByTagName('head')[0].appendChild(script);\n\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <div className={this.state.showCode ? 'group-open' : ''}>\n        <div onClick={this.toggleCode} className={this.state.showCode ? 'code-toggle is-open' : 'code-toggle'}><i className=\"icon--code\"></i></div>\n        <pre className={this.state.showCode ? 'language-html show' : 'language-html'}>\n          <code className={this.state.showCode ? 'language-html show' : 'language-html'}>{this.props.children}</code>\n        </pre>\n      </div>\n    )\n  }\n}\nexport default CodeToggle;\n","import React from 'react'\nimport Prism from 'prismjs';\n\nclass CodeToggleSCSS extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    var script = document.createElement('script');\n    script.src = \"/prism.js\";\n    document.getElementsByTagName('head')[0].appendChild(script);\n\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <pre className=\"language-scss\">\n        <code className=\"language-scss\">{this.props.children}</code>\n      </pre>\n    )\n  }\n}\nexport default CodeToggleSCSS;\n"],"sourceRoot":""}