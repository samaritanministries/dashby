{"version":3,"sources":["webpack:///./src/pages/components/icons/code.js"],"names":["currentPageNameLower","toLowerCase","Icons","props","state","showCodeContainer","activeId","iconText","copyCodeText","copyCodeClass","handleClick","bind","copyToClipboard","element","$temp","$","append","val","text","select","document","execCommand","remove","this","setState","setTimeout","name","id","render","className","pageName","iconsData","map","icon","Fragment","key","onClick","iconName","style","display","type","React","Component"],"mappings":"sSAOA,IACMA,EADkB,QACqBC,cAGvCC,E,oBAEJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,mBAAmB,EACnBC,SAAU,KACVC,SAAU,GACVC,aAAc,YACdC,cAAe,MAEjB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,MACnB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,MAVN,E,kHAanBC,gBAAA,SAAgBC,GAAU,IAAD,OACnBC,EAAQC,IAAE,WACdA,IAAE,QAAQC,OAAOF,GACjBA,EAAMG,IAAIF,IAAEF,GAASK,QAAQC,SAC7BC,SAASC,YAAY,QACrBP,EAAMQ,SACNC,KAAKC,SAAS,CACZhB,aAAc,SACdC,cAAe,WAEjBgB,YAAW,WACT,EAAKD,SAAS,CACZhB,aAAc,YACdC,cAAe,SA9BK,M,EAmC1BC,YAAA,SAAYgB,EAAMC,GAChBJ,KAAKC,SAAS,CACZjB,SAAUmB,IAERC,IAAOJ,KAAKnB,MAAME,SACtBiB,KAAKC,SAAS,CACZlB,SAAU,OAGViB,KAAKC,SAAS,CACZlB,SAAUqB,K,EAMhBC,OAAA,WAAU,IAAD,OAEP,OAEE,kBAAC,IAAD,KACE,4BAAQC,UAAU,UAChB,4BA3Dc,SA4Dd,kBAAC,IAAD,CAAQC,SAAU9B,KAEpB,kBAAC,IAAD,KACE,yBAAK6B,UAAU,qBACXE,IAAUC,KAAI,SAACC,GAAD,OACd,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,EAAKN,IACxB,yBACEE,UAAS,iFAAkFI,EAAKN,KAAO,EAAKvB,MAAME,SACtH,SAAW,IACP8B,QAAS,kBAAM,EAAK1B,YAAYuB,EAAKI,SAAUJ,EAAKN,KAAO,EAAKjB,YAAYC,KAAK,KAEjF,uBAAGkB,UAAS,8BAAgCI,EAAKI,WACjD,0BAAMR,UAAU,oBAAoBI,EAAKI,eAK/C,yBAAKR,UAAS,yBAAkD,OAAxBN,KAAKnB,MAAME,SAAoB,GAAK,YAC1E,yBAAKuB,UAAU,aACb,wBAAIA,UAAU,+BAA+BN,KAAKnB,MAAMG,UACxD,yBAAKsB,UAAU,aAAaO,QAAS,kBAAM,EAAKxB,gBAAgB,UAC9D,0BAAMiB,UAAU,qBAAqBS,MAAO,CAAEC,QAAS,iBAAvD,wCAC2ChB,KAAKnB,MAAMG,SADtD,UAGA,4BAAQiC,KAAK,SAASX,UAAS,uCAAyCN,KAAKnB,MAAMK,eAAkBc,KAAKnB,MAAMI,qB,GAhF9GiC,IAAMC,WA2FXxC,a","file":"component---src-pages-components-icons-code-js-c2d1ce95c2f52a8d902b.js","sourcesContent":["import React from 'react'\nimport $ from 'jquery';\nimport { iconsData } from \"./iconData\";\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\n\nconst currentPageName = \"Icons\";\nconst currentPageNameLower = currentPageName.toLowerCase();\nconst millisecondWaitTime = 2000;\n\nclass Icons extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCodeContainer: true,\n      activeId: null,\n      iconText: \"\",\n      copyCodeText: \"Copy Code\",\n      copyCodeClass: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n  }\n\n  copyToClipboard(element) {\n    var $temp = $(\"<input>\");\n    $(\"body\").append($temp);\n    $temp.val($(element).text()).select();\n    document.execCommand(\"copy\");\n    $temp.remove();\n    this.setState({\n      copyCodeText: \"Copied\",\n      copyCodeClass: \"copied\"\n    });\n    setTimeout(() => {\n      this.setState({\n        copyCodeText: \"Copy Code\",\n        copyCodeClass: null\n      });\n    }, millisecondWaitTime);\n  }\n\n  handleClick(name, id) {\n    this.setState({\n      iconText: name\n    })\n    if (id === this.state.activeId) {\n    this.setState({\n      activeId: null\n    });\n    } else {\n      this.setState({\n        activeId: id\n      });\n    }\n }\n\n\n  render() {\n\n    return (\n\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n          <div className=\"grid grid-padding\">\n            { iconsData.map((icon) => (\n              <React.Fragment key={icon.id}>\n                <div\n                  className={`grid--fourth grid--sixth_desktop grid--fourth_mobile example--icon-container ${icon.id === this.state.activeId ?\n              \"active\" : \"\" }`}\n                  onClick={() => this.handleClick(icon.iconName, icon.id) && this.handleClick.bind(this)}\n                >\n                  <i className={`dashing-icon dashing-icon--${icon.iconName}`}></i>\n                  <span className=\"example--caption\">{icon.iconName}</span>\n                </div>\n              </React.Fragment>\n            ))}\n\n            <div className={`icon-code--container ${this.state.activeId === null ? \"\" : \"slideIn\" }`}>\n              <div className=\"icon-code\">\n                <h3 className=\"text-color--white no-margin\">{this.state.iconText}</h3>\n                <div className=\"hover-code\" onClick={() => this.copyToClipboard('code')}>\n                  <code className=\"language-html show\" style={{ display: \"inline-block\" }}>\n                    {`<i class=\"dashing-icon dashing-icon--${this.state.iconText}\"></i>`}\n                  </code>\n                  <button type=\"button\" className={`button--secondary button--copy-code ${this.state.copyCodeClass}`}>{this.state.copyCodeText}</button>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\nexport default Icons;\n"],"sourceRoot":""}