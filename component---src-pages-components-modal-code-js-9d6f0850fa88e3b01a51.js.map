{"version":3,"sources":["webpack:///./src/pages/components/modal/defaultmodal.js","webpack:///./src/pages/components/modal/code.js"],"names":["Modal","render","this","props","show","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","sizeClass","onClick","onClose","children","React","Component","defaultProps","propTypes","PropTypes","func","isRequired","bool","node","string","currentPageNameLower","toLowerCase","cssClassFlag","OverpanelCode","_this","_React$Component","call","toggleModal","setState","isOpen","state","document","body","classList","toggle","location","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_subnavigation__WEBPACK_IMPORTED_MODULE_6__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_7__","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","pathname","_defaultmodal__WEBPACK_IMPORTED_MODULE_3__","class","_components_codetoggle__WEBPACK_IMPORTED_MODULE_8__","object"],"mappings":"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","file":"component---src-pages-components-modal-code-js-9d6f0850fa88e3b01a51.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends React.Component {\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if(!this.props.show) {\n      return null;\n    }\n\n    return (\n      <div className=\"modal-overlay\">\n        <div className={`modal ${this.props.sizeClass}`}>\n          <button onClick={this.props.onClose} className=\"button button--icon button--icon--small button--transparent modal-close\">\n            <i className=\"dashing-icon dashing-icon--close\"></i>\n          </button>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.defaultProps = {\n  sizeClass: \"\"\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node,\n  sizeClass: PropTypes.string\n};\n\nexport default Modal;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Modal from './defaultmodal';\nimport PropTypes from 'prop-types'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\n\nconst currentPageName = \"Modal\";\nconst currentPageNameLower = currentPageName.toLowerCase();\nconst cssClassFlag = \"prevent-scrolling\";\n\nclass OverpanelCode extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: false };\n  }\n\n  toggleModal = () => {\n     this.setState({\n       isOpen: !this.state.isOpen\n     });\n     document.body.classList.toggle(cssClassFlag);\n   }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n          <div className=\"grid grid-padding\">\n\n            <h2 id=\"default-modal\">Default Modal\n              <Link to={location.pathname + \"/#default-modal\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <p>Be sure to apply the class <code className=\"example-text\">.prevent-scrolling</code> to the <code className=\"example-text\">body</code> when the modal is open to prevent the background from scrolling.</p>\n            <div className=\"example-container\">\n              <button onClick={this.toggleModal} className=\"mb-space-m\">Open Modal</button>\n              <Modal\n                show={this.state.isOpen}\n                onClose={this.toggleModal}>\n                  <div class=\"modal-header\">\n                    <h3>Modal Header</h3>\n                  </div>\n\n                  <div class=\"modal-content\">\n                    <p>Modal content</p>\n                  </div>\n\n                  <div class=\"modal-footer align-left\">\n                    Modal footer\n                  </div>\n              </Modal>\n              <CodeToggle>\n{`<div class=\"modal-overlay\">\n  <div class=\"modal\">\n    <button class=\"button button--icon button--icon--small button--transparent modal-close\">\n      <i className=\"dashing-icon dashing-icon--close\"></i>\n    </button>\n\n    <div class=\"modal-header\">\n      <h3>Modal Header</h3>\n    </div>\n\n    <div class=\"modal-content\">\n      <p>Modal content</p>\n    </div>\n\n    <div class=\"modal-footer align-left\">\n      Modal footer\n    </div>\n\n  </div>\n</div>`}\n              </CodeToggle>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"modalSizes\">Modal Sizes\n              <Link to={location.pathname + \"/#modalSizes\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <p className=\"no-margin\">To change the size of the modal, all you need to do is apply an additional class <strong>AFTER</strong> <code className=\"example-text\">.modal</code>.</p>\n            <ul className=\"no-margin\">\n              <li><strong>Small Modal (25rem):</strong> <code className=\"example-text\">modal-small</code></li>\n              <li><strong>Default Modal (35rem)</strong></li>\n              <li><strong>Large Modal (45rem):</strong> <code className=\"example-text\">modal-large</code></li>\n            </ul>\n            <div className=\"example-container\">\n              <div className=\"show-code\">\n              <CodeToggle>\n{`<!-- Without an additional class the modal width will be the default -->\n<div class=\"modal modal-small\">\n...`}\n              </CodeToggle>\n            </div>\n\n\n          </div>\n\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n\nexport default OverpanelCode;\n"],"sourceRoot":""}