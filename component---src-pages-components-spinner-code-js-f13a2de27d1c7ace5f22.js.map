{"version":3,"sources":["webpack:///./src/pages/components/spinner/code.js","webpack:///./src/components/codetoggle-scss.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js"],"names":["currentPageNameLower","toLowerCase","SpinnerCode","props","_this","_React$Component","call","this","state","addSpinner","handleClick","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","setState","prevState","render","location","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_6__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_7__","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","pathname","style","height","_components_codetoggle__WEBPACK_IMPORTED_MODULE_8__","_components_codetoggle_scss__WEBPACK_IMPORTED_MODULE_9__","data-id","onClick","React","Component","propTypes","PropTypes","object","isRequired","CodeToggleSCSS","showCode","toggleCode","componentDidMount","Prism","highlightAll","children","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","insertBefore","keyword","property","statement","boolean","null","operator","rest"],"mappings":"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","file":"component---src-pages-components-spinner-code-js-f13a2de27d1c7ace5f22.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\nimport CodeToggleSCSS from '../../../components/codetoggle-scss'\n\nconst currentPageName = \"Spinner\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nclass SpinnerCode extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  constructor(props) {\n    super(props);\n    this.state = {addSpinner: false};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n   handleClick() {\n    this.setState(prevState => ({\n      addSpinner: !prevState.addSpinner\n    }));\n  }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n          <div className=\"row\">\n            <div className=\"column column--full\">\n              <h2 className=\"example-header no-margin--top\" id=\"defaultSpinner\">Default Spinner\n                <Link to={location.pathname + \"/#defaultSpinner\"} className=\"button button--transparent button--copy-link\"></Link>\n              </h2>\n              <div className=\"row example-container\">\n                <div className=\"column column--full\">\n                  <div className=\"relative\" style={{ height: \"8rem\" }}>\n                    <div className=\"dash-spinner\"></div>\n                  </div>\n                </div>\n              </div>\n              <CodeToggle>\n{`<div class=\"dash-spinner\"></div>`}\n              </CodeToggle>\n              <CodeToggleSCSS>\n{`//Include this variable in your theme file to change the color of your spinner\n$spinner-color: #000;`}\n              </CodeToggleSCSS>\n\n              <h2 className=\"example-header\">Small Spinner<button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Small_Spinner\" /></h2>\n              <div className=\"row example-container\">\n                <div className=\"column column--full\">\n                  <div className=\"relative\" style={{ height: \"5rem\" }}>\n                    <div className=\"dash-spinner small\"></div>\n                  </div>\n                </div>\n              </div>\n              <CodeToggle>\n{`<div class=\"dash-spinner small\"></div>`}\n              </CodeToggle>\n\n              <h2 className=\"example-header\" id=\"buttonSpinner\">Button Spinner\n                <Link to={location.pathname + \"/#buttonSpinner\"} className=\"button button--transparent button--copy-link\"></Link>\n              </h2>\n              <div className=\"row example-container\">\n                <div className=\"column column--full\">\n                  <button onClick={this.handleClick} className={this.state.addSpinner ? 'button button--blue has-spinner' : 'button button--blue'}>\n                    Click me\n                  </button>\n                </div>\n              </div>\n              <CodeToggle>\n{`<button class=\"button button--blue has-spinner\">\n  Click Me\n</button>`}\n              </CodeToggle>\n\n            </div>\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n\nexport default SpinnerCode;\n","import React from 'react'\nimport Prism from 'prismjs'\nimport 'prismjs/components/prism-scss.min.js'\n\nclass CodeToggleSCSS extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <pre className=\"language-scss\">\n        <code className=\"language-scss\">{this.props.children}</code>\n      </pre>\n    )\n  }\n}\nexport default CodeToggleSCSS;\n","Prism.languages.scss=Prism.languages.extend(\"css\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},atrule:{pattern:/@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,inside:{rule:/@[\\w-]+/}},url:/(?:[-a-z]+-)*url(?=\\()/i,selector:{pattern:/(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:\"important\"},placeholder:/%[-\\w]+/,variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}}}),Prism.languages.insertBefore(\"scss\",\"atrule\",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),Prism.languages.scss.property={pattern:/(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,inside:{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}},Prism.languages.insertBefore(\"scss\",\"important\",{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}),Prism.languages.insertBefore(\"scss\",\"function\",{placeholder:{pattern:/%[-\\w]+/,alias:\"selector\"},statement:{pattern:/\\B!(?:default|optional)\\b/i,alias:\"keyword\"},\"boolean\":/\\b(?:true|false)\\b/,\"null\":/\\bnull\\b/,operator:{pattern:/(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,lookbehind:!0}}),Prism.languages.scss.atrule.inside.rest=Prism.languages.scss;"],"sourceRoot":""}