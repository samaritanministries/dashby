{"version":3,"sources":["../../src/bootstrap/index.js"],"names":["_","require","slash","fs","md5File","crypto","del","path","convertHrtime","apiRunnerNode","graphql","store","emitter","loadPlugins","initCache","report","getConfigFile","tracer","globalTracer","process","on","reason","p","panic","extractQueries","runInitialQueries","queryQueue","writePages","writeRedirects","preferDefault","m","default","module","exports","args","spanArgs","parentSpan","childOf","bootstrapSpan","startSpan","program","directory","dispatch","type","payload","activity","activityTimer","start","config","polyfill","warn","end","flattenedPlugins","span","pluginVersions","map","version","hashes","Promise","all","resolve","catch","pluginsHash","createHash","update","JSON","stringify","concat","digest","state","getState","oldPluginsHash","status","PLUGINS_HASH","info","stripIndent","remove","e","error","ensureDir","srcDir","__dirname","siteDir","tryRequire","copy","clobber","ensureDirSync","emptyDir","err","hasAPIFile","env","plugin","skipSSR","undefined","envAPIs","Array","isArray","length","join","ssrPlugins","filter","options","pluginOptions","browserPlugins","browserPluginsRequires","browserAPIRunner","sSRAPIRunner","readFileSync","ssrPluginsRequires","writeFileSync","extensions","apiResults","traceId","flattenDeep","graphqlRunner","query","context","schema","waitForCascadingActions","printConflicts","NODE_ENV","startQueries","hrtime","stats","getStats","setStatus","total","peak","seconds","toFixed","checkJobsDone","debounce","jobs","active","log","uptime","then","finish","emit"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst _ = require(`lodash`)\nconst slash = require(`slash`)\nconst fs = require(`fs-extra`)\nconst md5File = require(`md5-file/promise`)\nconst crypto = require(`crypto`)\nconst del = require(`del`)\nconst path = require(`path`)\nconst convertHrtime = require(`convert-hrtime`)\n\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst { graphql } = require(`graphql`)\nconst { store, emitter } = require(`../redux`)\nconst loadPlugins = require(`./load-plugins`)\nconst { initCache } = require(`../utils/cache`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst getConfigFile = require(`./get-config-file`)\nconst tracer = require(`opentracing`).globalTracer()\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason, p) => {\n  report.panic(reason)\n})\n\nconst {\n  extractQueries,\n} = require(`../internal-plugins/query-runner/query-watcher`)\nconst {\n  runInitialQueries,\n} = require(`../internal-plugins/query-runner/page-query-runner`)\nconst queryQueue = require(`../internal-plugins/query-runner/query-queue`)\nconst { writePages } = require(`../internal-plugins/query-runner/pages-writer`)\nconst {\n  writeRedirects,\n} = require(`../internal-plugins/query-runner/redirects-writer`)\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`./log-line-function`)\n\nconst preferDefault = m => (m && m.default) || m\n\ntype BootstrapArgs = {\n  directory: string,\n  prefixPaths?: boolean,\n  parentSpan: Object,\n}\n\nmodule.exports = async (args: BootstrapArgs) => {\n  const spanArgs = args.parentSpan ? { childOf: args.parentSpan } : {}\n  const bootstrapSpan = tracer.startSpan(`bootstrap`, spanArgs)\n\n  const program = {\n    ...args,\n    // Fix program directory path for windows env.\n    directory: slash(args.directory),\n  }\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  // Try opening the site's gatsby-config.js file.\n  let activity = report.activityTimer(`open and validate gatsby-config`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const config = await preferDefault(\n    getConfigFile(program.directory, `gatsby-config`)\n  )\n\n  if (config && config.polyfill) {\n    report.warn(\n      `Support for custom Promise polyfills has been removed in Gatsby v2. We only support Babel 7's new automatic polyfilling behavior.`\n    )\n  }\n\n  store.dispatch({\n    type: `SET_SITE_CONFIG`,\n    payload: config,\n  })\n\n  activity.end()\n\n  activity = report.activityTimer(`load plugins`)\n  activity.start()\n  const flattenedPlugins = await loadPlugins(config)\n  activity.end()\n\n  // onPreInit\n  activity = report.activityTimer(`onPreInit`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreInit`, { parentSpan: activity.span })\n  activity.end()\n\n  // Delete html and css files from the public directory as we don't want\n  // deleted pages and styles from previous builds to stick around.\n  activity = report.activityTimer(\n    `delete html and css files from previous builds`,\n    {\n      parentSpan: bootstrapSpan,\n    }\n  )\n  activity.start()\n  await del([\n    `public/*.{html,css}`,\n    `public/**/*.{html,css}`,\n    `!public/static`,\n    `!public/static/**/*.{html,css}`,\n  ])\n  activity.end()\n\n  activity = report.activityTimer(`initialize cache`)\n  activity.start()\n  // Check if any plugins have been updated since our last run. If so\n  // we delete the cache is there's likely been changes\n  // since the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  const hashes = await Promise.all([\n    md5File(`package.json`),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-config.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-node.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n  ])\n  const pluginsHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pluginVersions.concat(hashes)))\n    .digest(`hex`)\n  let state = store.getState()\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    report.info(report.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's not any stale\n      data\n    `)\n  }\n\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash) {\n    try {\n      await fs.remove(`${program.directory}/.cache`)\n    } catch (e) {\n      report.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  initCache()\n\n  // Ensure the public/static directory\n  await fs.ensureDir(`${program.directory}/public/static`)\n\n  activity.end()\n\n  // Copy our site files to the root of the site.\n  activity = report.activityTimer(`copy gatsby files`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = `${program.directory}/.cache`\n  const tryRequire = `${__dirname}/../utils/test-require-error.js`\n  try {\n    await fs.copy(srcDir, siteDir, {\n      clobber: true,\n    })\n    await fs.copy(tryRequire, `${siteDir}/test-require-error.js`, {\n      clobber: true,\n    })\n    await fs.ensureDirSync(`${program.directory}/.cache/json`)\n\n    // Ensure .cache/fragments exists and is empty. We want fragments to be\n    // added on every run in response to data as fragments can only be added if\n    // the data used to create the schema they're dependent on is available.\n    await fs.emptyDir(`${program.directory}/.cache/fragments`)\n  } catch (err) {\n    report.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin) => {\n    // The plugin loader has disabled SSR APIs for this plugin. Usually due to\n    // multiple implementations of an API that can only be implemented once\n    if (env === `ssr` && plugin.skipSSR === true) return undefined\n\n    const envAPIs = plugin[`${env}APIs`]\n    if (envAPIs && Array.isArray(envAPIs) && envAPIs.length > 0) {\n      return slash(path.join(plugin.resolve, `gatsby-${env}`))\n    }\n    return undefined\n  }\n\n  const ssrPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n  const browserPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPluginsRequires = browserPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n\n  const browserAPIRunner = `module.exports = [${browserPluginsRequires}]\\n`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    report.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser-plugins.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // onPreBootstrap\n  activity = report.activityTimer(`onPreBootstrap`)\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`)\n  activity.end()\n\n  // Source nodes\n  activity = report.activityTimer(`source and transform nodes`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../utils/source-nodes`)({ parentSpan: activity.span })\n  activity.end()\n\n  // Create Schema.\n  activity = report.activityTimer(`building schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`)({ parentSpan: activity.span })\n  activity.end()\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.js`, `.jsx`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n    parentSpan: bootstrapSpan,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const graphqlRunner = (query, context = {}) => {\n    const schema = store.getState().schema\n    return graphql(schema, query, context, context, context)\n  }\n\n  // Collect pages.\n  activity = report.activityTimer(`createPages`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`createPages`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPages`,\n    waitForCascadingActions: true,\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  // A variant on createPages for plugins that want to\n  // have full control over adding/removing pages. The normal\n  // \"createPages\" API is called every time (during development)\n  // that data changes.\n  activity = report.activityTimer(`createPagesStatefully`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`createPagesStatefully`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPagesStatefully`,\n    waitForCascadingActions: true,\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  activity = report.activityTimer(`onPreExtractQueries`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreExtractQueries`, { parentSpan: activity.span })\n  activity.end()\n\n  // Update Schema for SitePage.\n  activity = report.activityTimer(`update schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`)({ parentSpan: activity.span })\n  activity.end()\n\n  require(`../schema/type-conflict-reporter`).printConflicts()\n\n  // Extract queries\n  activity = report.activityTimer(`extract queries from components`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await extractQueries()\n  activity.end()\n\n  // Start the createPages hot reloader.\n  if (process.env.NODE_ENV !== `production`) {\n    require(`./page-hot-reloader`)(graphqlRunner)\n  }\n\n  // Run queries\n  activity = report.activityTimer(`run graphql queries`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const startQueries = process.hrtime()\n  queryQueue.on(`task_finish`, () => {\n    const stats = queryQueue.getStats()\n    activity.setStatus(\n      `${stats.total}/${stats.peak} ${(\n        stats.total / convertHrtime(process.hrtime(startQueries)).seconds\n      ).toFixed(2)} queries/second`\n    )\n  })\n  await runInitialQueries(activity)\n  activity.end()\n\n  // Write out files.\n  activity = report.activityTimer(`write out page data`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  try {\n    await writePages()\n  } catch (err) {\n    report.panic(`Failed to write out page data`, err)\n  }\n  activity.end()\n\n  // Write out redirects.\n  activity = report.activityTimer(`write out redirect data`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await writeRedirects()\n  activity.end()\n\n  const checkJobsDone = _.debounce(resolve => {\n    const state = store.getState()\n    if (state.jobs.active.length === 0) {\n      report.log(``)\n      report.info(`bootstrap finished - ${process.uptime()} s`)\n      report.log(``)\n\n      // onPostBootstrap\n      activity = report.activityTimer(`onPostBootstrap`, {\n        parentSpan: bootstrapSpan,\n      })\n      activity.start()\n      apiRunnerNode(`onPostBootstrap`, { parentSpan: activity.span }).then(\n        () => {\n          activity.end()\n          bootstrapSpan.finish()\n          resolve({ graphqlRunner })\n        }\n      )\n    }\n  }, 100)\n\n  if (store.getState().jobs.active.length === 0) {\n    // onPostBootstrap\n    activity = report.activityTimer(`onPostBootstrap`, {\n      parentSpan: bootstrapSpan,\n    })\n    activity.start()\n    await apiRunnerNode(`onPostBootstrap`, { parentSpan: activity.span })\n    activity.end()\n\n    bootstrapSpan.finish()\n\n    report.log(``)\n    report.info(`bootstrap finished - ${process.uptime()} s`)\n    report.log(``)\n    emitter.emit(`BOOTSTRAP_FINISHED`)\n    return {\n      graphqlRunner,\n    }\n  } else {\n    return new Promise(resolve => {\n      // Wait until all side effect jobs are finished.\n      emitter.on(`END_JOB`, () => checkJobsDone(resolve))\n    })\n  }\n}\n"],"file":"index.js"}