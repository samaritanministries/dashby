{"version":3,"sources":["webpack:///./src/pages/components/banner/guidelines.js","webpack:///./src/components/subnavigation.js"],"names":["currentPageNameLower","toLowerCase","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_3__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","style","marginTop","marginBottom","_ref","sectionName","getPageName","getSectionName","activeClassName"],"mappings":"yJAQMA,EADkB,SACqBC,cAE7CC,EAAA,mBAAe,OACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAChBJ,EAAAC,EAAAC,cAAA,UANkB,UAOlBF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,SAAUT,KAEpBG,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,SAAb,yLAEAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,6CAAd,gBACEJ,EAAAC,EAAAC,cAAA,wFAA+EF,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAG,kCAAT,WAA/E,0DACAT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,mCAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gDACbJ,EAAAC,EAAAC,cAAA,0CAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,2CACbJ,EAAAC,EAAAC,cAAA,0KAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,4CACbJ,EAAAC,EAAAC,cAAA,oEAKNF,EAAAC,EAAAC,cAAA,cAAYE,UAAU,OAAOM,MAAO,CAAEC,UAAW,SAC/CX,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,uDAA8CF,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAG,yBAAT,SAA9C,6FAGFT,EAAAC,EAAAC,cAAA,MAAIE,UAAU,8BAAd,aACAJ,EAAAC,EAAAC,cAAA,kIACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCAAiCM,MAAO,CAAEE,aAAc,SACrEZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,iCAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,0GC7BpBH,EAAA,EAzBe,SAAAc,GAA+B,IAA5BP,EAA4BO,EAA5BP,SAAUQ,EAAkBD,EAAlBC,YAEP,MAAfA,IACFA,EAAc,cAGC,aAAbR,EACFA,EAAW,WACW,qBAAbA,EACTA,EAAW,mBACW,kBAAbA,IACTA,EAAW,iBAGb,IAAMS,EAAcT,EACdU,EAAiBF,EAEvB,OACEd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAKO,EAAiB,IAAMD,EAAe,QAASE,gBAAgB,UAA1E,QACAjB,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAKO,EAAiB,IAAMD,EAAe,cAAeE,gBAAgB,UAAhF","file":"component---src-pages-components-banner-guidelines-js-906a4f471a4ec126587b.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\n\nconst currentPageName = \"Banner\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n      <div className=\"row\">\n        <div className=\"column column--full\">\n          <p className=\"intro\">Banners can be used to show important information to a user. Card banners should have text that is directly related to an action that has been completed or is about to be performed.</p>\n\n          <h2 className=\"has-number has-number--one no-margin--top\">Banner Types</h2>\n            <p>Common types of card banners are success, warning, error, and generic. Like <Link to=\"/components/actions/guidelines\">Actions</Link>, banners should use purposeful color when using them.</p>\n            <div className=\"image-container double-padding\">\n              <div className=\"banner-container\">\n                <div className=\"card-banner\">\n                  <p>This is a card banner</p>\n                </div>\n                <div className=\"card-banner has-success\">\n                  <i className=\"dashing-icon dashing-icon--checkmark-filled\"></i>\n                  <p>Your file is ready to upload</p>\n                </div>\n                <div className=\"card-banner has-warning\">\n                  <i className=\"dashing-icon dashing-icon--info-filled\"></i>\n                  <p>You may only submit bill information and upload images for one statement at a time. If you have multiple statements to submit, please enter them separately.</p>\n                </div>\n                <div className=\"card-banner has-error\">\n                  <i className=\"dashing-icon dashing-icon--alert-filled\"></i>\n                  <p>You must complete all fields below before continuing</p>\n                </div>\n              </div>\n            </div>\n\n            <blockquote className=\"tips\" style={{ marginTop: \"2rem\" }}>\n              <strong>Tip: Icons in Banners</strong>\n              <p>To add more attention to card banners, use <Link to=\"components/icons/code\">icons</Link> before the banner text. Banners are setup to automatically add the appropriate spacing.</p>\n            </blockquote>\n\n            <h2 className=\"has-number has-number--two\">Placement</h2>\n            <p>When using a card banner, it should be placed directly under the card header to draw the user's attention right away.</p>\n            <div className=\"image-container double-padding\" style={{ marginBottom: \"2rem\" }}>\n              <div className=\"card card--example-titles\">\n                <div className=\"card-header\">\n                  <h3>Membership Options</h3>\n                </div>\n                <div className=\"card-content\">\n                  <div className=\"card-banner\">\n                    <p>This is a card banner</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n        </div>\n      </div>\n    </AppContent>\n  </Layout>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  return (\n    <div className=\"subnav-links\">\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/code\"} activeClassName=\"active\">Code</Link>\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"} activeClassName=\"active\">Guidelines</Link>\n    </div>\n  );\n};\n\nexport default SubNav\n"],"sourceRoot":""}