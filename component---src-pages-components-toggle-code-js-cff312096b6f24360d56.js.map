{"version":3,"sources":["webpack:///./src/pages/components/toggle/code.js","webpack:///./src/components/subnavigation.js","webpack:///./src/components/codetoggle.js","webpack:///./src/components/codetoggle-scss.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_subnavigation__WEBPACK_IMPORTED_MODULE_2__","_components_appcontent__WEBPACK_IMPORTED_MODULE_3__","_components_codetoggle__WEBPACK_IMPORTED_MODULE_4__","_components_codetoggle_scss__WEBPACK_IMPORTED_MODULE_5__","currentPageNameLower","toLowerCase","a","createElement","className","pageName","data-id","id","htmlFor","name","type","gatsby__WEBPACK_IMPORTED_MODULE_1__","SubNav","_ref","sectionName","getPageName","getSectionName","to","activeClassName","CodeToggle","props","_this","_React$Component","call","this","state","showCode","toggleCode","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","setState","prevState","componentDidMount","window","Prism","highlightAll","render","react__WEBPACK_IMPORTED_MODULE_3___default","onClick","children","React","Component","CodeToggleSCSS"],"mappings":"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","file":"component---src-pages-components-toggle-code-js-cff312096b6f24360d56.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\nimport CodeToggleSCSS from '../../../components/codetoggle-scss'\n\nconst currentPageName = \"Toggle\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n      <div className=\"row\">\n        <div className=\"column column--full\">\n        <h2 className=\"example-header no-margin--top\">Custom Toggle Switch <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Custom_Toggle_Switch\" /></h2>\n        <div className=\"row example-container\">\n          <fieldset className=\"column column--full\">\n            <label className=\"inline\" htmlFor=\"switch1\">Switch</label>\n            <div className=\"switch\">\n              <input name=\"switch\" type=\"checkbox\" className=\"switch--checkbox\" id=\"switch1\" />\n              <label className=\"switch--label\" htmlFor=\"switch1\">\n                <span className=\"switch--inner\"></span>\n                <span className=\"switch--handle\"></span>\n              </label>\n            </div>\n          </fieldset>\n        </div>\n          <CodeToggle>\n{`<!-- Custom Toggle Switch -->\n<fieldset class=\"column column--full\">\n  <label class=\"inline\" for=\"switch1\">Switch</label>\n  <div class=\"switch\">\n    <input name=\"switch\" type=\"checkbox\" class=\"switch--checkbox\" id=\"switch1\" />\n    <label class=\"switch--label\" for=\"switch1\">\n      <span class=\"switch--inner\"></span>\n      <span class=\"switch--handle\"></span>\n    </label>\n  </div>\n</fieldset>`}\n          </CodeToggle>\n          <CodeToggleSCSS>\n{`//Include these variables in your theme file to change the color of your switch\n$switch--on: $blue !default; //Color of switch when on\n$switch--off: $gray-250 !default; //Color of switch when off\n}`}\n          </CodeToggleSCSS>\n\n        </div>\n      </div>\n    </AppContent>\n  </Layout>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  return (\n    <div className=\"subnav-links\">\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/code\"} activeClassName=\"active\">Code</Link>\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"} activeClassName=\"active\">Guidelines</Link>\n    </div>\n  );\n};\n\nexport default SubNav\n","import React from 'react'\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    var Prism = window.Prism;\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <div className={this.state.showCode ? 'group-open' : ''}>\n        <div onClick={this.toggleCode} className={this.state.showCode ? 'code-toggle is-open' : 'code-toggle'}><i className=\"icon--code\"></i></div>\n        <pre className={this.state.showCode ? 'language-html show' : 'language-html'}>\n          <code className={this.state.showCode ? 'language-html show' : 'language-html'}>{this.props.children}</code>\n        </pre>\n      </div>\n    )\n  }\n}\nexport default CodeToggle;\n","import React from 'react'\n\nclass CodeToggleSCSS extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    var Prism = window.Prism;\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <pre className=\"language-scss\">\n        <code className=\"language-scss\">{this.props.children}</code>\n      </pre>\n    )\n  }\n}\nexport default CodeToggleSCSS;\n"],"sourceRoot":""}