{"version":3,"sources":["../../src/utils/webpack-utils.js"],"names":["os","require","autoprefixer","flexbugs","UglifyPlugin","MiniCssExtractPlugin","builtinPlugins","createBabelConfig","eslintConfig","module","exports","stage","program","assetRelativeRoot","vendorRegex","supportedBrowsers","browserlist","PRODUCTION","includes","babelConfig","isSSR","makeExternalOnly","original","options","rule","include","makeInternalOnly","exclude","ident","loaders","json","loader","resolve","yaml","null","raw","style","miniCssExtract","css","sourceMap","camelCase","localIdentName","postcss","cssnano","plugins","browsers","minimze","postcssOpts","flexbox","filter","Boolean","file","name","url","limit","js","eslint","schema","imports","rules","test","use","enforce","fonts","images","audioVideo","importLoaders","unshift","internal","external","cssModules","modules","uglify","uglifyOptions","cache","parallel","cpus","length","compress","drop_console","ecma","ie8","extractText","filename","chunkFilename","moment","ignore"],"mappings":"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","sourcesContent":["// @flow\nconst os = require(`os`)\n\nconst autoprefixer = require(`autoprefixer`)\nconst flexbugs = require(`postcss-flexbugs-fixes`)\nconst UglifyPlugin = require(`uglifyjs-webpack-plugin`)\nconst MiniCssExtractPlugin = require(`mini-css-extract-plugin`)\n\nconst builtinPlugins = require(`./webpack-plugins`)\nconst { createBabelConfig } = require(`./babel-config`)\nconst eslintConfig = require(`./eslint-config`)\n\ntype LoaderSpec = string | { loader: string, options?: Object }\ntype LoaderResolver<T: Object> = (options?: T) => LoaderSpec\n\ntype Condition = string | RegExp | RegExp[]\n\ntype Rule = {\n  test?: Condition,\n  use: LoaderSpec[],\n  exclude?: Condition,\n  include?: Condition,\n}\n\ntype RuleFactory<T: Object> = (options?: T) => Rule\n\ntype ContextualRuleFactory = RuleFactory<*> & {\n  internal: RuleFactory<*>,\n  external: RuleFactory<*>,\n}\n\ntype PluginInstance = any\ntype PluginFactory = (...args?: any) => PluginInstance\n\ntype BuiltinPlugins = typeof builtinPlugins\n\ntype Stage = \"develop\" | \"develop-html\" | \"build-javascript\" | \"build-html\"\n\n/**\n * Configuration options for `createUtils`\n */\nexport type WebpackUtilsOptions = { stage: Stage, program: any }\n\n/**\n * Utils that produce webpack `loader` objects\n */\nexport type LoaderUtils = {\n  json: LoaderResolver<*>,\n  yaml: LoaderResolver<*>,\n  null: LoaderResolver<*>,\n  raw: LoaderResolver<*>,\n\n  style: LoaderResolver<*>,\n  css: LoaderResolver<*>,\n  postcss: LoaderResolver<{\n    browsers?: string[],\n    plugins?: Array<any> | ((loader: any) => Array<any>),\n    minimze?: boolean,\n    cssnano?: any,\n  }>,\n\n  file: LoaderResolver<*>,\n  url: LoaderResolver<*>,\n  js: LoaderResolver<*>,\n\n  miniCssExtract: LoaderResolver<*>,\n  imports: LoaderResolver<*>,\n  exports: LoaderResolver<*>,\n\n  eslint: LoaderResolver<*>,\n}\n\n/**\n * Utils that prodcue webpack rule objects\n */\nexport type RuleUtils = {\n  /**\n   * Handles Javascript compilation via babel\n   */\n  js: RuleFactory<*>,\n  yaml: RuleFactory<*>,\n  fonts: RuleFactory<*>,\n  images: RuleFactory<*>,\n  audioVideo: RuleFactory<*>,\n\n  css: ContextualRuleFactory,\n  cssModules: RuleFactory<*>,\n  postcss: ContextualRuleFactory,\n\n  eslint: RuleFactory<*>,\n}\n\nexport type PluginUtils = BuiltinPlugins & {\n  extractText: PluginFactory,\n  uglify: PluginFactory,\n  moment: PluginFactory,\n}\n\n/**\n * webpack atoms namespace\n */\nexport type WebpackUtils = {\n  loaders: LoaderUtils,\n\n  rules: RuleUtils,\n\n  plugins: PluginUtils,\n}\n\n/**\n * A factory method that produces an atoms namespace\n */\nmodule.exports = async ({\n  stage,\n  program,\n}: {\n  stage: Stage,\n  program: any,\n}): Promise<WebpackUtilsOptions> => {\n  const assetRelativeRoot = `static/`\n  const vendorRegex = /(node_modules|bower_components)/\n  const supportedBrowsers = program.browserlist\n\n  const PRODUCTION = !stage.includes(`develop`)\n\n  const babelConfig = await createBabelConfig(program, stage)\n\n  const isSSR = stage.includes(`html`)\n\n  const makeExternalOnly = (original: RuleFactory<*>) => (\n    options = {}\n  ): Rule => {\n    let rule = original(options)\n    rule.include = vendorRegex\n    return rule\n  }\n\n  const makeInternalOnly = (original: RuleFactory<*>) => (\n    options = {}\n  ): Rule => {\n    let rule = original(options)\n    rule.exclude = vendorRegex\n    return rule\n  }\n\n  let ident = 0\n\n  const loaders: LoaderUtils = {\n    json: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`json-loader`),\n      }\n    },\n\n    yaml: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`yaml-loader`),\n      }\n    },\n\n    null: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`null-loader`),\n      }\n    },\n\n    raw: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`raw-loader`),\n      }\n    },\n\n    style: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`style-loader`),\n      }\n    },\n\n    miniCssExtract: (options = {}) => {\n      return {\n        options,\n        // use MiniCssExtractPlugin only on production builds\n        loader: PRODUCTION\n          ? MiniCssExtractPlugin.loader\n          : require.resolve(`style-loader`),\n      }\n    },\n\n    css: (options = {}) => {\n      return {\n        loader: isSSR\n          ? require.resolve(`css-loader/locals`)\n          : require.resolve(`css-loader`),\n        options: {\n          sourceMap: !PRODUCTION,\n          camelCase: `dashesOnly`,\n          // https://github.com/webpack-contrib/css-loader/issues/406\n          localIdentName: `[name]--[local]--[hash:base64:5]`,\n          ...options,\n        },\n      }\n    },\n\n    postcss: (options = {}) => {\n      let {\n        cssnano,\n        plugins,\n        browsers = supportedBrowsers,\n        minimze = PRODUCTION,\n        ...postcssOpts\n      } = options\n\n      return {\n        loader: require.resolve(`postcss-loader`),\n        options: {\n          ident: `postcss-${++ident}`,\n          sourceMap: !PRODUCTION,\n          plugins: loader => {\n            plugins =\n              (typeof plugins === `function` ? plugins(loader) : plugins) || []\n\n            return [\n              minimze && require(`cssnano`)(cssnano),\n              flexbugs,\n              autoprefixer({ browsers, flexbox: `no-2009` }),\n              ...plugins,\n            ].filter(Boolean)\n          },\n          ...postcssOpts,\n        },\n      }\n    },\n\n    file: (options = {}) => {\n      return {\n        loader: require.resolve(`url-loader`),\n        options: {\n          name: `${assetRelativeRoot}[name]-[hash].[ext]`,\n          ...options,\n        },\n      }\n    },\n\n    url: (options = {}) => {\n      return {\n        loader: require.resolve(`url-loader`),\n        options: {\n          limit: 10000,\n          name: `${assetRelativeRoot}[name]-[hash].[ext]`,\n          ...options,\n        },\n      }\n    },\n\n    js: (options = babelConfig) => {\n      return {\n        options,\n        loader: require.resolve(`babel-loader`),\n      }\n    },\n\n    eslint: (schema = ``) => {\n      const options = eslintConfig(schema)\n\n      return {\n        options,\n        loader: require.resolve(`eslint-loader`),\n      }\n    },\n\n    imports: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`imports-loader`),\n      }\n    },\n\n    exports: (options = {}) => {\n      return {\n        options,\n        loader: require.resolve(`exports-loader`),\n      }\n    },\n  }\n\n  /**\n   * Rules\n   */\n  const rules = {}\n\n  /**\n   * Javascript loader via babel, excludes node_modules\n   */\n  {\n    let js = options => {\n      return {\n        test: /\\.jsx?$/,\n        exclude: vendorRegex,\n        use: [loaders.js(options)],\n      }\n    }\n\n    rules.js = js\n  }\n\n  {\n    let eslint = schema => {\n      return {\n        enforce: `pre`,\n        test: /\\.jsx?$/,\n        exclude: vendorRegex,\n        use: [loaders.eslint(schema)],\n      }\n    }\n\n    rules.eslint = eslint\n  }\n\n  rules.yaml = () => {\n    return {\n      test: /\\.ya?ml/,\n      use: [loaders.json(), loaders.yaml()],\n    }\n  }\n\n  /**\n   * Font loader\n   */\n  rules.fonts = () => {\n    return {\n      use: [loaders.url()],\n      test: /\\.(eot|otf|ttf|woff(2)?)(\\?.*)?$/,\n    }\n  }\n\n  /**\n   * Loads image assets, inlines images via a data URI if they are below\n   * the size threshold\n   */\n  rules.images = () => {\n    return {\n      use: [loaders.url()],\n      test: /\\.(ico|svg|jpg|jpeg|png|gif|webp)(\\?.*)?$/,\n    }\n  }\n\n  /**\n   * Loads audio or video assets\n   */\n  rules.audioVideo = () => {\n    return {\n      use: [loaders.file()],\n      test: /\\.(mp4|webm|wav|mp3|m4a|aac|oga|flac)$/,\n    }\n  }\n\n  /**\n   * CSS style loader.\n   */\n  {\n    const css = ({ browsers, ...options } = {}) => {\n      const use = [\n        loaders.css({ ...options, importLoaders: 1 }),\n        loaders.postcss({ browsers }),\n      ]\n      if (!isSSR) use.unshift(loaders.miniCssExtract())\n\n      return {\n        use,\n        test: /\\.css$/,\n      }\n    }\n\n    /**\n     * CSS style loader, _excludes_ node_modules.\n     */\n    css.internal = makeInternalOnly(css)\n    css.external = makeExternalOnly(css)\n\n    const cssModules = options => {\n      const rule = css({ ...options, modules: true })\n      delete rule.exclude\n      rule.test = /\\.module\\.css$/\n      return rule\n    }\n\n    rules.css = css\n    rules.cssModules = cssModules\n  }\n\n  /**\n   * PostCSS loader.\n   */\n  {\n    const postcss = options => {\n      return {\n        test: /\\.css$/,\n        use: [loaders.css({ importLoaders: 1 }), loaders.postcss(options)],\n      }\n    }\n\n    /**\n     * PostCSS loader, _excludes_ node_modules.\n     */\n    postcss.internal = makeInternalOnly(postcss)\n    postcss.external = makeExternalOnly(postcss)\n    rules.postcss = postcss\n  }\n  /**\n   * Plugins\n   */\n  const plugins = { ...builtinPlugins }\n\n  /**\n   * Minify javascript code without regard for IE8. Attempts\n   * to parallelize the work to save time. Generally only add in Production\n   */\n  plugins.uglify = ({ uglifyOptions, ...options } = {}) =>\n    new UglifyPlugin({\n      cache: true,\n      parallel: os.cpus().length - 1,\n      exclude: /\\.min\\.js/,\n      sourceMap: true,\n      uglifyOptions: {\n        compress: {\n          drop_console: true,\n        },\n        ecma: 8,\n        ie8: false,\n        ...uglifyOptions,\n      },\n      ...options,\n    })\n\n  /**\n   * Extracts css requires into a single file;\n   * includes some reasonable defaults\n   */\n  plugins.extractText = options =>\n    new MiniCssExtractPlugin({\n      filename: `[name].[contenthash].css`,\n      chunkFilename: `[name].[contenthash].css`,\n      ...options,\n    })\n\n  plugins.moment = () => plugins.ignore(/^\\.\\/locale$/, /moment$/)\n\n  return {\n    loaders,\n    rules: (rules: RuleUtils),\n    plugins: (plugins: PluginUtils),\n  }\n}\n"],"file":"webpack-utils.js"}