{"version":3,"sources":["webpack:///./src/pages/components/cards/code.js","webpack:///./src/components/subnavigation.js","webpack:///./src/components/codetoggle.js"],"names":["currentPageNameLower","toLowerCase","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_2__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_3__","id","_components_codetoggle__WEBPACK_IMPORTED_MODULE_4__","data-id","href","target","rel","type","_ref","sectionName","getPageName","getSectionName","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","activeClassName","CodeToggle","props","_this","_React$Component","call","this","state","showCode","toggleCode","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","setState","prevState","componentDidMount","window","Prism","highlightAll","render","react__WEBPACK_IMPORTED_MODULE_3___default","onClick","children","Component"],"mappings":"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","file":"component---src-pages-components-cards-code-js-b9ea5be91780f6c3a0e7.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\n\nconst currentPageName = \"Cards\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n    <div className=\"row\">\n      <div className=\"column column--full\">\n\n        <h2 className=\"example-header no-margin--top\">Default Card <button className=\"button button--transparent button--copy-link\" id=\"Default_Card\"></button></h2>\n        <div className=\"row example-container\">\n          <div className=\"column column--full\">\n            <div className=\"card\">\n              <div className=\"card--header\">\n                <h3>This is a simple card</h3>\n              </div>\n\n              <div className=\"card--content\">\n                <p className=\"remove-margin--top\">Dashing Cards are used to contain and display any type of content.</p>\n                <p className=\"remove-margin--bottom\">This is an example of a simple card. Its little markup makes it very convenient to use.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <CodeToggle>\n{`<div class=\"card\">\n  <div class=\"card--header\">\n    <h3>This is a simple card</h3>\n  </div>\n\n  <div class=\"card--content\">\n    <p class=\"remove-margin--top\">Dashing Cards are used to contain and display any type of content.</p>\n    <p class=\"remove-margin--bottom\">This is an example of a simple card. Its little markup makes it very convenient to use.</p>\n  </div>\n</div>`}\n        </CodeToggle>\n\n        <h2 className=\"example-header\">Centered content in a card <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Centered_Content_In_A_Card\"></button></h2>\n        <div className=\"row example-container\">\n          <div className=\"column column--full\">\n            <div className=\"card center-align\">\n              <div className=\"card--header\">\n                <h3>This is a simple card</h3>\n              </div>\n\n              <div className=\"card--content\">\n                <p>To center content within a card, apply the <a href=\"https://github.com/dashframework/dashing/blob/2b4f977910aa2cd9c54309d08aae915af283fda0/sass/modules/typography/_typography.scss#L19-L21\" target=\"_blank\" rel=\"noopener noreferrer\">alignment utility class</a> <code className=\"example-text\">.center-align</code> to a <code className=\"example-text\">.card</code> element. If you want more control, apply the utility class to the <code className=\"example-text\">.card--header</code>, <code className=\"example-text\">.card--content</code>, or <code className=\"example-text\">.card--footer</code> elements.</p>\n              </div>\n\n              <div className=\"card--footer\">\n                <button className=\"button button--blue\">Centered Button</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CodeToggle>\n{`<div class=\"card center-align\">\n  <div class=\"card--header\">\n    <h3>This is a simple card</h3>\n  </div>\n\n  <div class=\"card--content\">\n    <p>To center content within a card, apply the <a href=\"https://github.com/dashframework/dashing/blob/2b4f977910aa2cd9c54309d08aae915af283fda0/sass/modules/typography/_typography.scss#L19-L21\">alignment utility class</a> <code class=\"example-text\">.center-align</code> to a <code class=\"example-text\">.card</code> element. If you want more control, apply the utility class to the <code class=\"example-text\">.card--header</code>, <code class=\"example-text\">.card--content</code>, or <code class=\"example-text\">.card--footer</code> elements.</p>\n  </div>\n\n  <div class=\"card--footer\">\n    <button class=\"button button--blue\">Centered Button</button>\n  </div>\n</div>`}\n        </CodeToggle>\n\n        <h2 className=\"example-header\">Separation within cards <button className=\"button button--transparent button--copy-link\" id=\"Seperation_Within_Cards\"></button></h2>\n        <div className=\"row example-container\">\n          <div className=\"column column--full\">\n            <div className=\"card\">\n              <div className=\"card--header has-border\">\n                <h3>Creating line separation with an <code className=\"example-text\">&lt;hr&gt;</code> and <code className=\"example-text\">.has-border</code></h3>\n              </div>\n\n              <div className=\"card--content\">\n                <p className=\"remove-margin--top\">Use the <code className=\"example-text\">.has-border</code> class on your <code className=\"example-text\">.card--header</code> or <code className=\"example-text\">.card--footer</code> element to create a line separation between content </p>\n                <hr />\n                <p>Placing an <code className=\"example-text\">&lt;hr&gt;</code> within <code className=\"example-text\">.card--header</code>, <code className=\"example-text\">card--content</code>, or <code className=\"example-text\">card--footer</code> will allow you to separate content within your card, while still respecting your <code className=\"example-text\">$grid-gutter</code>.</p>\n                <hr />\n                <p className=\"remove-margin--bottom\">Use the <a href=\"https://github.com/dashframework/dashing/blob/v1.0.7/sass/base/utilities/_utilities.scss#L12-L16\" target=\"_blank\" rel=\"noopener noreferrer\">remove-margin</a> utility classes to remove unnecessary margin in your paragraphs.</p>\n              </div>\n\n              <hr />\n\n              <div className=\"card--content\">\n                <p className=\"remove-margin\">Use an <code className=\"example-text\">&lt;hr&gt;</code> outside of <code className=\"example-text\">.card--header</code>, <code className=\"example-text\">card--content</code>, or <code className=\"example-text\">card--footer</code> to span your <code className=\"example-text\">&lt;hr&gt;</code> edge to edge.</p>\n              </div>\n\n              <div className=\"card--footer has-border\">\n                <button className=\"button button--primary\">Button</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <CodeToggle>\n{`<div class=\"card\">\n  <div class=\"card--header has-border\">\n    <h3>Creating line separation with an <code class=\"example-text\">&lt;hr&gt;</code> and <code class=\"example-text\">.has-border</code></h3>\n  </div>\n\n  <div class=\"card--content\">\n    <p class=\"remove-margin--top\">Use the <code class=\"example-text\">.has-border</code> class on your <code class=\"example-text\">.card--header</code> or <code class=\"example-text\">.card--footer</code> element to create a line separation between content </p>\n    <hr>\n    <p>Placing an <code class=\"example-text\">&lt;hr&gt;</code> within <code class=\"example-text\">.card--header</code>, <code class=\"example-text\">card--content</code>, or <code class=\"example-text\">card--footer</code> will allow you to separate content within your card, while still respecting your <code class=\"example-text\">$grid-gutter</code>.</p>\n    <hr>\n    <p class=\"remove-margin--bottom\">Use the <a href=\"https://github.com/dashframework/dashing/blob/v1.0.7/sass/base/utilities/_utilities.scss#L12-L16\">remove-margin</a> utility classes to remove unnecessary margin in your paragraphs.</p>\n  </div>\n\n  <hr>\n\n  <div class=\"card--content\">\n    <p class=\"remove-margin\">Use an <code class=\"example-text\">&lt;hr&gt;</code> outside of <code class=\"example-text\">.card--header</code>, <code class=\"example-text\">card--content</code>, or <code class=\"example-text\">card--footer</code> to span your <code class=\"example-text\">&lt;hr&gt;</code> edge to edge.</p>\n  </div>\n\n  <div class=\"card--footer has-border\">\n    <button class=\"button button--primary\">Button</button>\n  </div>\n</div>`}\n        </CodeToggle>\n\n        <h2 className=\"example-header\">Selectable Card <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Selectable_Card\"></button></h2>\n        <div className=\"row example-container\">\n          <div className=\"column column--full\">\n            <div className=\"card is-selectable\">\n              <div className=\"card--header\">\n                <h3>This is a selectable card</h3>\n              </div>\n\n              <div className=\"card--footer\">\n                <button className=\"button button--primary button--transparent\">Click me</button>\n              </div>\n            </div>\n\n            <div className=\"card is-selectable is-disabled\">\n              <div className=\"card--header\">\n                <h3>This is a disabled selectable card</h3>\n              </div>\n\n              <div className=\"card--footer\">\n                <button className=\"button button--primary button--transparent\">Can't click me</button>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      <CodeToggle>\n{`<div class=\"card is-selectable\">\n  <div class=\"card--header\">\n    <h3>This is a selectable card</h3>\n  </div>\n\n  <div class=\"card--footer\">\n    <button class=\"button button--primary button--transparent\">Click me</button>\n  </div>\n</div>\n\n<div class=\"card is-selectable is-disabled\">\n  <div class=\"card--header\">\n    <h3>This is a disabled selectable card</h3>\n  </div>\n\n  <div class=\"card--footer\">\n    <button class=\"button button--primary button--transparent\">Can't click me</button>\n  </div>\n</div>`}\n      </CodeToggle>\n\n      <h2 className=\"example-header\">Dashed Card <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Dashed_Card\"></button></h2>\n      <div className=\"row example-container\">\n        <div className=\"column column--full\">\n          <div className=\"card card--dashed\">\n            <div className=\"card--header\">\n              <h3>This is a dashed card</h3>\n            </div>\n\n            <div className=\"card--content\">\n              <p className=\"remove-margin\">To use a dashed card, apply <code className=\"example-text\">.card--dashed</code> after <code className=\"example-text\">.card</code>.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <CodeToggle>\n{`<div class=\"card card--dashed\">\n  <div class=\"card--header\">\n    <h3>This is a dashed card</h3>\n  </div>\n\n  <div class=\"card--content\">\n    <p class=\"remove-margin\">To use a dashed card, apply <code class=\"example-text\">.card--dashed</code> after <code class=\"example-text\">.card</code>.</p>\n  </div>\n</div>`}\n      </CodeToggle>\n\n      <h2 className=\"example-header\">Form Elements in a Card <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Form_Elements_In_A_Card\"></button></h2>\n      <div className=\"row example-container\">\n        <div className=\"column column--full\">\n          <div className=\"card\">\n            <div className=\"card--header\">\n              <h3>This is a card with a form</h3>\n            </div>\n\n            <form>\n              <fieldset className=\"card--content\">\n\n                <div className=\"row row--nested\">\n                  <div className=\"column column--full column--nested\">\n                    <label>Label</label>\n                    <input type=\"text\"/>\n                  </div>\n                </div>\n\n                <div className=\"row row--nested\">\n                  <div className=\"column column--half column--nested\">\n                    <label>Label</label>\n                    <input type=\"text\"/>\n                  </div>\n                  <div className=\"column column--half column--nested\">\n                    <label>Label</label>\n                    <input type=\"text\"/>\n                  </div>\n                </div>\n                <div className=\"row row--nested\">\n                  <div className=\"column column--half column--nested\">\n                    <label>Label</label>\n                    <input type=\"text\"/>\n                  </div>\n                  <div className=\"column column--half column--nested\">\n                    <label>Label</label>\n                    <input type=\"text\"/>\n                  </div>\n                </div>\n              </fieldset>\n\n              <div className=\"card--footer\">\n                <button className=\"button button--green\">Submit</button>\n                <button className=\"button button--secondary button--transparent\">Cancel</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <CodeToggle>\n{`<div class=\"card\">\n  <div class=\"card--header\">\n    <h3>This is a card with a form</h3>\n  </div>\n\n  <form>\n    <fieldset class=\"card--content\">\n\n      <div class=\"row row--nested\">\n        <div class=\"column column--full column--nested\">\n          <label>Label</label>\n          <input type=\"text\">\n        </div>\n      </div>\n\n      <div class=\"row row--nested\">\n        <div class=\"column column--half column--nested\">\n          <label>Label</label>\n          <input type=\"text\">\n        </div>\n        <div class=\"column column--half column--nested\">\n          <label>Label</label>\n          <input type=\"text\">\n        </div>\n      </div>\n      <div class=\"row row--nested\">\n        <div class=\"column column--half column--nested\">\n          <label>Label</label>\n          <input type=\"text\">\n        </div>\n        <div class=\"column column--half column--nested\">\n          <label>Label</label>\n          <input type=\"text\">\n        </div>\n      </div>\n    </fieldset>\n\n    <div class=\"card--footer\">\n      <button class=\"button button--green\">Submit</button>\n      <button class=\"button button--secondary button--transparent\">Cancel</button>\n    </div>\n  </form>\n</div>`}\n      </CodeToggle>\n\n      </div>\n    </div>\n    </AppContent>\n  </Layout>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  return (\n    <div className=\"subnav-links\">\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/code\"} activeClassName=\"active\">Code</Link>\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"} activeClassName=\"active\">Guidelines</Link>\n    </div>\n  );\n};\n\nexport default SubNav\n","import React from 'react'\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    var Prism = window.Prism;\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <div className={this.state.showCode ? 'group-open' : ''}>\n        <div onClick={this.toggleCode} className={this.state.showCode ? 'code-toggle is-open' : 'code-toggle'}><i className=\"icon--code\"></i></div>\n        <pre className={this.state.showCode ? 'language-html show' : 'language-html'}>\n          <code className={this.state.showCode ? 'language-html show' : 'language-html'}>{this.props.children}</code>\n        </pre>\n      </div>\n    )\n  }\n}\nexport default CodeToggle;\n"],"sourceRoot":""}