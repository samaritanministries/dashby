{"version":3,"sources":["webpack:///./src/pages/components/checkboxes/code.js","webpack:///./src/components/subnavigation.js","webpack:///./src/components/codetoggle.js","webpack:///./src/components/codetoggle-scss.js"],"names":["currentPageNameLower","toLowerCase","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_2__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_3__","data-id","id","type","defaultChecked","htmlFor","disabled","_components_codetoggle__WEBPACK_IMPORTED_MODULE_4__","_components_codetoggle_scss__WEBPACK_IMPORTED_MODULE_5__","name","_ref","sectionName","getPageName","getSectionName","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","activeClassName","CodeToggle","props","_this","_React$Component","call","this","state","showCode","toggleCode","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","setState","prevState","componentDidMount","window","Prism","highlightAll","render","react__WEBPACK_IMPORTED_MODULE_3___default","onClick","children","Component","CodeToggleSCSS"],"mappings":"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","file":"component---src-pages-components-checkboxes-code-js-133f7c10c326453fa6d5.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\nimport CodeToggleSCSS from '../../../components/codetoggle-scss'\n\nconst currentPageName = \"Checkboxes\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n    <div className=\"row\">\n      <div className=\"column column--full\">\n\n        <h2 className=\"example-header no-margin--top\">Custom Checkboxes <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Custom_Checkboxes\"></button></h2>\n    \t\t<p>To use custom checkboxes, be sure to include your input <strong>before</strong> your label. Failing to do so will break styles.</p>\n    \t\t<div className=\"row example-container\">\n    \t\t  <fieldset className=\"column column--third\">\n    \t\t    <label>Checkboxes</label>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox1--custom\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox1--custom\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox2--custom\"/>\n    \t\t      <label htmlFor=\"dashing-checkbox2--custom\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox3--custom\"/>\n    \t\t      <label htmlFor=\"dashing-checkbox3--custom\">Option 3 is much longer and indents when it goes beyond one line</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n\n    \t\t  <fieldset className=\"column column--full\">\n    \t\t    <label>Disabled Checkbox</label>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled\" disabled defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-disabled\">Disabled</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled2\" disabled/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-disabled2\">Disabled</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n\n    \t\t  <fieldset className=\"column column--full has-error\">\n    \t\t    <label>Checkboxes with Errors</label>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--error1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox--error1\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--error2\" />\n    \t\t      <label htmlFor=\"dashing-checkbox--error2\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--error3\" />\n    \t\t      <label htmlFor=\"dashing-checkbox--error3\">Option 3</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n\n    \t\t  <fieldset className=\"column column--full has-warning\">\n    \t\t    <label>Checkboxes with Warnings</label>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--warning1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox--warning1\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--warning2\" />\n    \t\t      <label htmlFor=\"dashing-checkbox--warning2\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--warning3\" />\n    \t\t      <label htmlFor=\"dashing-checkbox--warning3\">Option 3</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n\n    \t\t  <fieldset className=\"column column--full\">\n    \t\t    <label>Inline Checkboxes</label>\n    \t\t    <div className=\"checkbox--custom inline\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-inline1\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom inline\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline2\"/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-inline2\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox--custom inline\">\n    \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline3\"/>\n    \t\t      <label htmlFor=\"dashing-checkbox--custom-inline3\">Option 3</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n    \t\t</div>\n\n        <CodeToggle>\n{`<!-- Custom Checkboxes -->\n<fieldset class=\"column column--third\">\n  <label>Checkboxes</label>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox1--custom\" checked/>\n    <label for=\"dashing-checkbox1--custom\">Option 1</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox2--custom\"/>\n    <label for=\"dashing-checkbox2--custom\">Option 2</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox3--custom\"/>\n    <label for=\"dashing-checkbox3--custom\">Option 3 is much longer and indents when it goes beyond one line</label>\n  </div>\n</fieldset>\n\n<fieldset class=\"column column--full\">\n  <label>Disabled Checkbox</label>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled\" disabled checked/>\n    <label for=\"dashing-checkbox--custom-disabled\">Disabled</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled2\" disabled/>\n    <label for=\"dashing-checkbox--custom-disabled2\">Disabled</label>\n  </div>\n</fieldset>\n\n<!-- Add the class .has-error to the parent container to apply error styles -->\n<fieldset class=\"column column--full has-error\">\n  <label>Checkboxes with Errors</label>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--error1\" checked/>\n    <label for=\"dashing-checkbox--error1\">Option 1</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--error2\" />\n    <label for=\"dashing-checkbox--error2\">Option 2</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--error3\" />\n    <label for=\"dashing-checkbox--error3\">Option 3</label>\n  </div>\n</fieldset>\n\n<!-- Add the class .has-warning to the parent container to apply warning styles -->\n<fieldset class=\"column column--full has-warning\">\n  <label>Checkboxes with Warnings</label>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--warning1\" checked/>\n    <label for=\"dashing-checkbox--warning1\">Option 1</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--warning2\" />\n    <label for=\"dashing-checkbox--warning2\">Option 2</label>\n  </div>\n  <div class=\"checkbox--custom\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--warning3\" />\n    <label for=\"dashing-checkbox--warning3\">Option 3</label>\n  </div>\n</fieldset>\n\n<!-- Add the class .inline to the .checkbox--custom element to list your checkboxes vertially -->\n<fieldset class=\"column column--full\">\n  <label>Inline Checkboxes</label>\n  <div class=\"checkbox--custom inline\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline1\" checked/>\n    <label for=\"dashing-checkbox--custom-inline1\">Option 1</label>\n  </div>\n  <div class=\"checkbox--custom inline\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline2\"/>\n    <label for=\"dashing-checkbox--custom-inline2\">Option 2</label>\n  </div>\n  <div class=\"checkbox--custom inline\">\n    <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline3\"/>\n    <label for=\"dashing-checkbox--custom-inline3\">Option 3</label>\n  </div>\n</fieldset>`}\n        </CodeToggle>\n        <CodeToggleSCSS>\n{`//Include these variables in your theme file to change the color of your checkbox\n$checkbox--active: $blue !default; //Color of checkbox when checked\n$checkbox--icon: $white !default; //Color of check icon when checked\n$checkbox--focus: $blue-300 !default; //Color of border around checkbox when focused\n$checkbox--disabled: $gray-150 !default; //Color of checkbox when checked and disabled\n$checkbox--icon-disabled: $gray-500 !default; //Color of check icon when checked and disabled`}\n        </CodeToggleSCSS>\n\n        <h2 className=\"example-header\">Default Checkbox Card <button className=\"button button--transparent button--copy-link\" id=\"Default_Checkbox_Card\"></button></h2>\n    \t\t<p>To use smaller checkbox cards apply the <code className=\"example-text\">.checkbox-card--small</code> class to the <code className=\"example-text\">.checkbox-card</code>.</p>\n    \t\t<div className=\"row example-container\">\n    \t\t  <fieldset className=\"column column--full\">\n    \t\t    <label>Checkbox Card</label>\n    \t\t    <div className=\"checkbox-card\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"checkbox-inline1\" className=\"card\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox-card\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline2\" />\n    \t\t      <label htmlFor=\"checkbox-inline2\" className=\"card\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox-card\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline3\" disabled />\n    \t\t      <label htmlFor=\"checkbox-inline3\" className=\"card disabled\">Disabled</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n    \t\t</div>\n\n        <CodeToggle>\n{`<fieldset class=\"column column--full\">\n  <label>Checkbox Card</label>\n  <div class=\"checkbox-card\">\n    <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline1\" checked/>\n    <label for=\"checkbox-inline1\" class=\"card\">Option 1</label>\n  </div>\n  <div class=\"checkbox-card\">\n    <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline2\" />\n    <label for=\"checkbox-inline2\" class=\"card\">Option 2</label>\n  </div>\n  <div class=\"checkbox-card\">\n    <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline3\" disabled />\n    <label for=\"checkbox-inline3\" class=\"card disabled\">Disabled</label>\n  </div>\n</fieldset>`}\n        </CodeToggle>\n        <CodeToggleSCSS>\n{`//Include these variables in your theme file to change the color or padding of your checkbox button cards\n$card-checkbox--active: $blue !default; //Color of checkbox and card when checked\n$card-checkbox--focus: $blue-300 !default; //Color of border around card-checkbox when focused\n$card-checkbox--padding: 1rem !default; //Padding of checkbox`}\n        </CodeToggleSCSS>\n\n        <h2 className=\"example-header\">Small Checkbox Card <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Small_Checkbox_Card\"></button></h2>\n    \t\t<p>To use smaller checkbox cards apply the <code className=\"example-text\">.checkbox-card--small</code> class to the <code className=\"example-text\">.checkbox-card</code>.</p>\n    \t\t<div className=\"row example-container\">\n    \t\t\t<fieldset className=\"column column--full\">\n    \t\t\t\t<label>Small Checkbox Card</label>\n    \t\t\t\t<div className=\"checkbox-card checkbox-card--small\">\n    \t\t\t\t\t<input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small1\" defaultChecked={true}/>\n    \t\t\t\t\t<label htmlFor=\"checkbox-small1\" className=\"card\">Option 1</label>\n    \t\t\t\t</div>\n    \t\t\t\t<div className=\"checkbox-card checkbox-card--small\">\n    \t\t\t\t\t<input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small2\" />\n    \t\t\t\t\t<label htmlFor=\"checkbox-small2\" className=\"card\">Option 2</label>\n    \t\t\t\t</div>\n    \t\t\t\t<div className=\"checkbox-card checkbox-card--small\">\n    \t\t\t\t\t<input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small3\" disabled />\n    \t\t\t\t\t<label htmlFor=\"checkbox-small3\" className=\"card disabled\">Disabled</label>\n    \t\t\t\t</div>\n    \t\t\t</fieldset>\n    \t\t</div>\n\n        <CodeToggle>\n{`<fieldset class=\"column column--full\">\n  <label>Small Checkbox Card</label>\n  <div class=\"checkbox-card checkbox-card--small\">\n    <input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small1\" checked/>\n    <label for=\"checkbox-small1\" class=\"card\">Option 1</label>\n  </div>\n  <div class=\"checkbox-card checkbox-card--small\">\n    <input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small2\" />\n    <label for=\"checkbox-small2\" class=\"card\">Option 2</label>\n  </div>\n  <div class=\"checkbox-card checkbox-card--small\">\n    <input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small3\" disabled />\n    <label for=\"checkbox-small3\" class=\"card disabled\">Disabled</label>\n  </div>\n</fieldset>`}\n        </CodeToggle>\n\n        <h2 className=\"example-header\">Block Checkbox Card <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Block_Checkbox_Card\"></button></h2>\n    \t\t<p>To use block style checkbox cards apply the <code className=\"example-text\">.is-block</code> class to the <code className=\"example-text\">.checkbox-card</code>.</p>\n    \t\t<div className=\"row example-container\">\n    \t\t  <fieldset className=\"column column--half\">\n    \t\t    <label>Block Checkbox Card</label>\n    \t\t    <div className=\"checkbox-card is-block\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block1\" defaultChecked={true}/>\n    \t\t      <label htmlFor=\"checkbox-block1\" className=\"card\">Option 1</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox-card is-block\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block2\" />\n    \t\t      <label htmlFor=\"checkbox-block2\" className=\"card\">Option 2</label>\n    \t\t    </div>\n    \t\t    <div className=\"checkbox-card is-block\">\n    \t\t      <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block3\" disabled />\n    \t\t      <label htmlFor=\"checkbox-block3\" className=\"card disabled\">Disabled</label>\n    \t\t    </div>\n    \t\t  </fieldset>\n    \t\t</div>\n\n        <CodeToggle>\n{`<fieldset class=\"column column--half\">\n  <label>Block Checkbox Card</label>\n  <div class=\"checkbox-card is-block\">\n    <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block1\" checked/>\n    <label for=\"checkbox-block1\" class=\"card\">Option 1</label>\n  </div>\n  <div class=\"checkbox-card is-block\">\n    <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block2\" />\n    <label for=\"checkbox-block2\" class=\"card\">Option 2</label>\n  </div>\n  <div class=\"checkbox-card is-block\">\n    <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block3\" disabled />\n    <label for=\"checkbox-block3\" class=\"card disabled\">Disabled</label>\n  </div>\n</fieldset>`}\n        </CodeToggle>\n\n      </div>\n    </div>\n    </AppContent>\n  </Layout>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  return (\n    <div className=\"subnav-links\">\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/code\"} activeClassName=\"active\">Code</Link>\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"} activeClassName=\"active\">Guidelines</Link>\n    </div>\n  );\n};\n\nexport default SubNav\n","import React from 'react'\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    var Prism = window.Prism;\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <div className={this.state.showCode ? 'group-open' : ''}>\n        <div onClick={this.toggleCode} className={this.state.showCode ? 'code-toggle is-open' : 'code-toggle'}><i className=\"icon--code\"></i></div>\n        <pre className={this.state.showCode ? 'language-html show' : 'language-html'}>\n          <code className={this.state.showCode ? 'language-html show' : 'language-html'}>{this.props.children}</code>\n        </pre>\n      </div>\n    )\n  }\n}\nexport default CodeToggle;\n","import React from 'react'\n\nclass CodeToggleSCSS extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    var Prism = window.Prism;\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <pre className=\"language-scss\">\n        <code className=\"language-scss\">{this.props.children}</code>\n      </pre>\n    )\n  }\n}\nexport default CodeToggleSCSS;\n"],"sourceRoot":""}