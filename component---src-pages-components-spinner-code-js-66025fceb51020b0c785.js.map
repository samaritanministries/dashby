{"version":3,"sources":["webpack:///./src/pages/components/spinner/code.js","webpack:///./src/components/subnavigation.js","webpack:///./src/components/codetoggle.js","webpack:///./src/components/codetoggle-scss.js"],"names":["currentPageNameLower","toLowerCase","SpinnerCode","props","_this","_React$Component","call","this","state","addSpinner","handleClick","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","setState","prevState","render","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_5__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_6__","data-id","id","style","height","_components_codetoggle__WEBPACK_IMPORTED_MODULE_7__","_components_codetoggle_scss__WEBPACK_IMPORTED_MODULE_8__","onClick","React","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","SubNav","_ref","sectionName","getPageName","getSectionName","to","activeClassName","CodeToggle","showCode","toggleCode","componentDidMount","window","Prism","highlightAll","children","CodeToggleSCSS"],"mappings":"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","file":"component---src-pages-components-spinner-code-js-66025fceb51020b0c785.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\nimport CodeToggleSCSS from '../../../components/codetoggle-scss'\n\nconst currentPageName = \"Spinner\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nclass SpinnerCode extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {addSpinner: false};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n   handleClick() {\n    this.setState(prevState => ({\n      addSpinner: !prevState.addSpinner\n    }));\n  }\n\n  render() {\n\n    return (\n\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n          <div className=\"row\">\n            <div className=\"column column--full\">\n              <h2 className=\"example-header no-margin--top\">Default Spinner <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Default_Spinner\"/></h2>\n              <div className=\"row example-container\">\n                <div className=\"column column--full\">\n                  <div className=\"relative\" style={{ height: \"8rem\" }}>\n                    <div className=\"dash-spinner\"></div>\n                  </div>\n                </div>\n              </div>\n              <CodeToggle>\n{`<div class=\"dash-spinner\"></div>`}\n              </CodeToggle>\n              <CodeToggleSCSS>\n{`//Include this variable in your theme file to change the color of your spinner\n$spinner-color: #000;`}\n              </CodeToggleSCSS>\n\n              <h2 className=\"example-header\">Small Spinner <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Small_Spinner\" /></h2>\n              <div className=\"row example-container\">\n                <div className=\"column column--full\">\n                  <div className=\"relative\" style={{ height: \"5rem\" }}>\n                    <div className=\"dash-spinner small\"></div>\n                  </div>\n                </div>\n              </div>\n              <CodeToggle>\n{`<div class=\"dash-spinner small\"></div>`}\n              </CodeToggle>\n\n              <h2 className=\"example-header\">Button Spinner <button className=\"button button--transparent button--copy-link\" data-id=\"copyurl\" id=\"Button_Spinner\" /></h2>\n              <div className=\"row example-container\">\n                <div className=\"column column--full\">\n                  <button onClick={this.handleClick} className={this.state.addSpinner ? 'button button--blue has-spinner' : 'button button--blue'}>\n                    Click me\n                  </button>\n                </div>\n              </div>\n              <CodeToggle>\n{`<button class=\"button button--blue has-spinner\">\n  Click Me\n</button>`}\n              </CodeToggle>\n\n            </div>\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\nexport default SpinnerCode;\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  return (\n    <div className=\"subnav-links\">\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/code\"} activeClassName=\"active\">Code</Link>\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"} activeClassName=\"active\">Guidelines</Link>\n    </div>\n  );\n};\n\nexport default SubNav\n","import React from 'react'\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    var Prism = window.Prism;\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <div className={this.state.showCode ? 'group-open' : ''}>\n        <div onClick={this.toggleCode} className={this.state.showCode ? 'code-toggle is-open' : 'code-toggle'}><i className=\"icon--code\"></i></div>\n        <pre className={this.state.showCode ? 'language-html show' : 'language-html'}>\n          <code className={this.state.showCode ? 'language-html show' : 'language-html'}>{this.props.children}</code>\n        </pre>\n      </div>\n    )\n  }\n}\nexport default CodeToggle;\n","import React from 'react'\n\nclass CodeToggleSCSS extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    var Prism = window.Prism;\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <pre className=\"language-scss\">\n        <code className=\"language-scss\">{this.props.children}</code>\n      </pre>\n    )\n  }\n}\nexport default CodeToggleSCSS;\n"],"sourceRoot":""}