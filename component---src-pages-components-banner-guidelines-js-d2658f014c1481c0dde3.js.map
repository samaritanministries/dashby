{"version":3,"sources":["webpack:///./src/pages/components/banner/guidelines.js","webpack:///./src/components/subnavigation.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_subnavigation__WEBPACK_IMPORTED_MODULE_3__","_components_appcontent__WEBPACK_IMPORTED_MODULE_4__","currentPageNameLower","toLowerCase","a","createElement","className","pageName","to","style","marginTop","marginBottom","SubNav","_ref","sectionName","getPageName","getSectionName","activeClassName"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAQMU,EADkB,SACqBC,cAE9BT,EAAA,0BACbE,EAAAQ,EAAAC,cAACN,EAAA,EAAD,KACEH,EAAAQ,EAAAC,cAAA,UAAQC,UAAU,UAChBV,EAAAQ,EAAAC,cAAA,UANkB,UAOlBT,EAAAQ,EAAAC,cAACL,EAAA,EAAD,CAAQO,SAAUL,KAEpBN,EAAAQ,EAAAC,cAACJ,EAAA,EAAD,KACEL,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,OACbV,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,uBACbV,EAAAQ,EAAAC,cAAA,KAAGC,UAAU,SAAb,yLAEAV,EAAAQ,EAAAC,cAAA,MAAIC,UAAU,6CAAd,gBACEV,EAAAQ,EAAAC,cAAA,wFAA+ET,EAAAQ,EAAAC,cAACP,EAAA,KAAD,CAAMU,GAAG,kCAAT,WAA/E,0DACAZ,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,kCACbV,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,oBACbV,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,eACbV,EAAAQ,EAAAC,cAAA,mCAEFT,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,2BACbV,EAAAQ,EAAAC,cAAA,KAAGC,UAAU,gDACbV,EAAAQ,EAAAC,cAAA,0CAEFT,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,2BACbV,EAAAQ,EAAAC,cAAA,KAAGC,UAAU,2CACbV,EAAAQ,EAAAC,cAAA,0KAEFT,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,yBACbV,EAAAQ,EAAAC,cAAA,KAAGC,UAAU,4CACbV,EAAAQ,EAAAC,cAAA,oEAKNT,EAAAQ,EAAAC,cAAA,cAAYC,UAAU,OAAOG,MAAO,CAAEC,UAAW,SAC/Cd,EAAAQ,EAAAC,cAAA,uCACAT,EAAAQ,EAAAC,cAAA,uDAA8CT,EAAAQ,EAAAC,cAACP,EAAA,KAAD,CAAMU,GAAG,yBAAT,SAA9C,6FAGFZ,EAAAQ,EAAAC,cAAA,MAAIC,UAAU,8BAAd,aACAV,EAAAQ,EAAAC,cAAA,kIACAT,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,iCAAiCG,MAAO,CAAEE,aAAc,SACrEf,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,6BACbV,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,eACbV,EAAAQ,EAAAC,cAAA,iCAEFT,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,gBACbV,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,eACbV,EAAAQ,EAAAC,cAAA,6ECzDpB,IAAAV,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KA4BeoB,IAzBA,SAAAC,GAA+B,IAA5BN,EAA4BM,EAA5BN,SAAUO,EAAkBD,EAAlBC,YAEP,MAAfA,IACFA,EAAc,cAGC,aAAbP,EACFA,EAAW,WACW,qBAAbA,EACTA,EAAW,mBACW,kBAAbA,IACTA,EAAW,iBAGb,IAAMQ,EAAcR,EACdS,EAAiBF,EAEvB,OACElB,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,gBACXV,EAAAQ,EAAAC,cAACP,EAAA,KAAD,CAAMU,GAAKQ,EAAiB,IAAMD,EAAe,QAASE,gBAAgB,UAA1E,QACArB,EAAAQ,EAAAC,cAACP,EAAA,KAAD,CAAMU,GAAKQ,EAAiB,IAAMD,EAAe,cAAeE,gBAAgB,UAAhF","file":"component---src-pages-components-banner-guidelines-js-d2658f014c1481c0dde3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\n\nconst currentPageName = \"Banner\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n      <div className=\"row\">\n        <div className=\"column column--full\">\n          <p className=\"intro\">Banners can be used to show important information to a user. Card banners should have text that is directly related to an action that has been completed or is about to be performed.</p>\n\n          <h2 className=\"has-number has-number--one no-margin--top\">Banner Types</h2>\n            <p>Common types of card banners are success, warning, error, and generic. Like <Link to=\"/components/actions/guidelines\">Actions</Link>, banners should use purposeful color when using them.</p>\n            <div className=\"image-container double-padding\">\n              <div className=\"banner-container\">\n                <div className=\"card-banner\">\n                  <p>This is a card banner</p>\n                </div>\n                <div className=\"card-banner has-success\">\n                  <i className=\"dashing-icon dashing-icon--checkmark-filled\"></i>\n                  <p>Your file is ready to upload</p>\n                </div>\n                <div className=\"card-banner has-warning\">\n                  <i className=\"dashing-icon dashing-icon--info-filled\"></i>\n                  <p>You may only submit bill information and upload images for one statement at a time. If you have multiple statements to submit, please enter them separately.</p>\n                </div>\n                <div className=\"card-banner has-error\">\n                  <i className=\"dashing-icon dashing-icon--alert-filled\"></i>\n                  <p>You must complete all fields below before continuing</p>\n                </div>\n              </div>\n            </div>\n\n            <blockquote className=\"tips\" style={{ marginTop: \"2rem\" }}>\n              <strong>Tip: Icons in Banners</strong>\n              <p>To add more attention to card banners, use <Link to=\"components/icons/code\">icons</Link> before the banner text. Banners are setup to automatically add the appropriate spacing.</p>\n            </blockquote>\n\n            <h2 className=\"has-number has-number--two\">Placement</h2>\n            <p>When using a card banner, it should be placed directly under the card header to draw the user's attention right away.</p>\n            <div className=\"image-container double-padding\" style={{ marginBottom: \"2rem\" }}>\n              <div className=\"card card--example-titles\">\n                <div className=\"card-header\">\n                  <h3>Membership Options</h3>\n                </div>\n                <div className=\"card-content\">\n                  <div className=\"card-banner\">\n                    <p>This is a card banner</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n        </div>\n      </div>\n    </AppContent>\n  </Layout>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  return (\n    <div className=\"subnav-links\">\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/code\"} activeClassName=\"active\">Code</Link>\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"} activeClassName=\"active\">Guidelines</Link>\n    </div>\n  );\n};\n\nexport default SubNav\n"],"sourceRoot":""}