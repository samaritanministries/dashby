{"version":3,"sources":["webpack:///./src/pages/components/accordion/code.js","webpack:///./src/components/subnavigation.js","webpack:///./src/components/codetoggle.js","webpack:///./node_modules/prismjs/plugins/custom-class/prism-custom-class.min.js"],"names":["currentPageNameLower","toLowerCase","AccordionCode","componentDidMount","$","click","this","parentElement","classList","toggle","render","location","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_6__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_7__","id","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","pathname","style","marginBottom","tabIndex","_components_codetoggle__WEBPACK_IMPORTED_MODULE_8__","React","Component","propTypes","PropTypes","object","isRequired","SubNav","_ref","sectionName","getPageName","getSectionName","isPartiallyActive","_ref2","isPartiallyCurrent","PartialNavLink","gatsby__WEBPACK_IMPORTED_MODULE_2__","Object","assign","getProps","children","CodeToggle","_this","_React$Component","call","state","showCode","toggleCode","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0___default","setState","prevState","Prism","highlightAll","plugins","customClass","map","tag","react__WEBPACK_IMPORTED_MODULE_2___default","onClick","global","self","s","classMap","i","prefix","prefixString","hooks","add","classes"],"mappings":"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","file":"component---src-pages-components-accordion-code-js-92abf6f9aa7af6c870c5.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport $ from 'jquery'\nimport { Link } from 'gatsby'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\n\nconst currentPageName = \"Accordion\"\nconst currentPageNameLower = currentPageName.toLowerCase()\n\nclass AccordionCode extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  componentDidMount() {\n    $(\"#toggleAccordion\").click(function(){\n      this.parentElement.classList.toggle('expanded');\n    });\n  }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n  \t\t\t<div className=\"grid grid-padding\">\n\n          <h2 id=\"defaultAccordian\">Default Accordion\n            <Link to={location.pathname + \"/#defaultAccordian\"} className=\"button button--transparent button--copy-link\"></Link>\n          </h2>\n\n          <p>To expand the accordion, apply the class <code className=\"example-text\">.expanded</code> to the <code className=\"example-text\">.accordion</code>.</p>\n\n          <div className=\"example-container\">\n\n            <div className=\"accordion\" style={{marginBottom: \"1rem\"}}>\n              <div className=\"accordion-header\" id=\"toggleAccordion\" tabIndex=\"0\">\n                <i className=\"dashing-icon accordion-arrow\"></i>\n                <h3 className=\"title\">Accordion Title</h3>\n                <h3 className=\"secondary-title\">$100.00</h3>\n              </div>\n\n              <div className=\"accordion-content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</div>\n              <div className=\"accordion-footer\">\n                <button className=\"button\">Save & Continue</button>\n              </div>\n\n            </div>\n            <CodeToggle>\n{`<div class=\"accordion\">\n  <div class=\"accordion-header\" id=\"toggleAccordion\" tabindex=\"0\">\n    <i class=\"dashing-icon accordion-arrow\"></i>\n    <h3 class=\"title\">Accordion Title</h3>\n    <h3 class=\"secondary-title\">$100.00</h3>\n  </div>\n\n  <div class=\"accordion-content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</div>\n\n  <div class=\"accordion-footer\">\n    <button class=\"button\">Save & Continue</button>\n  </div>\n\n</div>`}\n            </CodeToggle>\n            </div>\n\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n\nexport default AccordionCode;\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  const isPartiallyActive = ({ isPartiallyCurrent }) => {\n  return isPartiallyCurrent\n    ? { className: 'active' }\n    : { className: '' }\n  }\n\n  const PartialNavLink = props => (\n    <Link getProps={isPartiallyActive} {...props}>\n      {props.children}\n    </Link>\n  )\n\n  return (\n    <div className=\"subnav-links\">\n        <PartialNavLink to={ getSectionName + \"/\" + getPageName  + \"/code\"}>Code</PartialNavLink>\n        <PartialNavLink to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"}>Guidelines</PartialNavLink>\n    </div>\n  );\n};\n\nexport default SubNav\n","import React from 'react'\nimport Prism from 'prismjs'\nimport 'prismjs/plugins/custom-class/prism-custom-class.min.js'\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  render() {\n    Prism.plugins.customClass.map({ tag: 'exampletag', });\n\n    return (\n      <div className={this.state.showCode ? 'group-open' : ''}>\n        <div onClick={this.toggleCode} className={this.state.showCode ? 'code-toggle is-open' : 'code-toggle'}><i className=\"icon--code\"></i></div>\n        <pre className={this.state.showCode ? 'language-html show' : 'language-html'}>\n          <code className={this.state.showCode ? 'language-html show' : 'language-html'}>{this.props.children}</code>\n        </pre>\n      </div>\n    )\n  }\n}\nexport default CodeToggle;\n","!function(){if(\"undefined\"!=typeof self&&self.Prism||\"undefined\"!=typeof global&&global.Prism){var s={classMap:{}};Prism.plugins.customClass={map:function(i){s.classMap=i},prefix:function(i){s.prefixString=i}},Prism.hooks.add(\"wrap\",function(i){(s.classMap||s.prefixString)&&(i.classes=i.classes.map(function(i){return(s.prefixString||\"\")+(s.classMap[i]||i)}))})}}();"],"sourceRoot":""}