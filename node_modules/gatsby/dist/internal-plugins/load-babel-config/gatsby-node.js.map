{"version":3,"sources":["../../../src/internal-plugins/load-babel-config/gatsby-node.js"],"names":["fs","require","path","json5","report","actionifyBabelrc","addDefaultPluginsPresets","existsSync","sync","testRequireError","default","findBabelrc","directory","babelrcPath","join","babelrc","readFileSync","parse","error","preferDefault","m","findBabelrcJs","stage","findBabelPackage","packageJson","babel","exports","onCreateBabelConfig","store","actions","program","getState","browserslist"],"mappings":";;AAEA,MAAMA,KAAKC,QAAS,IAAT,CAAX;;AACA,MAAMC,OAAOD,QAAS,MAAT,CAAb;;AACA,MAAME,QAAQF,QAAS,OAAT,CAAd;;AACA,MAAMG,SAASH,QAAS,yBAAT,CAAf;;iBACuDA,QAAS,SAAT,C;MAA/CI,gB,YAAAA,gB;MAAkBC,wB,YAAAA,wB;;AAC1B,MAAMC,aAAaN,QAAS,kBAAT,EAA4BO,IAA/C;;AAEA,MAAMC,mBAAmBR,QAAS,gCAAT,EAA0CS,OAAnE;AAEA;;;;;;;AAKA,SAASC,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,QAAMC,cAAcX,KAAKY,IAAL,CAAUF,SAAV,EAAsB,UAAtB,CAApB;;AACA,MAAIL,WAAWM,WAAX,CAAJ,EAA6B;AAC3B,QAAI;AACF,YAAME,UAAUf,GAAGgB,YAAH,CAAgBH,WAAhB,EAA8B,OAA9B,CAAhB;AACA,aAAOV,MAAMc,KAAN,CAAYF,OAAZ,CAAP;AACD,KAHD,CAGE,OAAOG,KAAP,EAAc;AACd,YAAMA,KAAN;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAED;;;;;;AAIA,MAAMC,gBAAgBC,KAAMA,KAAKA,EAAEV,OAAR,IAAoBU,CAA/C;;AACA,SAASC,aAAT,CAAuBT,SAAvB,EAAkCU,KAAlC,EAAyC;AACvC,MAAIP,UAAU,IAAd;AACA,QAAMF,cAAcX,KAAKY,IAAL,CAAUF,SAAV,EAAsB,aAAtB,CAApB;;AACA,MAAI;AACFG,cAAUI,cAAclB,QAAQY,WAAR,CAAd,CAAV;AACD,GAFD,CAEE,OAAOK,KAAP,EAAc;AACd,QAAI,CAACT,iBAAiBI,WAAjB,EAA8BK,KAA9B,CAAL,EAA2C;AACzC,YAAMA,KAAN;AACD;AACF,GATsC,CAWvC;;;AACA,MAAI,OAAOH,OAAP,KAAoB,UAAxB,EAAmC;AACjCX,WAAOc,KAAP,CACG,sEADH;AAGA,WAAO,IAAP;AACD;;AAED,SAAOH,OAAP;AACD;AAED;;;;;;AAIA,SAASQ,gBAAT,CAA0BX,SAA1B,EAAqC;AACnC,QAAMY,cAAcvB,QAAQC,KAAKY,IAAL,CAAUF,SAAV,EAAsB,cAAtB,CAAR,CAApB;;AACA,MAAI;AACF;AACA,WAAOY,YAAYC,KAAnB;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACd,QAAIT,iBAAiBe,WAAjB,EAA8BN,KAA9B,CAAJ,EAA0C;AACxC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,YAAMA,KAAN;AACD;AACF;AACF;AAED;;;;;;AAIAQ,QAAQC,mBAAR,GAA8B,CAAC;AAAEL,OAAF;AAASM,OAAT;AAAgBC;AAAhB,CAAD,KAA+B;AAC3D,QAAMC,UAAUF,MAAMG,QAAN,GAAiBD,OAAjC;AAD2D,QAEnDlB,SAFmD,GAErCkB,OAFqC,CAEnDlB,SAFmD;AAI3D,MAAIG,UACFJ,YAAYC,SAAZ,KACAS,cAAcT,SAAd,CADA,IAEAW,iBAAiBX,SAAjB,CAHF,CAJ2D,CAS3D;;AACA,MAAIG,OAAJ,EAAa;AACXV,qBAAiBU,OAAjB,EAA0Bc,OAA1B;AACD,GAFD,MAEO;AACLvB,6BAAyBuB,OAAzB,EAAkC;AAChCP,WADgC;AAEhCU,oBAAcF,QAAQE;AAFU,KAAlC;AAID;AACF,CAlBD","sourcesContent":["/* @flow */\n\nconst fs = require(`fs`)\nconst path = require(`path`)\nconst json5 = require(`json5`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst { actionifyBabelrc, addDefaultPluginsPresets } = require(`./utils`)\nconst existsSync = require(`fs-exists-cached`).sync\n\nconst testRequireError = require(`../../utils/test-require-error`).default\n\n/**\n * Locates a .babelrc in the Gatsby site root directory. Parses it using\n * json5 (what Babel uses). It throws an error if the users's .babelrc is\n * not parseable.\n */\nfunction findBabelrc(directory) {\n  const babelrcPath = path.join(directory, `.babelrc`)\n  if (existsSync(babelrcPath)) {\n    try {\n      const babelrc = fs.readFileSync(babelrcPath, `utf-8`)\n      return json5.parse(babelrc)\n    } catch (error) {\n      throw error\n    }\n  }\n  return null\n}\n\n/**\n * Locates a .babelrc.js in the Gatsby site root directory.\n * requires it and unwraps any esm default export\n */\nconst preferDefault = m => (m && m.default) || m\nfunction findBabelrcJs(directory, stage) {\n  let babelrc = null\n  const babelrcPath = path.join(directory, `.babelrc.js`)\n  try {\n    babelrc = preferDefault(require(babelrcPath))\n  } catch (error) {\n    if (!testRequireError(babelrcPath, error)) {\n      throw error\n    }\n  }\n\n  // TODO support this\n  if (typeof babelrc === `function`) {\n    report.error(\n      `.babelrc.js files that export a function are not supported in Gatsby`\n    )\n    return null\n  }\n\n  return babelrc\n}\n\n/**\n * Reads the user's package.json and returns the \"babel\" section. It will\n * return undefined when the \"babel\" section does not exist.\n */\nfunction findBabelPackage(directory) {\n  const packageJson = require(path.join(directory, `package.json`))\n  try {\n    // $FlowFixMe - https://github.com/facebook/flow/issues/1975\n    return packageJson.babel\n  } catch (error) {\n    if (testRequireError(packageJson, error)) {\n      return null\n    } else {\n      throw error\n    }\n  }\n}\n\n/**\n * Creates a normalized Babel config to use with babel-loader. Loads a local\n * babelrc config if one exists or sets a backup default.\n */\nexports.onCreateBabelConfig = ({ stage, store, actions }) => {\n  const program = store.getState().program\n  const { directory } = program\n\n  let babelrc =\n    findBabelrc(directory) ||\n    findBabelrcJs(directory) ||\n    findBabelPackage(directory)\n\n  // If user doesn't have a custom babelrc, add defaults.\n  if (babelrc) {\n    actionifyBabelrc(babelrc, actions)\n  } else {\n    addDefaultPluginsPresets(actions, {\n      stage,\n      browserslist: program.browserslist,\n    })\n  }\n}\n"],"file":"gatsby-node.js"}