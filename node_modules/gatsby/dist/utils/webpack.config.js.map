{"version":3,"sources":["../../src/utils/webpack.config.js"],"names":["require","fs","path","dotenv","FriendlyErrorsWebpackPlugin","store","actions","debug","report","withBasePath","apiRunnerNode","createUtils","hasLocalEslint","module","exports","program","directory","suppliedStage","webpackPort","directoryPath","stage","rules","loaders","plugins","processEnv","defaultNodeEnv","env","process","NODE_ENV","envFile","join","cwd","parsed","parse","readFileSync","encoding","err","code","error","envObject","Object","keys","reduce","acc","key","JSON","stringify","gatsbyVarObject","match","PUBLIC_DIR","BUILD_STAGE","assign","getHmrPath","hmrBasePath","ssl","host","hmrSuffix","GATSBY_WEBPACK_PUBLICPATH","pubPath","substr","getOutput","filename","pathinfo","publicPath","devtoolModuleFilenameTemplate","info","resolve","absoluteResourcePath","replace","crossOriginLoading","libraryTarget","library","umdNamedDefine","globalObject","prefixPaths","getState","config","pathPrefix","chunkFilename","Error","getEntry","commons","main","app","getPlugins","configPlugins","moment","define","__PATH_PREFIX__","concat","hotModuleReplacement","noEmitOnErrors","clearConsole","compilationSuccessInfo","messages","port","extractText","uglify","uglifyOptions","compress","drop_console","apply","compiler","hooks","done","tapAsync","stats","assets","compilation","chunkGroups","chunkGroup","name","files","chunks","chunk","push","filter","f","slice","webpackStats","toJson","all","assetsByChunkName","writeFile","getDevtool","getMode","getModule","configRules","js","yaml","fonts","images","audioVideo","schema","eslint","oneOf","cssModules","css","use","null","test","getResolve","extensions","modules","alias","gatsby$","dirname","getResolveLoader","root","userLoaderDirectoryPath","statSync","isDirectory","__dirname","context","entry","output","target","profile","devtool","performance","hints","mode","resolveLoader","node","__filename","optimization","runtimeChunk","splitChunks","dispatch","replaceWebpackConfig","getConfig","webpack"],"mappings":"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","sourcesContent":["require(`v8-compile-cache`)\n\nconst fs = require(`fs`)\nconst path = require(`path`)\nconst dotenv = require(`dotenv`)\nconst FriendlyErrorsWebpackPlugin = require(`friendly-errors-webpack-plugin`)\nconst { store } = require(`../redux`)\nconst { actions } = require(`../redux/actions`)\nconst debug = require(`debug`)(`gatsby:webpack-config`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst { withBasePath } = require(`./path`)\n\nconst apiRunnerNode = require(`./api-runner-node`)\nconst createUtils = require(`./webpack-utils`)\nconst hasLocalEslint = require(`./local-eslint-config-finder`)\n\n// Four stages or modes:\n//   1) develop: for `gatsby develop` command, hot reload and CSS injection into page\n//   2) develop-html: same as develop without react-hmre in the babel config for html renderer\n//   3) build-javascript: Build JS and CSS chunks for production\n//   4) build-html: build all HTML files\n\nmodule.exports = async (\n  program,\n  directory,\n  suppliedStage,\n  webpackPort = 1500\n) => {\n  const directoryPath = withBasePath(directory)\n\n  // We combine develop & develop-html stages for purposes of generating the\n  // webpack config.\n  const stage = suppliedStage\n  const { rules, loaders, plugins } = await createUtils({ stage, program })\n\n  function processEnv(stage, defaultNodeEnv) {\n    debug(`Building env for \"${stage}\"`)\n    const env = process.env.NODE_ENV\n      ? process.env.NODE_ENV\n      : `${defaultNodeEnv}`\n    const envFile = path.join(process.cwd(), `./.env.${env}`)\n    let parsed = {}\n    try {\n      parsed = dotenv.parse(fs.readFileSync(envFile, { encoding: `utf8` }))\n    } catch (err) {\n      if (err.code !== `ENOENT`) {\n        report.error(`There was a problem processing the .env file`, err)\n      }\n    }\n\n    const envObject = Object.keys(parsed).reduce((acc, key) => {\n      acc[key] = JSON.stringify(parsed[key])\n      return acc\n    }, {})\n\n    const gatsbyVarObject = Object.keys(process.env).reduce((acc, key) => {\n      if (key.match(/^GATSBY_/)) {\n        acc[key] = JSON.stringify(process.env[key])\n      }\n      return acc\n    }, {})\n\n    // Don't allow overwriting of NODE_ENV, PUBLIC_DIR as to not break gatsby things\n    envObject.NODE_ENV = JSON.stringify(env)\n    envObject.PUBLIC_DIR = JSON.stringify(`${process.cwd()}/public`)\n    envObject.BUILD_STAGE = JSON.stringify(stage)\n\n    return Object.assign(envObject, gatsbyVarObject)\n  }\n\n  function getHmrPath() {\n    let hmrBasePath = `${program.ssl ? `https` : `http`}://${\n      program.host\n    }:${webpackPort}/`\n\n    const hmrSuffix = `__webpack_hmr&reload=true&overlay=false`\n\n    if (process.env.GATSBY_WEBPACK_PUBLICPATH) {\n      const pubPath = process.env.GATSBY_WEBPACK_PUBLICPATH\n      if (pubPath.substr(-1) === `/`) {\n        hmrBasePath = pubPath\n      } else {\n        hmrBasePath = `${pubPath}/`\n      }\n    }\n\n    return hmrBasePath + hmrSuffix\n  }\n\n  debug(`Loading webpack config for stage \"${stage}\"`)\n  function getOutput() {\n    switch (stage) {\n      case `develop`:\n        return {\n          path: directory,\n          filename: `[name].js`,\n          // Add /* filename */ comments to generated require()s in the output.\n          pathinfo: true,\n          // Point sourcemap entries to original disk location (format as URL on Windows)\n          publicPath:\n            process.env.GATSBY_WEBPACK_PUBLICPATH ||\n            `${program.ssl ? `https` : `http`}://${\n              program.host\n            }:${webpackPort}/`,\n          devtoolModuleFilenameTemplate: info =>\n            path.resolve(info.absoluteResourcePath).replace(/\\\\/g, `/`),\n          // Avoid React cross-origin errors\n          // See https://reactjs.org/docs/cross-origin-errors.html\n          crossOriginLoading: `anonymous`,\n        }\n      case `build-html`:\n      case `develop-html`:\n        // A temp file required by static-site-generator-plugin. See plugins() below.\n        // Deleted by build-html.js, since it's not needed for production.\n        return {\n          path: directoryPath(`public`),\n          filename: `render-page.js`,\n          libraryTarget: `umd`,\n          library: `lib`,\n          umdNamedDefine: true,\n          globalObject: `this`,\n          publicPath: program.prefixPaths\n            ? `${store.getState().config.pathPrefix}/`\n            : `/`,\n        }\n      case `build-javascript`:\n        return {\n          filename: `[name]-[chunkhash].js`,\n          chunkFilename: `[name]-[chunkhash].js`,\n          path: directoryPath(`public`),\n          publicPath: program.prefixPaths\n            ? `${store.getState().config.pathPrefix}/`\n            : `/`,\n        }\n      default:\n        throw new Error(`The state requested ${stage} doesn't exist.`)\n    }\n  }\n\n  function getEntry() {\n    switch (stage) {\n      case `develop`:\n        return {\n          commons: [\n            require.resolve(`react-hot-loader/patch`),\n            `${require.resolve(\n              `webpack-hot-middleware/client`\n            )}?path=${getHmrPath()}`,\n            directoryPath(`.cache/app`),\n          ],\n        }\n      case `develop-html`:\n        return {\n          main: directoryPath(`.cache/develop-static-entry`),\n        }\n      case `build-html`:\n        return {\n          main: directoryPath(`.cache/static-entry`),\n        }\n      case `build-javascript`:\n        return {\n          app: directoryPath(`.cache/production-app`),\n        }\n      default:\n        throw new Error(`The state requested ${stage} doesn't exist.`)\n    }\n  }\n\n  function getPlugins() {\n    let configPlugins = [\n      plugins.moment(),\n\n      // Add a few global variables. Set NODE_ENV to production (enables\n      // optimizations for React) and what the link prefix is (__PATH_PREFIX__).\n      plugins.define({\n        \"process.env\": processEnv(stage, `development`),\n        __PATH_PREFIX__: JSON.stringify(\n          program.prefixPaths ? store.getState().config.pathPrefix : ``\n        ),\n      }),\n    ]\n\n    switch (stage) {\n      case `develop`:\n        configPlugins = configPlugins.concat([\n          plugins.hotModuleReplacement(),\n          plugins.noEmitOnErrors(),\n\n          new FriendlyErrorsWebpackPlugin({\n            clearConsole: false,\n            compilationSuccessInfo: {\n              messages: [\n                `You can now view your site in the browser running at ${\n                  program.ssl ? `https` : `http`\n                }://${program.host}:${program.port}`,\n                `Your graphql debugger is running at ${\n                  program.ssl ? `https` : `http`\n                }://${program.host}:${program.port}/___graphql`,\n              ],\n            },\n          }),\n        ])\n        break\n      case `build-javascript`: {\n        configPlugins = configPlugins.concat([\n          plugins.extractText(),\n          // Minify Javascript.\n          plugins.uglify({\n            uglifyOptions: {\n              compress: {\n                drop_console: false,\n              },\n            },\n          }),\n          // Write out stats object mapping named dynamic imports (aka page\n          // components) to all their async chunks.\n          {\n            apply: function(compiler) {\n              compiler.hooks.done.tapAsync(\n                `gatsby-webpack-stats-extractor`,\n                (stats, done) => {\n                  let assets = {}\n                  for (let chunkGroup of stats.compilation.chunkGroups) {\n                    if (chunkGroup.name) {\n                      let files = []\n                      for (let chunk of chunkGroup.chunks) {\n                        files.push(...chunk.files)\n                      }\n                      assets[chunkGroup.name] = files.filter(\n                        f => f.slice(-4) !== `.map`\n                      )\n                    }\n                  }\n\n                  const webpackStats = {\n                    ...stats.toJson({ all: false, chunkGroups: true }),\n                    assetsByChunkName: assets,\n                  }\n\n                  fs.writeFile(\n                    path.join(`public`, `webpack.stats.json`),\n                    JSON.stringify(webpackStats),\n                    done\n                  )\n                }\n              )\n            },\n          },\n        ])\n        break\n      }\n    }\n\n    return configPlugins\n  }\n\n  function getDevtool() {\n    switch (stage) {\n      case `develop`:\n        return `eval`\n      // use a normal `source-map` for the html phases since\n      // it gives better line and column numbers\n      case `develop-html`:\n      case `build-html`:\n      case `build-javascript`:\n        return `source-map`\n      default:\n        return false\n    }\n  }\n\n  function getMode() {\n    switch (stage) {\n      case `build-javascript`:\n        return `production`\n      case `develop`:\n      case `develop-html`:\n      case `build-html`:\n        return `development` // So we don't uglify the html bundle\n      default:\n        return `production`\n    }\n  }\n\n  function getModule(config) {\n    // Common config for every env.\n    // prettier-ignore\n    let configRules = [\n      rules.js(),\n      rules.yaml(),\n      rules.fonts(),\n      rules.images(),\n      rules.audioVideo(),\n    ]\n    switch (stage) {\n      case `develop`: {\n        // get schema to pass to eslint config and program for directory\n        const { schema, program } = store.getState()\n\n        // if no local eslint config, then add gatsby config\n        if (!hasLocalEslint(program.directory)) {\n          configRules = configRules.concat([rules.eslint(schema)])\n        }\n\n        configRules = configRules.concat([\n          {\n            oneOf: [rules.cssModules(), rules.css()],\n          },\n        ])\n\n        break\n      }\n      case `build-html`:\n      case `develop-html`:\n        // We don't deal with CSS at all when building the HTML.\n        // The 'null' loader is used to prevent 'module not found' errors.\n        // On the other hand CSS modules loaders are necessary.\n\n        // prettier-ignore\n        configRules = configRules.concat([\n          {\n            oneOf: [\n              rules.cssModules(),\n              {\n                ...rules.css(),\n                use: [loaders.null()],\n              },\n            ],\n          },\n        ])\n        break\n\n      case `build-javascript`:\n        // We don't deal with CSS at all when building JavaScript but we still\n        // need to process the CSS so offline-plugin knows about the various\n        // assets referenced in your CSS.\n        //\n        // It's also necessary to process CSS Modules so your JS knows the\n        // classNames to use.\n        configRules = configRules.concat([\n          {\n            oneOf: [rules.cssModules(), rules.css()],\n          },\n\n          // Remove manually unused React Router modules. Try removing these\n          // rules whenever they get around to making a new release with their\n          // tree shaking fixes.\n          { test: /HashHistory/, use: `null-loader` },\n          { test: /MemoryHistory/, use: `null-loader` },\n          { test: /StaticRouter/, use: `null-loader` },\n          { test: /MemoryRouter/, use: `null-loader` },\n          { test: /HashRouter/, use: `null-loader` },\n        ])\n\n        break\n    }\n\n    return { rules: configRules }\n  }\n\n  function getResolve() {\n    const { program } = store.getState()\n    return {\n      // Use the program's extension list (generated via the\n      // 'resolvableExtensions' API hook).\n      extensions: [...program.extensions],\n      // Default to using the site's node_modules directory to look for\n      // modules. But also make it possible to install modules within the src\n      // directory if you need to install a specific version of a module for a\n      // part of your site.\n      modules: [\n        directoryPath(path.join(`src`, `node_modules`)),\n        `node_modules`,\n      ],\n      alias: {\n        gatsby$: directoryPath(path.join(`.cache`, `gatsby-browser-entry.js`)),\n        // Using directories for module resolution is mandatory because\n        // relative path imports are used sometimes\n        // See https://stackoverflow.com/a/49455609/6420957 for more details\n        \"core-js\": path.dirname(require.resolve(`core-js/package.json`)),\n        \"react-hot-loader\": path.dirname(\n          require.resolve(`react-hot-loader/package.json`)\n        ),\n      },\n    }\n  }\n\n  function getResolveLoader() {\n    const root = [path.resolve(directory, `node_modules`)]\n\n    const userLoaderDirectoryPath = path.resolve(directory, `loaders`)\n\n    try {\n      if (fs.statSync(userLoaderDirectoryPath).isDirectory()) {\n        root.push(userLoaderDirectoryPath)\n      }\n    } catch (err) {\n      debug(`Error resolving user loaders directory`, err)\n    }\n\n    return {\n      modules: [...root, path.join(__dirname, `../loaders`), `node_modules`],\n    }\n  }\n\n  const config = {\n    // Context is the base directory for resolving the entry option.\n    context: directory,\n    entry: getEntry(),\n    output: getOutput(),\n\n    module: getModule(),\n    plugins: getPlugins(),\n\n    // Certain \"isomorphic\" packages have different entry points for browser\n    // and server (see\n    // https://github.com/defunctzombie/package-browser-field-spec); setting\n    // the target tells webpack which file to include, ie. browser vs main.\n    target: stage === `build-html` || stage === `develop-html` ? `node` : `web`,\n    profile: stage === `production`,\n    devtool: getDevtool(),\n    // Turn off performance hints as we (for now) don't want to show the normal\n    // webpack output anywhere.\n    performance: {\n      hints: false,\n    },\n    mode: getMode(),\n\n    resolveLoader: getResolveLoader(),\n    resolve: getResolve(),\n\n    node: {\n      __filename: true,\n    },\n  }\n\n  if (stage === `build-javascript`) {\n    config.optimization = {\n      runtimeChunk: {\n        name: `webpack-runtime`,\n      },\n      splitChunks: {\n        name: false,\n      },\n    }\n  }\n\n  store.dispatch(actions.replaceWebpackConfig(config))\n  const getConfig = () => store.getState().webpack\n\n  await apiRunnerNode(`onCreateWebpackConfig`, {\n    getConfig,\n    stage,\n    rules,\n    loaders,\n    plugins,\n  })\n\n  return getConfig()\n}\n"],"file":"webpack.config.js"}