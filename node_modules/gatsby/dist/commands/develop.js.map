{"version":3,"sources":["../../src/commands/develop.js"],"names":["url","require","glob","fs","chokidar","express","graphqlHTTP","parsePath","request","rl","webpack","webpackConfig","bootstrap","store","copyStaticDirectory","developHtml","withBasePath","report","launchEditor","formatWebpackMessages","chalk","address","sourceNodes","websocketManager","getSslCert","slash","initTracer","setTimeout","rlInterface","createInterface","input","process","stdin","output","stdout","on","exit","startServer","program","directory","directoryPath","createIndexHtml","catch","err","name","panic","stripIndent","devConfig","port","compiler","app","use","log","path","heartbeat","schema","getState","graphiql","req","res","next","header","post","enableRefresh","env","ENABLE_GATSBY_REFRESH_ENDPOINT","refreshToken","GATSBY_REFRESH_TOKEN","authorizedRefresh","headers","authorization","console","end","get","query","fileName","lineNumber","static","__dirname","logLevel","publicPath","stats","developMiddleware","config","proxy","prefix","proxiedUrl","originalUrl","pipe","sendFile","decodeURIComponent","parsedPath","extname","startsWith","status","endsWith","server","Server","ssl","createServer","init","socket","getSocket","listener","listen","host","code","watchGlobs","map","watch","to","emit","module","exports","openTracingConfigFile","detect","parseInt","https","sitePackageJson","certFile","keyFile","Promise","resolve","_port","question","answer","length","match","then","c","l","prepareUrls","protocol","formatUrl","hostname","format","pathname","prettyPrintUrl","bold","isUnspecifiedHost","lanUrlForConfig","lanUrlForTerminal","ip","test","undefined","_e","localUrlForTerminal","localUrlForBrowser","printInstructions","appName","urls","useYarn","cyan","printDeprecationWarnings","deprecatedApis","fixMap","boundActionCreators","newName","docsLink","pathContext","deprecatedLocations","forEach","api","sync","nodir","file","fileText","readFileSync","matchingApis","filter","indexOf","push","yellow","isFirstCompile","hooks","done","tapAsync","messages","toJson","isSuccessful","errors","open"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst url = require(`url`)\nconst glob = require(`glob`)\nconst fs = require(`fs`)\nconst chokidar = require(`chokidar`)\nconst express = require(`express`)\nconst graphqlHTTP = require(`express-graphql`)\nconst parsePath = require(`parse-filepath`)\nconst request = require(`request`)\nconst rl = require(`readline`)\nconst webpack = require(`webpack`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst bootstrap = require(`../bootstrap`)\nconst { store } = require(`../redux`)\nconst copyStaticDirectory = require(`../utils/copy-static-directory`)\nconst developHtml = require(`./develop-html`)\nconst { withBasePath } = require(`../utils/path`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst launchEditor = require(`react-dev-utils/launchEditor`)\nconst formatWebpackMessages = require(`react-dev-utils/formatWebpackMessages`)\nconst chalk = require(`chalk`)\nconst address = require(`address`)\nconst sourceNodes = require(`../utils/source-nodes`)\nconst websocketManager = require(`../utils/websocket-manager`)\nconst getSslCert = require(`../utils/get-ssl-cert`)\nconst slash = require(`slash`)\nconst { initTracer } = require(`../utils/tracer`)\n\n// const isInteractive = process.stdout.isTTY\n\n// Watch the static directory and copy files to public as they're added or\n// changed. Wait 10 seconds so copying doesn't interfer with the regular\n// bootstrap.\nsetTimeout(() => {\n  copyStaticDirectory()\n}, 10000)\n\nconst rlInterface = rl.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n})\n\n// Quit immediately on hearing ctrl-c\nrlInterface.on(`SIGINT`, () => {\n  process.exit()\n})\n\nasync function startServer(program) {\n  const directory = program.directory\n  const directoryPath = withBasePath(directory)\n  const createIndexHtml = () =>\n    developHtml(program).catch(err => {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the html.js component for the development server.\n\n          See our docs page on debugging HTML builds for help https://goo.gl/yL9lND\n        `,\n        err\n      )\n    })\n\n  // Start bootstrap process.\n  await bootstrap(program)\n\n  await createIndexHtml()\n\n  const devConfig = await webpackConfig(\n    program,\n    directory,\n    `develop`,\n    program.port\n  )\n\n  const compiler = webpack(devConfig)\n\n  /**\n   * Set up the express app.\n   **/\n  const app = express()\n  app.use(\n    require(`webpack-hot-middleware`)(compiler, {\n      log: false,\n      path: `/__webpack_hmr`,\n      heartbeat: 10 * 1000,\n    })\n  )\n  app.use(\n    `/___graphql`,\n    graphqlHTTP({\n      schema: store.getState().schema,\n      graphiql: true,\n    })\n  )\n\n  // Allow requests from any origin. Avoids CORS issues when using the `--host` flag.\n  app.use((req, res, next) => {\n    res.header(`Access-Control-Allow-Origin`, `*`)\n    res.header(\n      `Access-Control-Allow-Headers`,\n      `Origin, X-Requested-With, Content-Type, Accept`\n    )\n    next()\n  })\n\n  /**\n   * Refresh external data sources.\n   * This behavior is disabled by default, but the ENABLE_REFRESH_ENDPOINT env var enables it\n   * If no GATSBY_REFRESH_TOKEN env var is available, then no Authorization header is required\n   **/\n  app.post(`/__refresh`, (req, res) => {\n    const enableRefresh = process.env.ENABLE_GATSBY_REFRESH_ENDPOINT\n    const refreshToken = process.env.GATSBY_REFRESH_TOKEN\n    const authorizedRefresh =\n      !refreshToken || req.headers.authorization === refreshToken\n\n    if (enableRefresh && authorizedRefresh) {\n      console.log(`Refreshing source data`)\n      sourceNodes()\n    }\n    res.end()\n  })\n\n  app.get(`/__open-stack-frame-in-editor`, (req, res) => {\n    launchEditor(req.query.fileName, req.query.lineNumber)\n    res.end()\n  })\n\n  app.use(express.static(__dirname + `/public`))\n\n  app.use(\n    require(`webpack-dev-middleware`)(compiler, {\n      logLevel: `trace`,\n      publicPath: devConfig.output.publicPath,\n      stats: `errors-only`,\n    })\n  )\n\n  // Expose access to app for advanced use cases\n  const { developMiddleware } = store.getState().config\n\n  if (developMiddleware) {\n    developMiddleware(app)\n  }\n\n  // Set up API proxy.\n  const { proxy } = store.getState().config\n  if (proxy) {\n    const { prefix, url } = proxy\n    app.use(`${prefix}/*`, (req, res) => {\n      const proxiedUrl = url + req.originalUrl\n      req.pipe(request(proxiedUrl)).pipe(res)\n    })\n  }\n\n  // Check if the file exists in the public folder.\n  app.get(`*`, (req, res, next) => {\n    // Load file but ignore errors.\n    res.sendFile(\n      directoryPath(`/public${decodeURIComponent(req.path)}`),\n      err => {\n        // No err so a file was sent successfully.\n        if (!err || !err.path) {\n          next()\n        } else if (err) {\n          // There was an error. Let's check if the error was because it\n          // couldn't find an HTML file. We ignore these as we want to serve\n          // all HTML from our single empty SSR html file.\n          const parsedPath = parsePath(err.path)\n          if (\n            parsedPath.extname === `` ||\n            parsedPath.extname.startsWith(`.html`)\n          ) {\n            next()\n          } else {\n            res.status(404).end()\n          }\n        }\n      }\n    )\n  })\n\n  // Render an HTML page and serve it.\n  app.use((req, res, next) => {\n    const parsedPath = parsePath(req.path)\n    if (\n      parsedPath.extname === `` ||\n      parsedPath.extname.startsWith(`.html`) ||\n      parsedPath.path.endsWith(`/`)\n    ) {\n      res.sendFile(directoryPath(`public/index.html`), err => {\n        if (err) {\n          res.status(500).end()\n        }\n      })\n    } else {\n      next()\n    }\n  })\n\n  /**\n   * Set up the HTTP server and socket.io.\n   **/\n  let server = require(`http`).Server(app)\n\n  // If a SSL cert exists in program, use it with `createServer`.\n  if (program.ssl) {\n    server = require(`https`).createServer(program.ssl, app)\n  }\n  websocketManager.init({ server, directory: program.directory })\n  const socket = websocketManager.getSocket()\n\n  const listener = server.listen(program.port, program.host, err => {\n    if (err) {\n      if (err.code === `EADDRINUSE`) {\n        // eslint-disable-next-line max-len\n        report.panic(\n          `Unable to start Gatsby on port ${\n            program.port\n          } as there's already a process listening on that port.`\n        )\n        return\n      }\n\n      report.panic(`There was a problem starting the development server`, err)\n    }\n  })\n\n  // Register watcher that rebuilds index.html every time html.js changes.\n  const watchGlobs = [`src/html.js`, `plugins/**/gatsby-ssr.js`].map(path =>\n    slash(directoryPath(path))\n  )\n\n  chokidar.watch(watchGlobs).on(`change`, async () => {\n    await createIndexHtml()\n    socket.to(`clients`).emit(`reload`)\n  })\n\n  return [compiler, listener]\n}\n\nmodule.exports = async (program: any) => {\n  initTracer(program.openTracingConfigFile)\n\n  const detect = require(`detect-port`)\n  const port =\n    typeof program.port === `string` ? parseInt(program.port, 10) : program.port\n\n  // In order to enable custom ssl, --cert-file --key-file and -https flags must all be\n  // used together\n  if ((program[`cert-file`] || program[`key-file`]) && !program.https) {\n    report.panic(\n      `for custom ssl --https, --cert-file, and --key-file must be used together`\n    )\n  }\n\n  // Check if https is enabled, then create or get SSL cert.\n  // Certs are named after `name` inside the project's package.json.\n  if (program.https) {\n    program.ssl = await getSslCert({\n      name: program.sitePackageJson.name,\n      certFile: program[`cert-file`],\n      keyFile: program[`key-file`],\n      directory: program.directory,\n    })\n  }\n\n  let compiler\n  await new Promise(resolve => {\n    detect(port, (err, _port) => {\n      if (err) {\n        report.panic(err)\n      }\n\n      if (port !== _port) {\n        // eslint-disable-next-line max-len\n        const question = `Something is already running at port ${port} \\nWould you like to run the app at another port instead? [Y/n] `\n\n        rlInterface.question(question, answer => {\n          if (answer.length === 0 || answer.match(/^yes|y$/i)) {\n            program.port = _port // eslint-disable-line no-param-reassign\n          }\n\n          startServer(program).then(([c, l]) => {\n            compiler = c\n            resolve()\n          })\n        })\n      } else {\n        startServer(program).then(([c, l]) => {\n          compiler = c\n          resolve()\n        })\n      }\n    })\n  })\n\n  function prepareUrls(protocol, host, port) {\n    const formatUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port,\n        pathname: `/`,\n      })\n    const prettyPrintUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port: chalk.bold(port),\n        pathname: `/`,\n      })\n\n    const isUnspecifiedHost = host === `0.0.0.0` || host === `::`\n    let lanUrlForConfig, lanUrlForTerminal\n    if (isUnspecifiedHost) {\n      try {\n        // This can only return an IPv4 address\n        lanUrlForConfig = address.ip()\n        if (lanUrlForConfig) {\n          // Check if the address is a private ip\n          // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n          if (\n            /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n              lanUrlForConfig\n            )\n          ) {\n            // Address is private, format it for later use\n            lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig)\n          } else {\n            // Address is not private, so we will discard it\n            lanUrlForConfig = undefined\n          }\n        }\n      } catch (_e) {\n        // ignored\n      }\n    }\n    // TODO collect errors (GraphQL + Webpack) in Redux so we\n    // can clear terminal and print them out on every compile.\n    // Borrow pretty printing code from webpack plugin.\n    const localUrlForTerminal = prettyPrintUrl(host)\n    const localUrlForBrowser = formatUrl(host)\n    return {\n      lanUrlForConfig,\n      lanUrlForTerminal,\n      localUrlForTerminal,\n      localUrlForBrowser,\n    }\n  }\n\n  function printInstructions(appName, urls, useYarn) {\n    console.log()\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`)\n    console.log()\n\n    if (urls.lanUrlForTerminal) {\n      console.log(\n        `  ${chalk.bold(`Local:`)}            ${urls.localUrlForTerminal}`\n      )\n      console.log(\n        `  ${chalk.bold(`On Your Network:`)}  ${urls.lanUrlForTerminal}`\n      )\n    } else {\n      console.log(`  ${urls.localUrlForTerminal}`)\n    }\n\n    console.log()\n    console.log(\n      `View GraphiQL, an in-browser IDE, to explore your site's data and schema`\n    )\n    console.log()\n    console.log(`  ${urls.localUrlForTerminal}___graphql`)\n\n    console.log()\n    console.log(`Note that the development build is not optimized.`)\n    console.log(\n      `To create a production build, use ` + `${chalk.cyan(`gatsby build`)}`\n    )\n    console.log()\n  }\n\n  function printDeprecationWarnings() {\n    const deprecatedApis = [`boundActionCreators`, `pathContext`]\n    const fixMap = {\n      boundActionCreators: {\n        newName: `actions`,\n        docsLink: `https://gatsby.app/boundActionCreators`,\n      },\n      pathContext: {\n        newName: `pageContext`,\n        docsLink: `https://gatsby.app/pathContext`,\n      },\n    }\n    const deprecatedLocations = {}\n    deprecatedApis.forEach(api => (deprecatedLocations[api] = []))\n\n    glob\n      .sync(`{,!(node_modules|public)/**/}*.js`, { nodir: true })\n      .forEach(file => {\n        const fileText = fs.readFileSync(file)\n        const matchingApis = deprecatedApis.filter(\n          api => fileText.indexOf(api) !== -1\n        )\n        matchingApis.forEach(api => deprecatedLocations[api].push(file))\n      })\n\n    deprecatedApis.forEach(api => {\n      if (deprecatedLocations[api].length) {\n        console.log(\n          `%s %s %s %s`,\n          chalk.cyan(api),\n          chalk.yellow(`is deprecated. Please use`),\n          chalk.cyan(fixMap[api].newName),\n          chalk.yellow(\n            `instead. For migration instructions, see ${\n              fixMap[api].docsLink\n            }\\nCheck the following files:`\n          )\n        )\n        console.log()\n        deprecatedLocations[api].forEach(file => console.log(file))\n        console.log()\n      }\n    })\n  }\n\n  let isFirstCompile = true\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.hooks.done.tapAsync(`print getsby instructions`, (stats, done) => {\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    const messages = formatWebpackMessages(stats.toJson({}, true))\n    const urls = prepareUrls(\n      program.ssl ? `https` : `http`,\n      program.host,\n      program.port\n    )\n    const isSuccessful = !messages.errors.length\n    // if (isSuccessful) {\n    // console.log(chalk.green(`Compiled successfully!`))\n    // }\n    // if (isSuccessful && (isInteractive || isFirstCompile)) {\n    if (isSuccessful && isFirstCompile) {\n      printInstructions(program.sitePackageJson.name, urls, program.useYarn)\n      printDeprecationWarnings()\n      if (program.open) {\n        require(`opn`)(urls.localUrlForBrowser)\n      }\n    }\n\n    isFirstCompile = false\n\n    // If errors exist, only show errors.\n    // if (messages.errors.length) {\n    // // Only keep the first error. Others are often indicative\n    // // of the same problem, but confuse the reader with noise.\n    // if (messages.errors.length > 1) {\n    // messages.errors.length = 1\n    // }\n    // console.log(chalk.red(\"Failed to compile.\\n\"))\n    // console.log(messages.errors.join(\"\\n\\n\"))\n    // return\n    // }\n\n    // Show warnings if no errors were found.\n    // if (messages.warnings.length) {\n    // console.log(chalk.yellow(\"Compiled with warnings.\\n\"))\n    // console.log(messages.warnings.join(\"\\n\\n\"))\n\n    // // Teach some ESLint tricks.\n    // console.log(\n    // \"\\nSearch for the \" +\n    // chalk.underline(chalk.yellow(\"keywords\")) +\n    // \" to learn more about each warning.\"\n    // )\n    // console.log(\n    // \"To ignore, add \" +\n    // chalk.cyan(\"// eslint-disable-next-line\") +\n    // \" to the line before.\\n\"\n    // )\n    // }\n\n    done()\n  })\n}\n"],"file":"develop.js"}