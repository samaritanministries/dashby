{"version":3,"sources":["webpack:///./src/pages/components/checkboxes/code.js","webpack:///./src/components/subnavigation.js","webpack:///./src/components/codetoggle.js","webpack:///./node_modules/prismjs/plugins/custom-class/prism-custom-class.min.js","webpack:///./src/components/codetoggle-scss.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js"],"names":["currentPageNameLower","toLowerCase","CheckboxesCode","render","location","this","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_5__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_6__","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","pathname","type","defaultChecked","htmlFor","disabled","_components_codetoggle__WEBPACK_IMPORTED_MODULE_7__","_components_codetoggle_scss__WEBPACK_IMPORTED_MODULE_8__","name","Component","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_3___default","object","isRequired","__webpack_exports__","_ref","sectionName","getPageName","getSectionName","isPartiallyActive","_ref2","isPartiallyCurrent","PartialNavLink","Object","assign","getProps","children","CodeToggle","_this","_React$Component","call","state","showCode","toggleCode","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default","setState","prevState","componentDidMount","prismjs__WEBPACK_IMPORTED_MODULE_5___default","highlightAll","plugins","customClass","map","tag","react__WEBPACK_IMPORTED_MODULE_4___default","onClick","global","self","Prism","s","classMap","i","prefix","prefixString","hooks","add","classes","CodeToggleSCSS","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","prismjs__WEBPACK_IMPORTED_MODULE_4___default","react__WEBPACK_IMPORTED_MODULE_3___default","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","insertBefore","keyword","property","statement","boolean","null","operator","rest"],"mappings":"4MAWMA,EADkB,aACqBC,cAEvCC,4FAGJC,OAAA,WAAS,IACCC,EAAaC,KAAKC,MAAlBF,SAER,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAChBJ,EAAAC,EAAAC,cAAA,UAZc,cAadF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,SAAUb,KAEpBO,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACAP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAEbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gCAAgCI,GAAG,oBAAjD,oBACER,EAAAC,EAAAC,cAACO,EAAA,KAAD,CAAMC,GAAIb,EAASc,SAAW,qBAAsBP,UAAU,kDAElEJ,EAAAC,EAAAC,cAAA,oEAA2DF,EAAAC,EAAAC,cAAA,wBAA3D,oDACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,YAAUE,UAAU,wBAClBJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,4BAA4BK,gBAAgB,IACtEb,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,6BAAf,aAEFd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,8BAC1BR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,6BAAf,aAEFd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,8BAC1BR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,6BAAf,sEAIJd,EAAAC,EAAAC,cAAA,YAAUE,UAAU,uBAClBJ,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,oCAAoCO,UAAQ,EAACF,gBAAgB,IACvFb,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,qCAAf,aAEFd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,qCAAqCO,UAAQ,IACvEf,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,sCAAf,cAIJd,EAAAC,EAAAC,cAAA,YAAUE,UAAU,iCAClBJ,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,2BAA2BK,gBAAgB,IACrEb,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,4BAAf,aAEFd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,6BAC1BR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,4BAAf,aAEFd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,6BAC1BR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,4BAAf,cAIJd,EAAAC,EAAAC,cAAA,YAAUE,UAAU,mCAClBJ,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,6BAA6BK,gBAAgB,IACvEb,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,8BAAf,aAEFd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,+BAC1BR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,8BAAf,aAEFd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,+BAC1BR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,8BAAf,cAIJd,EAAAC,EAAAC,cAAA,YAAUE,UAAU,uBAClBJ,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,mCAAmCK,gBAAgB,IAC7Eb,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,oCAAf,aAEFd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,qCAC1BR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,oCAAf,aAEFd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWJ,GAAG,qCAC1BR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,oCAAf,eAKJd,EAAAC,EAAAC,cAACc,EAAA,EAAD,wjHAiFAhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,sgBASAjB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAiBI,GAAG,uBAAlC,wBACER,EAAAC,EAAAC,cAACO,EAAA,KAAD,CAAMC,GAAIb,EAASc,SAAW,wBAAyBP,UAAU,kDAErEJ,EAAAC,EAAAC,cAAA,oDAA2CF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,yBAA3C,iBAAoHJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,kBAApH,KACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,YAAUE,UAAU,uBAClBJ,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWM,KAAK,kBAAkBV,GAAG,mBAAmBK,gBAAgB,IACpFb,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,mBAAmBV,UAAU,QAA5C,aAEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWM,KAAK,kBAAkBV,GAAG,qBACjDR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,mBAAmBV,UAAU,QAA5C,aAEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWM,KAAK,kBAAkBV,GAAG,mBAAmBO,UAAQ,IAC5Ef,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,mBAAmBV,UAAU,iBAA5C,eAKJJ,EAAAC,EAAAC,cAACc,EAAA,EAAD,+sBAiBAhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,gXAOAjB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAiBI,GAAG,qBAAlC,sBACER,EAAAC,EAAAC,cAACO,EAAA,KAAD,CAAMC,GAAIb,EAASc,SAAW,sBAAuBP,UAAU,kDAEnEJ,EAAAC,EAAAC,cAAA,oDAA2CF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,yBAA3C,iBAAoHJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,kBAApH,KACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACdJ,EAAAC,EAAAC,cAAA,YAAUE,UAAU,uBACnBJ,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sCACdJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWM,KAAK,iBAAiBV,GAAG,kBAAkBK,gBAAgB,IAClFb,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,kBAAkBV,UAAU,QAA3C,aAEDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sCACdJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWM,KAAK,iBAAiBV,GAAG,oBAChDR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,kBAAkBV,UAAU,QAA3C,aAEDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sCACdJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWM,KAAK,iBAAiBV,GAAG,kBAAkBO,UAAQ,IAC1Ef,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,kBAAkBV,UAAU,iBAA3C,eAKDJ,EAAAC,EAAAC,cAACc,EAAA,EAAD,2wBAkBAhB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAiBI,GAAG,qBAAlC,sBACER,EAAAC,EAAAC,cAACO,EAAA,KAAD,CAAMC,GAAIb,EAASc,SAAW,sBAAuBP,UAAU,kDAEnEJ,EAAAC,EAAAC,cAAA,wDAA+CF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,aAA/C,iBAA4GJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,kBAA5G,KACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACbJ,EAAAC,EAAAC,cAAA,YAAUE,UAAU,uBAClBJ,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWM,KAAK,iBAAiBV,GAAG,kBAAkBK,gBAAgB,IAClFb,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,kBAAkBV,UAAU,QAA3C,aAEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWM,KAAK,iBAAiBV,GAAG,oBAChDR,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,kBAAkBV,UAAU,QAA3C,aAEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,SAAOU,KAAK,WAAWM,KAAK,iBAAiBV,GAAG,kBAAkBO,UAAQ,IAC1Ef,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,kBAAkBV,UAAU,iBAA3C,eAKJJ,EAAAC,EAAAC,cAACc,EAAA,EAAD,+uBAxSiBhB,EAAAC,EAAMkB,WAA7BxB,EACGyB,UAAY,CAAEvB,SAAUwB,EAAApB,EAAUqB,OAAOC,YAiUlDC,EAAA,+ECvSAA,EAAA,EArCe,SAAAC,GAA+B,IAA5BnB,EAA4BmB,EAA5BnB,SAAUoB,EAAkBD,EAAlBC,YAEP,MAAfA,IACFA,EAAc,cAGC,aAAbpB,EACFA,EAAW,WACW,qBAAbA,EACTA,EAAW,mBACW,kBAAbA,IACTA,EAAW,iBAGb,IAAMqB,EAAcrB,EACdsB,EAAiBF,EAEjBG,EAAoB,SAAAC,GAC1B,OADsDA,EAAzBC,mBAEzB,CAAE3B,UAAW,UACb,CAAEA,UAAW,KAGX4B,EAAiB,SAAAjC,GAAK,OAC1BC,EAAAC,EAAAC,cAACO,EAAA,KAADwB,OAAAC,OAAA,CAAMC,SAAUN,GAAuB9B,GACpCA,EAAMqC,WAIX,OACEpC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAC8B,EAAD,CAAgBtB,GAAKkB,EAAiB,IAAMD,EAAe,SAA3D,QACA3B,EAAAC,EAAAC,cAAC8B,EAAD,CAAgBtB,GAAKkB,EAAiB,IAAMD,EAAe,eAA3D,sIC/BFU,sBAEJ,SAAAA,EAAYtC,GAAO,IAAAuC,EAAA,OACjBA,EAAAC,EAAAC,KAAA1C,KAAMC,IAAND,MACK2C,MAAQ,CAAEC,UAAU,GACzBJ,EAAKK,WAAaL,EAAKK,WAAWC,KAAhBC,QAAAP,KAHDA,sCAMlBK,WAAA,WACC7C,KAAKgD,SAAS,SAAAC,GAAS,MAAK,CAC1BL,UAAWK,EAAUL,eAIzBM,kBAAA,WACEC,EAAAhD,EAAMiD,kBAGRtD,OAAA,WAGE,OAFAqD,EAAAhD,EAAMkD,QAAQC,YAAYC,IAAI,CAAEC,IAAK,eAGnCC,EAAAtD,EAAAC,cAAA,OAAKE,UAAWN,KAAK2C,MAAMC,SAAW,aAAe,IACnDa,EAAAtD,EAAAC,cAAA,OAAKsD,QAAS1D,KAAK6C,WAAYvC,UAAWN,KAAK2C,MAAMC,SAAW,sBAAwB,eAAea,EAAAtD,EAAAC,cAAA,KAAGE,UAAU,gBACpHmD,EAAAtD,EAAAC,cAAA,OAAKE,UAAWN,KAAK2C,MAAMC,SAAW,qBAAuB,iBAC3Da,EAAAtD,EAAAC,cAAA,QAAME,UAAWN,KAAK2C,MAAMC,SAAW,qBAAuB,iBAAkB5C,KAAKC,MAAMqC,gBAzB5EmB,EAAAtD,EAAMkB,YA+B/BK,EAAA,0BCnCA,SAAAiC,IAAA,WAAY,uBAAAC,WAAAC,YAAA,IAAAF,KAAAE,MAAA,CAAmF,IAAAC,EAAA,CAAOC,SAAA,IAAaF,MAAAR,QAAAC,YAAA,CAA2BC,IAAA,SAAAS,GAAgBF,EAAAC,SAAAC,GAAaC,OAAA,SAAAD,GAAoBF,EAAAI,aAAAF,IAAkBH,MAAAM,MAAAC,IAAA,gBAAAJ,IAAoCF,EAAAC,UAAAD,EAAAI,gBAAAF,EAAAK,QAAAL,EAAAK,QAAAd,IAAA,SAAAS,GAAmE,OAAAF,EAAAI,cAAA,KAAAJ,EAAAC,SAAAC,aAAxT,uICIMM,sBAEJ,SAAAA,EAAYrE,GAAO,IAAAuC,EAAA,OACjBA,EAAAC,EAAAC,KAAA1C,KAAMC,IAAND,MACK2C,MAAQ,CAAEC,UAAU,GACzBJ,EAAKK,WAAaL,EAAKK,WAAWC,KAAhByB,QAAA/B,KAHDA,sCAMlBK,WAAA,WACC7C,KAAKgD,SAAS,SAAAC,GAAS,MAAK,CAC1BL,UAAWK,EAAUL,eAIzBM,kBAAA,WACEsB,EAAArE,EAAMiD,kBAGRtD,OAAA,WAEE,OACE2E,EAAAtE,EAAAC,cAAA,OAAKE,UAAU,iBACbmE,EAAAtE,EAAAC,cAAA,QAAME,UAAU,iBAAiBN,KAAKC,MAAMqC,eAtBvBmC,EAAAtE,EAAMkB,YA2BnCK,EAAA,uBC/BAmC,MAAAa,UAAAC,KAAAd,MAAAa,UAAAE,OAAA,OAAmDC,QAAA,CAASC,QAAA,uCAAAC,YAAA,GAA6DC,OAAA,CAASF,QAAA,0CAA8CG,OAAA,CAAYC,KAAA,YAAgBC,IAAA,0BAAAC,SAAA,CAAyCN,QAAA,mFAAoFG,OAAA,CAAeI,OAAA,CAAQP,QAAA,IAAAQ,MAAA,aAA8BC,YAAA,UAAAC,SAAA,6BAA2D3B,MAAAa,UAAAe,aAAA,iBAAgDC,QAAA,wGAAgHZ,QAAA,4BAAAC,YAAA,MAAoDlB,MAAAa,UAAAC,KAAAgB,SAAA,CAAiCb,QAAA,6CAAwCG,OAAA,CAAqBO,SAAA,2BAAmC3B,MAAAa,UAAAe,aAAA,oBAAkDD,SAAA,2BAAkC3B,MAAAa,UAAAe,aAAA,mBAAkDF,YAAA,CAAaT,QAAA,UAAAQ,MAAA,YAAmCM,UAAA,CAAYd,QAAA,6BAAAQ,MAAA,WAAqDO,QAAA,qBAAAC,KAAA,WAAAC,SAAA,CAA4DjB,QAAA,kDAAAC,YAAA,KAAyElB,MAAAa,UAAAC,KAAAK,OAAAC,OAAAe,KAAAnC,MAAAa,UAAAC","file":"component---src-pages-components-checkboxes-code-js-b573ce13a1fa83d25edc.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\nimport CodeToggleSCSS from '../../../components/codetoggle-scss'\n\nconst currentPageName = \"Checkboxes\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nclass CheckboxesCode extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n        <div className=\"row\">\n          <div className=\"column column--full\">\n\n            <h2 className=\"example-header no-margin--top\" id=\"customCheckboxes\">Custom Checkboxes\n              <Link to={location.pathname + \"/#customCheckboxes\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n        \t\t<p>To use custom checkboxes, be sure to include your input <strong>before</strong> your label. Failing to do so will break styles.</p>\n        \t\t<div className=\"row example-container\">\n        \t\t  <fieldset className=\"column column--third\">\n        \t\t    <label>Checkboxes</label>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox1--custom\" defaultChecked={true}/>\n        \t\t      <label htmlFor=\"dashing-checkbox1--custom\">Option 1</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox2--custom\"/>\n        \t\t      <label htmlFor=\"dashing-checkbox2--custom\">Option 2</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox3--custom\"/>\n        \t\t      <label htmlFor=\"dashing-checkbox3--custom\">Option 3 is much longer and indents when it goes beyond one line</label>\n        \t\t    </div>\n        \t\t  </fieldset>\n\n        \t\t  <fieldset className=\"column column--full\">\n        \t\t    <label>Disabled Checkbox</label>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled\" disabled defaultChecked={true}/>\n        \t\t      <label htmlFor=\"dashing-checkbox--custom-disabled\">Disabled</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled2\" disabled/>\n        \t\t      <label htmlFor=\"dashing-checkbox--custom-disabled2\">Disabled</label>\n        \t\t    </div>\n        \t\t  </fieldset>\n\n        \t\t  <fieldset className=\"column column--full has-error\">\n        \t\t    <label>Checkboxes with Errors</label>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--error1\" defaultChecked={true}/>\n        \t\t      <label htmlFor=\"dashing-checkbox--error1\">Option 1</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--error2\" />\n        \t\t      <label htmlFor=\"dashing-checkbox--error2\">Option 2</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--error3\" />\n        \t\t      <label htmlFor=\"dashing-checkbox--error3\">Option 3</label>\n        \t\t    </div>\n        \t\t  </fieldset>\n\n        \t\t  <fieldset className=\"column column--full has-warning\">\n        \t\t    <label>Checkboxes with Warnings</label>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--warning1\" defaultChecked={true}/>\n        \t\t      <label htmlFor=\"dashing-checkbox--warning1\">Option 1</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--warning2\" />\n        \t\t      <label htmlFor=\"dashing-checkbox--warning2\">Option 2</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox--custom\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--warning3\" />\n        \t\t      <label htmlFor=\"dashing-checkbox--warning3\">Option 3</label>\n        \t\t    </div>\n        \t\t  </fieldset>\n\n        \t\t  <fieldset className=\"column column--full\">\n        \t\t    <label>Inline Checkboxes</label>\n        \t\t    <div className=\"checkbox--custom inline\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline1\" defaultChecked={true}/>\n        \t\t      <label htmlFor=\"dashing-checkbox--custom-inline1\">Option 1</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox--custom inline\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline2\"/>\n        \t\t      <label htmlFor=\"dashing-checkbox--custom-inline2\">Option 2</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox--custom inline\">\n        \t\t      <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline3\"/>\n        \t\t      <label htmlFor=\"dashing-checkbox--custom-inline3\">Option 3</label>\n        \t\t    </div>\n        \t\t  </fieldset>\n        \t\t</div>\n\n            <CodeToggle>\n    {`<!-- Custom Checkboxes -->\n    <fieldset class=\"column column--third\">\n      <label>Checkboxes</label>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox1--custom\" checked/>\n        <label for=\"dashing-checkbox1--custom\">Option 1</label>\n      </div>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox2--custom\"/>\n        <label for=\"dashing-checkbox2--custom\">Option 2</label>\n      </div>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox3--custom\"/>\n        <label for=\"dashing-checkbox3--custom\">Option 3 is much longer and indents when it goes beyond one line</label>\n      </div>\n    </fieldset>\n\n    <fieldset class=\"column column--full\">\n      <label>Disabled Checkbox</label>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled\" disabled checked/>\n        <label for=\"dashing-checkbox--custom-disabled\">Disabled</label>\n      </div>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--custom-disabled2\" disabled/>\n        <label for=\"dashing-checkbox--custom-disabled2\">Disabled</label>\n      </div>\n    </fieldset>\n\n    <!-- Add the class .has-error to the parent container to apply error styles -->\n    <fieldset class=\"column column--full has-error\">\n      <label>Checkboxes with Errors</label>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--error1\" checked/>\n        <label for=\"dashing-checkbox--error1\">Option 1</label>\n      </div>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--error2\" />\n        <label for=\"dashing-checkbox--error2\">Option 2</label>\n      </div>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--error3\" />\n        <label for=\"dashing-checkbox--error3\">Option 3</label>\n      </div>\n    </fieldset>\n\n    <!-- Add the class .has-warning to the parent container to apply warning styles -->\n    <fieldset class=\"column column--full has-warning\">\n      <label>Checkboxes with Warnings</label>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--warning1\" checked/>\n        <label for=\"dashing-checkbox--warning1\">Option 1</label>\n      </div>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--warning2\" />\n        <label for=\"dashing-checkbox--warning2\">Option 2</label>\n      </div>\n      <div class=\"checkbox--custom\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--warning3\" />\n        <label for=\"dashing-checkbox--warning3\">Option 3</label>\n      </div>\n    </fieldset>\n\n    <!-- Add the class .inline to the .checkbox--custom element to list your checkboxes vertially -->\n    <fieldset class=\"column column--full\">\n      <label>Inline Checkboxes</label>\n      <div class=\"checkbox--custom inline\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline1\" checked/>\n        <label for=\"dashing-checkbox--custom-inline1\">Option 1</label>\n      </div>\n      <div class=\"checkbox--custom inline\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline2\"/>\n        <label for=\"dashing-checkbox--custom-inline2\">Option 2</label>\n      </div>\n      <div class=\"checkbox--custom inline\">\n        <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline3\"/>\n        <label for=\"dashing-checkbox--custom-inline3\">Option 3</label>\n      </div>\n    </fieldset>`}\n            </CodeToggle>\n            <CodeToggleSCSS>\n    {`//Include these variables in your theme file to change the color of your checkbox\n    $checkbox--active: $blue !default; //Color of checkbox when checked\n    $checkbox--icon: $white !default; //Color of check icon when checked\n    $checkbox--focus: $blue-300 !default; //Color of border around checkbox when focused\n    $checkbox--disabled: $gray-150 !default; //Color of checkbox when checked and disabled\n    $checkbox--icon-disabled: $gray-500 !default; //Color of check icon when checked and disabled`}\n            </CodeToggleSCSS>\n\n            <h2 className=\"example-header\" id=\"defaultCheckboxCard\">Default Checkbox Card\n              <Link to={location.pathname + \"/#defaultCheckboxCard\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n        \t\t<p>To use smaller checkbox cards apply the <code className=\"example-text\">.checkbox-card--small</code> class to the <code className=\"example-text\">.checkbox-card</code>.</p>\n        \t\t<div className=\"row example-container\">\n        \t\t  <fieldset className=\"column column--full\">\n        \t\t    <label>Checkbox Card</label>\n        \t\t    <div className=\"checkbox-card\">\n        \t\t      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline1\" defaultChecked={true}/>\n        \t\t      <label htmlFor=\"checkbox-inline1\" className=\"card\">Option 1</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox-card\">\n        \t\t      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline2\" />\n        \t\t      <label htmlFor=\"checkbox-inline2\" className=\"card\">Option 2</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox-card\">\n        \t\t      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline3\" disabled />\n        \t\t      <label htmlFor=\"checkbox-inline3\" className=\"card disabled\">Disabled</label>\n        \t\t    </div>\n        \t\t  </fieldset>\n        \t\t</div>\n\n            <CodeToggle>\n    {`<fieldset class=\"column column--full\">\n      <label>Checkbox Card</label>\n      <div class=\"checkbox-card\">\n        <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline1\" checked/>\n        <label for=\"checkbox-inline1\" class=\"card\">Option 1</label>\n      </div>\n      <div class=\"checkbox-card\">\n        <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline2\" />\n        <label for=\"checkbox-inline2\" class=\"card\">Option 2</label>\n      </div>\n      <div class=\"checkbox-card\">\n        <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline3\" disabled />\n        <label for=\"checkbox-inline3\" class=\"card disabled\">Disabled</label>\n      </div>\n    </fieldset>`}\n            </CodeToggle>\n            <CodeToggleSCSS>\n    {`//Include these variables in your theme file to change the color or padding of your checkbox button cards\n    $card-checkbox--active: $blue !default; //Color of checkbox and card when checked\n    $card-checkbox--focus: $blue-300 !default; //Color of border around card-checkbox when focused\n    $card-checkbox--padding: 1rem !default; //Padding of checkbox`}\n            </CodeToggleSCSS>\n\n            <h2 className=\"example-header\" id=\"smallCheckboxCard\">Small Checkbox Card\n              <Link to={location.pathname + \"/#smallCheckboxCard\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n        \t\t<p>To use smaller checkbox cards apply the <code className=\"example-text\">.checkbox-card--small</code> class to the <code className=\"example-text\">.checkbox-card</code>.</p>\n        \t\t<div className=\"row example-container\">\n        \t\t\t<fieldset className=\"column column--full\">\n        \t\t\t\t<label>Small Checkbox Card</label>\n        \t\t\t\t<div className=\"checkbox-card checkbox-card--small\">\n        \t\t\t\t\t<input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small1\" defaultChecked={true}/>\n        \t\t\t\t\t<label htmlFor=\"checkbox-small1\" className=\"card\">Option 1</label>\n        \t\t\t\t</div>\n        \t\t\t\t<div className=\"checkbox-card checkbox-card--small\">\n        \t\t\t\t\t<input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small2\" />\n        \t\t\t\t\t<label htmlFor=\"checkbox-small2\" className=\"card\">Option 2</label>\n        \t\t\t\t</div>\n        \t\t\t\t<div className=\"checkbox-card checkbox-card--small\">\n        \t\t\t\t\t<input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small3\" disabled />\n        \t\t\t\t\t<label htmlFor=\"checkbox-small3\" className=\"card disabled\">Disabled</label>\n        \t\t\t\t</div>\n        \t\t\t</fieldset>\n        \t\t</div>\n\n            <CodeToggle>\n    {`<fieldset class=\"column column--full\">\n      <label>Small Checkbox Card</label>\n      <div class=\"checkbox-card checkbox-card--small\">\n        <input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small1\" checked/>\n        <label for=\"checkbox-small1\" class=\"card\">Option 1</label>\n      </div>\n      <div class=\"checkbox-card checkbox-card--small\">\n        <input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small2\" />\n        <label for=\"checkbox-small2\" class=\"card\">Option 2</label>\n      </div>\n      <div class=\"checkbox-card checkbox-card--small\">\n        <input type=\"checkbox\" name=\"checkbox-small\" id=\"checkbox-small3\" disabled />\n        <label for=\"checkbox-small3\" class=\"card disabled\">Disabled</label>\n      </div>\n    </fieldset>`}\n            </CodeToggle>\n\n            <h2 className=\"example-header\" id=\"blockCheckboxCard\">Block Checkbox Card\n              <Link to={location.pathname + \"/#blockCheckboxCard\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n        \t\t<p>To use block style checkbox cards apply the <code className=\"example-text\">.is-block</code> class to the <code className=\"example-text\">.checkbox-card</code>.</p>\n        \t\t<div className=\"row example-container\">\n        \t\t  <fieldset className=\"column column--half\">\n        \t\t    <label>Block Checkbox Card</label>\n        \t\t    <div className=\"checkbox-card is-block\">\n        \t\t      <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block1\" defaultChecked={true}/>\n        \t\t      <label htmlFor=\"checkbox-block1\" className=\"card\">Option 1</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox-card is-block\">\n        \t\t      <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block2\" />\n        \t\t      <label htmlFor=\"checkbox-block2\" className=\"card\">Option 2</label>\n        \t\t    </div>\n        \t\t    <div className=\"checkbox-card is-block\">\n        \t\t      <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block3\" disabled />\n        \t\t      <label htmlFor=\"checkbox-block3\" className=\"card disabled\">Disabled</label>\n        \t\t    </div>\n        \t\t  </fieldset>\n        \t\t</div>\n\n            <CodeToggle>\n    {`<fieldset class=\"column column--half\">\n      <label>Block Checkbox Card</label>\n      <div class=\"checkbox-card is-block\">\n        <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block1\" checked/>\n        <label for=\"checkbox-block1\" class=\"card\">Option 1</label>\n      </div>\n      <div class=\"checkbox-card is-block\">\n        <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block2\" />\n        <label for=\"checkbox-block2\" class=\"card\">Option 2</label>\n      </div>\n      <div class=\"checkbox-card is-block\">\n        <input type=\"checkbox\" name=\"checkbox-block\" id=\"checkbox-block3\" disabled />\n        <label for=\"checkbox-block3\" class=\"card disabled\">Disabled</label>\n      </div>\n    </fieldset>`}\n            </CodeToggle>\n\n          </div>\n        </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n\nexport default CheckboxesCode;\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  const isPartiallyActive = ({ isPartiallyCurrent }) => {\n  return isPartiallyCurrent\n    ? { className: 'active' }\n    : { className: '' }\n  }\n\n  const PartialNavLink = props => (\n    <Link getProps={isPartiallyActive} {...props}>\n      {props.children}\n    </Link>\n  )\n\n  return (\n    <div className=\"subnav-links\">\n        <PartialNavLink to={ getSectionName + \"/\" + getPageName  + \"/code\"}>Code</PartialNavLink>\n        <PartialNavLink to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"}>Guidelines</PartialNavLink>\n    </div>\n  );\n};\n\nexport default SubNav\n","import React from 'react'\nimport Prism from 'prismjs'\nimport 'prismjs/plugins/custom-class/prism-custom-class.min.js'\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  render() {\n    Prism.plugins.customClass.map({ tag: 'exampletag', });\n\n    return (\n      <div className={this.state.showCode ? 'group-open' : ''}>\n        <div onClick={this.toggleCode} className={this.state.showCode ? 'code-toggle is-open' : 'code-toggle'}><i className=\"icon--code\"></i></div>\n        <pre className={this.state.showCode ? 'language-html show' : 'language-html'}>\n          <code className={this.state.showCode ? 'language-html show' : 'language-html'}>{this.props.children}</code>\n        </pre>\n      </div>\n    )\n  }\n}\nexport default CodeToggle;\n","!function(){if(\"undefined\"!=typeof self&&self.Prism||\"undefined\"!=typeof global&&global.Prism){var s={classMap:{}};Prism.plugins.customClass={map:function(i){s.classMap=i},prefix:function(i){s.prefixString=i}},Prism.hooks.add(\"wrap\",function(i){(s.classMap||s.prefixString)&&(i.classes=i.classes.map(function(i){return(s.prefixString||\"\")+(s.classMap[i]||i)}))})}}();","import React from 'react'\nimport Prism from 'prismjs'\nimport 'prismjs/components/prism-scss.min.js'\n\nclass CodeToggleSCSS extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <pre className=\"language-scss\">\n        <code className=\"language-scss\">{this.props.children}</code>\n      </pre>\n    )\n  }\n}\nexport default CodeToggleSCSS;\n","Prism.languages.scss=Prism.languages.extend(\"css\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},atrule:{pattern:/@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,inside:{rule:/@[\\w-]+/}},url:/(?:[-a-z]+-)*url(?=\\()/i,selector:{pattern:/(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:\"important\"},placeholder:/%[-\\w]+/,variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}}}),Prism.languages.insertBefore(\"scss\",\"atrule\",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),Prism.languages.scss.property={pattern:/(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,inside:{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}},Prism.languages.insertBefore(\"scss\",\"important\",{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}),Prism.languages.insertBefore(\"scss\",\"function\",{placeholder:{pattern:/%[-\\w]+/,alias:\"selector\"},statement:{pattern:/\\B!(?:default|optional)\\b/i,alias:\"keyword\"},\"boolean\":/\\b(?:true|false)\\b/,\"null\":/\\bnull\\b/,operator:{pattern:/(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,lookbehind:!0}}),Prism.languages.scss.atrule.inside.rest=Prism.languages.scss;"],"sourceRoot":""}