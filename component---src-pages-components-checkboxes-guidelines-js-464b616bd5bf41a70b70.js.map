{"version":3,"sources":["webpack:///./src/pages/components/checkboxes/guidelines.js","webpack:///./src/components/subnavigation.js"],"names":["currentPageNameLower","toLowerCase","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_2__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_3__","type","id","defaultChecked","htmlFor","style","marginTop","href","target","rel","marginBottom","display","name","fontSize","_ref","sectionName","getPageName","getSectionName","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","activeClassName"],"mappings":"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","file":"component---src-pages-components-checkboxes-guidelines-js-464b616bd5bf41a70b70.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\n\nconst currentPageName = \"Checkboxes\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n      <div className=\"row\">\n        <div className=\"column column--full\">\n          <p className=\"intro\">Checkboxes are used as an \"on/off\" function to select any number of options from a list. Each checkbox is independent from the others in the list, so checking one item should never uncheck another.</p>\n\n          <h2 className=\"has-number has-number--one no-margin--top\">Checkbox Style</h2>\n          <p>Dashing includes custom checkbox styles that allow for a larger click area and color customization. It is advised that custom checkboxes be utilized whenever possible.</p>\n          <div className=\"image-container double-padding\">\n            <fieldset className=\"column column--full\">\n              <div className=\"example--checkbox\">\n                <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline1\" defaultChecked={true}/>\n                <label htmlFor=\"dashing-checkbox--custom-inline1\">Default Checkbox</label>\n              </div>\n              <div className=\"checkbox--custom inline\">\n                <input type=\"checkbox\" id=\"dashing-checkbox--custom-inline2\" defaultChecked={true}/>\n                <label htmlFor=\"dashing-checkbox--custom-inline2\">Dashing Checkbox</label>\n              </div>\n            </fieldset>\n          </div>\n\n          <blockquote className=\"tips\" style={{ marginTop: \"2rem\" }}>\n            <strong>Tip: Fitts's Law</strong>\n            <p>Allow users to to click on both the checkbox and the label to allow for a larger click target. This supports <a href=\"https://www.interaction-design.org/literature/book/the-glossary-of-human-computer-interaction/fitts-s-law\" target=\"_blank\" rel=\"noopener noreferrer\">Fitts’s Law</a>, which states “the time to acquire a target is a function of the distance to and size of the target.”</p>\n          </blockquote>\n\n          <h2 className=\"has-number has-number--two\">Use positive and active language</h2>\n            <p>When labeling your checkboxes, use positive language. A user should know exactly what will happen if they check a box, and what will happen if they leave the box unchecked.</p>\n            <div className=\"image-container double-padding\">\n              <fieldset className=\"column column--full\">\n                <div className=\"flex-container\">\n                  <div className=\"icon-container float-left\">\n                    <i className=\"dashing-icon dashing-icon--alert-filled dashing-icon--red\"></i>\n                  </div>\n                  <div className=\"checkbox--custom\">\n                    <input type=\"checkbox\" id=\"dashing-checkbox--positivelanguage1\" defaultChecked={true}/>\n                    <label htmlFor=\"dashing-checkbox--positivelanguage1\">No note was received</label>\n                  </div>\n                </div>\n                <div className=\"flex-container\">\n                  <div className=\"icon-container float-left\">\n                    <i className=\"dashing-icon dashing-icon--checkmark-filled dashing-icon--green\"></i>\n                  </div>\n                  <div className=\"checkbox--custom\">\n                    <input type=\"checkbox\" id=\"dashing-checkbox--positivelanguage2\" defaultChecked={true}/>\n                    <label htmlFor=\"dashing-checkbox--positivelanguage2\">I received a note</label>\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n\n            <h2 className=\"has-number has-number--three\">Submit to make changes</h2>\n            <p>Checkboxes should be used to select options and change settings, but should only apply those changes after a submit action is completed (“Save Settings”, “Next Step”, etc.).</p>\n            <div className=\"image-container double-padding\">\n              <fieldset className=\"column column--full\">\n                <div className=\"checkbox--custom\">\n                  <input type=\"checkbox\" id=\"dashing-checkbox--save-changes1\" defaultChecked={true}/>\n                  <label htmlFor=\"dashing-checkbox--save-changes1\">Opt-in to Paperless Notifications</label>\n                </div>\n                <button className=\"button--smooth\" style={{ marginTop: \"1rem\" }}>Save Settings</button>\n              </fieldset>\n            </div>\n\n            <h2 className=\"has-number has-number--four\">Selectable Checkbox Cards</h2>\n            <p>Use checkbox cards to provide emphasis on the selection. These cards can include multiple lines of text. icons, and illustrations.</p>\n            <div className=\"image-container double-padding\" style={{ marginBottom: \"2rem\" }}>\n              <div className=\"column column--full\">\n                <h3>People in your membership</h3>\n              </div>\n              <div className=\"row\">\n                <div className=\"column column--third\">\n                  <div className=\"checkbox-card\" style={{ display: \"block\" }}>\n                    <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline1\" defaultChecked={true}/>\n                    <label htmlFor=\"checkbox-inline1\" className=\"card\" style={{ display: \"block\" }}>\n                      <span style={{ display: \"inline-table\" }}>\n                        <span style={{ fontSize: \"1rem\", display: \"block\" }}>Ryan Fitz</span>\n                        <span style={{ fontSize: \"0.8rem\", display: \"block\" }}>Primary</span>\n                      </span>\n                    </label>\n                  </div>\n                </div>\n                  <div className=\"column column--third\">\n                    <div className=\"checkbox-card\" style={{ display: \"block\" }}>\n                      <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline2\" />\n                      <label htmlFor=\"checkbox-inline2\" className=\"card\" style={{ display: \"block\" }}>\n                        <span style={{ display: \"inline-table\" }}>\n                          <span style={{ fontSize: \"1rem\", display: \"block\" }}>Jill Fitz</span>\n                          <span style={{ fontSize: \"0.8rem\", display: \"block\" }}>Spouse</span>\n                        </span>\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"column column--third\">\n                  <div className=\"checkbox-card\" style={{ display: \"block\" }}>\n                    <input type=\"checkbox\" name=\"checkbox-inline\" id=\"checkbox-inline3\" />\n                    <label htmlFor=\"checkbox-inline3\" className=\"card\" style={{ display: \"block\" }}>\n                      <span style={{ display: \"inline-table\" }}>\n                        <span style={{ fontSize: \"1rem\", display: \"block\" }}>Jackson Fitz</span>\n                        <span style={{ fontSize: \"0.8rem\", display: \"block\" }}>Son</span>\n                      </span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n        </div>\n      </div>\n    </AppContent>\n  </Layout>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  return (\n    <div className=\"subnav-links\">\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/code\"} activeClassName=\"active\">Code</Link>\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"} activeClassName=\"active\">Guidelines</Link>\n    </div>\n  );\n};\n\nexport default SubNav\n"],"sourceRoot":""}