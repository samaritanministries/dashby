{"version":3,"sources":["../../src/commands/serve.js"],"names":["openurl","require","signalExit","compression","express","module","exports","program","port","open","parseInt","app","use","static","req","res","next","accepts","status","sendFile","root","server","listen","openUrlString","console","log","code","signal","close"],"mappings":";;AAAA;AACA,MAAMA,UAAUC,QAAS,KAAT,CAAhB;;AACA,MAAMC,aAAaD,QAAS,aAAT,CAAnB;;AACA,MAAME,cAAcF,QAAS,aAAT,CAApB;;AACA,MAAMG,UAAUH,QAAS,SAAT,CAAhB;;AAEAI,OAAOC,OAAP,GAAiBC,WAAW;AAAA,MACpBC,IADoB,GACLD,OADK,CACpBC,IADoB;AAAA,MACdC,IADc,GACLF,OADK,CACdE,IADc;AAE1BD,SAAO,OAAOA,IAAP,KAAiB,QAAjB,GAA2BE,SAASF,IAAT,EAAe,EAAf,CAA3B,GAAgDA,IAAvD;AAEA,QAAMG,MAAMP,SAAZ;AACAO,MAAIC,GAAJ,CAAQT,aAAR;AACAQ,MAAIC,GAAJ,CAAQR,QAAQS,MAAR,CAAgB,QAAhB,CAAR;AACAF,MAAIC,GAAJ,CAAQ,CAACE,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1B,QAAIF,IAAIG,OAAJ,CAAa,MAAb,CAAJ,EAAyB;AACvBF,UAAIG,MAAJ,CAAW,GAAX,EAAgBC,QAAhB,CAA0B,UAA1B,EAAqC;AAAEC,cAAO;AAAT,OAArC;AACD,KAFD,MAEO;AACLJ;AACD;AACF,GAND;AAQA,QAAMK,SAASV,IAAIW,MAAJ,CAAWd,IAAX,EAAiB,MAAM;AACpC,QAAIe,gBAAiB,mBAAD,GAAsBf,IAA1C;AACAgB,YAAQC,GAAR,CAAa,0BAAb,EAAwCF,aAAxC;;AACA,QAAId,IAAJ,EAAU;AACR,UAAIc,gBAAiB,mBAAD,GAAsBf,IAA1C;AACAgB,cAAQC,GAAR,CAAa,oBAAb;AACAzB,cAAQuB,aAAR;AACD;AACF,GARc,CAAf;AAUArB,aAAW,CAACwB,IAAD,EAAOC,MAAP,KAAkB;AAC3BN,WAAOO,KAAP;AACD,GAFD;AAGD,CA5BD","sourcesContent":["/* @flow weak */\nconst openurl = require(`opn`)\nconst signalExit = require(`signal-exit`)\nconst compression = require(`compression`)\nconst express = require(`express`)\n\nmodule.exports = program => {\n  let { port, open } = program\n  port = typeof port === `string` ? parseInt(port, 10) : port\n\n  const app = express()\n  app.use(compression())\n  app.use(express.static(`public`))\n  app.use((req, res, next) => {\n    if (req.accepts(`html`)) {\n      res.status(404).sendFile(`404.html`, { root: `public` })\n    } else {\n      next()\n    }\n  })\n\n  const server = app.listen(port, () => {\n    let openUrlString = `http://localhost:` + port\n    console.log(`gatsby serve running at:`, openUrlString)\n    if (open) {\n      let openUrlString = `http://localhost:` + port\n      console.log(`Opening browser...`)\n      openurl(openUrlString)\n    }\n  })\n\n  signalExit((code, signal) => {\n    server.close()\n  })\n}\n"],"file":"serve.js"}