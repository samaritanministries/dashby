{"version":3,"sources":["../../../src/internal-plugins/load-babel-config/utils.js"],"names":["_","require","actionifyBabelrc","babelrc","actions","presets","plugins","options","isArray","forEach","p","name","setBabelPreset","setBabelPlugin","isObject","isEmpty","setBabelOptions","addDefaultPluginsPresets","stage","browserslist","targets","node","browsers","loose","modules","useBuiltIns","pragma","development","helpers","regenerator","polyfill","exports"],"mappings":";;;;;;AAAA,MAAMA,IAAIC,QAAS,QAAT,CAAV;AAEA;;;;;;AAIA,MAAMC,mBAAmB,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAAA,QACrCC,OADqC,GACJF,OADI,CACrCE,OADqC;AAAA,QAC5BC,OAD4B,GACJH,OADI,CAC5BG,OAD4B;AAAA,QAChBC,OADgB,0CACJJ,OADI;;AAE7C,MAAIE,WAAWL,EAAEQ,OAAF,CAAUH,OAAV,CAAf,EAAmC;AACjCA,YAAQI,OAAR,CAAgBC,KAAK;AACnB,UAAIC,IAAJ;AACA,UAAIJ,UAAU,EAAd;;AACA,UAAIP,EAAEQ,OAAF,CAAUE,CAAV,CAAJ,EAAkB;AAChBC,eAAOD,EAAE,CAAF,CAAP;AACAH,kBAAUG,EAAE,CAAF,CAAV;AACD,OAHD,MAGO;AACLC,eAAOD,CAAP;AACD;;AACDN,cAAQQ,cAAR,CAAuB;AACrBD,YADqB;AAErBJ;AAFqB,OAAvB;AAID,KAbD;AAcD;;AACD,MAAID,WAAWN,EAAEQ,OAAF,CAAUF,OAAV,CAAf,EAAmC;AACjCA,YAAQG,OAAR,CAAgBC,KAAK;AACnB,UAAIC,IAAJ;AACA,UAAIJ,UAAU,EAAd;;AACA,UAAIP,EAAEQ,OAAF,CAAUE,CAAV,CAAJ,EAAkB;AAChBC,eAAOD,EAAE,CAAF,CAAP;AACAH,kBAAUG,EAAE,CAAF,CAAV;AACD,OAHD,MAGO;AACLC,eAAOD,CAAP;AACD;;AACDN,cAAQS,cAAR,CAAuB;AACrBF,YADqB;AAErBJ;AAFqB,OAAvB;AAID,KAbD;AAcD;;AAED,MAAIP,EAAEc,QAAF,CAAWP,OAAX,KAAuB,CAACP,EAAEe,OAAF,CAAUR,OAAV,CAA5B,EAAgD;AAC9CH,YAAQY,eAAR,CAAwB;AAAET;AAAF,KAAxB;AACD;AACF,CAtCD;;AAwCA,MAAMU,2BAA2B,CAC/Bb,OAD+B,EAE/B;AAAEc,UAAS,EAAX;AAAcC,iBAAe;AAA7B,CAF+B,KAG5B;AACH,MAAIC,OAAJ;;AACA,MAAIF,UAAW,YAAf,EAA4B;AAC1BE,cAAU;AAAEC,YAAO;AAAT,KAAV;AACD,GAFD,MAEO;AACLD,cAAU;AAAEE,gBAAUH;AAAZ,KAAV;AACD,GANE,CAOH;;;AACAf,UAAQQ,cAAR,CAAuB;AACrBD,UAAO,mBADc;AAErBO,SAFqB;AAGrBX,aAAS;AACPgB,aAAO,IADA;AAEPC,eAAS,KAFF;AAGPC,mBAAc,OAHP;AAIPL;AAJO;AAHY,GAAvB;AAUAhB,UAAQQ,cAAR,CAAuB;AACrBD,UAAO,qBADc;AAErBO,SAFqB;AAGrBX,aAAS;AACPkB,mBAAa,IADN;AAEPC,cAAS,qBAFF;AAGPC,mBAAaT,UAAW;AAHjB;AAHY,GAAvB;AASAd,UAAQQ,cAAR,CAAuB;AAAED,UAAO,oBAAT;AAA8BO;AAA9B,GAAvB,EA3BG,CA6BH;;AACAd,UAAQS,cAAR,CAAuB;AACrBF,UAAO,yCADc;AAErBO,SAFqB;AAGrBX,aAAS;AAAEgB,aAAO;AAAT;AAHY,GAAvB;AAKAnB,UAAQS,cAAR,CAAuB;AACrBF,UAAO,qCADc;AAErBO;AAFqB,GAAvB,EAnCG,CAuCH;;AACAd,UAAQS,cAAR,CAAuB;AACrBF,UAAO,iCADc;AAErBO,SAFqB;AAGrBX,aAAS;AACPqB,eAAS,IADF;AAEPC,mBAAa,IAFN;AAGPC,gBAAU;AAHH;AAHY,GAAvB;AASD,CApDD;;AAsDAC,QAAQd,wBAAR,GAAmCA,wBAAnC;AACAc,QAAQ7B,gBAAR,GAA2BA,gBAA3B","sourcesContent":["const _ = require(`lodash`)\n\n/**\n * Convert a babelrc from a .babelrc file or package.json\n * to actions to add it to the store.\n */\nconst actionifyBabelrc = (babelrc, actions) => {\n  const { presets, plugins, ...options } = babelrc\n  if (presets && _.isArray(presets)) {\n    presets.forEach(p => {\n      let name\n      let options = {}\n      if (_.isArray(p)) {\n        name = p[0]\n        options = p[1]\n      } else {\n        name = p\n      }\n      actions.setBabelPreset({\n        name,\n        options,\n      })\n    })\n  }\n  if (plugins && _.isArray(plugins)) {\n    plugins.forEach(p => {\n      let name\n      let options = {}\n      if (_.isArray(p)) {\n        name = p[0]\n        options = p[1]\n      } else {\n        name = p\n      }\n      actions.setBabelPlugin({\n        name,\n        options,\n      })\n    })\n  }\n\n  if (_.isObject(options) && !_.isEmpty(options)) {\n    actions.setBabelOptions({ options })\n  }\n}\n\nconst addDefaultPluginsPresets = (\n  actions,\n  { stage = ``, browserslist = {} }\n) => {\n  let targets\n  if (stage === `build-html`) {\n    targets = { node: `current` }\n  } else {\n    targets = { browsers: browserslist }\n  }\n  // Presets\n  actions.setBabelPreset({\n    name: `@babel/preset-env`,\n    stage,\n    options: {\n      loose: true,\n      modules: false,\n      useBuiltIns: `usage`,\n      targets,\n    },\n  })\n  actions.setBabelPreset({\n    name: `@babel/preset-react`,\n    stage,\n    options: {\n      useBuiltIns: true,\n      pragma: `React.createElement`,\n      development: stage === `develop`,\n    },\n  })\n  actions.setBabelPreset({ name: `@babel/preset-flow`, stage })\n\n  // Plugins\n  actions.setBabelPlugin({\n    name: `@babel/plugin-proposal-class-properties`,\n    stage,\n    options: { loose: true },\n  })\n  actions.setBabelPlugin({\n    name: `@babel/plugin-syntax-dynamic-import`,\n    stage,\n  })\n  // Polyfills the runtime needed for async/await and generators\n  actions.setBabelPlugin({\n    name: `@babel/plugin-transform-runtime`,\n    stage,\n    options: {\n      helpers: true,\n      regenerator: true,\n      polyfill: false,\n    },\n  })\n}\n\nexports.addDefaultPluginsPresets = addDefaultPluginsPresets\nexports.actionifyBabelrc = actionifyBabelrc\n"],"file":"utils.js"}