@mixin button($button-name, $background-color, $background-color-dark, $color, $button-type: button) {
  @if $button-type == button {
    background-color: $background-color;
    color: $color;
    .dashing-icon::before { color: $color; }

    &:hover,
    &:focus,
    &:active {
      background-color: $background-color-dark;
    }
  }

  @if $button-type == border {
    background-color: transparent;
    border-color: $background-color;
    color: text-color($button-name, $background-color);

    .dashing-icon::before { color: text-color($button-name, $background-color); }

    &:hover,
    &:focus,
    &:active {
      background-color: $background-color-dark;
      border-color: transparent;
      color: $color;

      .dashing-icon::before {
        color: $color;
        transition: all 50ms ease-in-out;
      }
    }
  }

  @if $button-type == transparent {
    background-color: transparent;
    color: text-color($button-name, $background-color);

    &:hover,
    &:focus,
    &:active {
      background-color: background-color($button-name);
    }
    .dashing-icon::before { color: text-color($button-name, $background-color); }
  }
}

@mixin user-select($value) {
  -webkit-user-select: $value;
  -moz-user-select: $value;
  -ms-user-select: $value;
  -o-user-select: $value;
  user-select: $value;
}

@mixin button-setup($color) {
  #{$buttons} {
    &.button--#{nth($color, 1)} { @include button(#{nth($color, 1)}, #{nth($color, 2)}, #{nth($color, 3)}, #{nth($color, 4)}); }

    &.button--border {
      &.button--#{nth($color, 1)} {
        @include button(#{nth($color, 1)}, #{nth($color, 2)}, #{nth($color, 3)}, #{nth($color, 4)}, border);
      }
    }

    &.button--transparent {
      &.button--#{nth($color, 1)} {
        @include button(#{nth($color, 1)}, #{nth($color, 2)}, #{nth($color, 3)}, #{nth($color, 4)}, transparent);
      }
    }
  }
}

@mixin button-setup($color) {
  #{$buttons} {
    @if #{nth($color, 1)} == 'primary' { @include button(#{nth($color, 1)}, #{nth($color, 2)}, #{nth($color, 3)}, #{nth($color, 4)}); }
    &.button--#{nth($color, 1)} { @include button(#{nth($color, 1)}, #{nth($color, 2)}, #{nth($color, 3)}, #{nth($color, 4)}); }

    &.button--border {
      @if #{nth($color, 1)} == 'primary' { @include button(#{nth($color, 1)}, #{nth($color, 2)}, #{nth($color, 3)}, #{nth($color, 4)}, border); }
      &.button--#{nth($color, 1)} {
        @include button(#{nth($color, 1)}, #{nth($color, 2)}, #{nth($color, 3)}, #{nth($color, 4)}, border);
      }
    }

    &.button--transparent {
      @if #{nth($color, 1)} == 'blue' { @include button(#{nth($color, 1)}, #{nth($color, 2)}, #{nth($color, 3)}, #{nth($color, 4)}, transparent); }
      &.button--#{nth($color, 1)} {
        @include button(#{nth($color, 1)}, #{nth($color, 2)}, #{nth($color, 3)}, #{nth($color, 4)}, transparent);
      }
    }
  }
}

//Hardcoded values because value checking would not work in a mixin.
@function text-color($button-name, $background-color) {
  @if $button-name == 'gray' {
    @return $button-gray-text;
  }
  @else {
    @return $background-color;
  }
}

@function background-color($button-name) {
  @if $button-name == 'white' {
    @return rgba(0, 0, 0, 0.5);
  }
  @else {
    @return $color-gray-2;
  }
}
