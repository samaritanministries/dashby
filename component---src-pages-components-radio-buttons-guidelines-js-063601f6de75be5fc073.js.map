{"version":3,"sources":["webpack:///./src/pages/components/radio-buttons/guidelines.js","webpack:///./src/components/subnavigation.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_subnavigation__WEBPACK_IMPORTED_MODULE_2__","_components_appcontent__WEBPACK_IMPORTED_MODULE_3__","currentPageNameLower","toLowerCase","a","createElement","className","pageName","style","position","top","type","name","id","defaultChecked","htmlFor","marginTop","href","target","rel","overflow","marginBottom","gatsby__WEBPACK_IMPORTED_MODULE_1__","SubNav","_ref","sectionName","getPageName","getSectionName","to","activeClassName"],"mappings":"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","file":"component---src-pages-components-radio-buttons-guidelines-js-063601f6de75be5fc073.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\n\nconst currentPageName = \"Radio Buttons\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n      <div className=\"row\">\n        <div className=\"column column--full\">\n          <p className=\"intro\">Radio buttons are used to allow for exactly one choice in a short list of two or more options. Selecting one option will deselect any previously selected option.</p>\n          <h2 className=\"has-number has-number--one no-margin--top\">Radio Button Style</h2>\n            <p>Dashing includes custom radio button styles that allow for a larger click area and color customization. It is advised that custom radio buttons be utilized whenever possible.</p>\n            <div className=\"image-container double-padding\">\n\n              <fieldset className=\"column column--full\">\n                <div className=\"example--radio\" style={{ position: \"relative\", top: \"-0.3rem\" }}>\n                  <label>Default Radio Buttons</label>\n                  <div>\n                    <input type=\"radio\" name=\"default-radio\" id=\"default-radio1\" defaultChecked={true}/>\n                    <label htmlFor=\"default-radio1\" className=\"inline\">Option 1</label>\n                  </div>\n                  <div>\n                    <input type=\"radio\" name=\"default-radio\" id=\"default-radio2\"/>\n                    <label htmlFor=\"default-radio2\" className=\"inline\">Option 2</label>\n                  </div>\n                </div>\n\n\n                <div className=\"example--radio\">\n                  <label>Dashing Radio Buttons</label>\n                  <div className=\"radio--custom\">\n                    <input type=\"radio\" name=\"dashing-radio\" id=\"dashing-radio1--custom\" defaultChecked={true}/>\n                    <label htmlFor=\"dashing-radio1--custom\" className=\"inline\">Option 1</label>\n                  </div>\n                  <div className=\"radio--custom\">\n                    <input type=\"radio\" name=\"dashing-radio\" id=\"dashing-radio2--custom\"/>\n                    <label htmlFor=\"dashing-radio2--custom\" className=\"inline\">Option 2</label>\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n            <blockquote className=\"tips\" style={{ marginTop: \"2rem\" }}>\n              <strong>Tip: Fitts's Law</strong>\n              <p>Allow users to to click on both the checkbox and the label to allow for a larger click target. This supports <a href=\"https://www.interaction-design.org/literature/book/the-glossary-of-human-computer-interaction/fitts-s-law\" target=\"_blank\" rel=\"noopener noreferrer\">Fitts’s Law</a>, which states “the time to acquire a target is a function of the distance to and size of the target.”</p>\n            </blockquote>\n\n            <h2 className=\"has-number has-number--two\">Visibility & Quick Selection</h2>\n            <p>Presenting a small list of options as radio buttons allows for easy scanning and selection as it displays every available option directly in front of the user, and allows a selection to be made in a single click.</p>\n            <div className=\"image-container double-padding\" style={{ overflow: \"auto\" }}>\n              <fieldset className=\"column column--half\">\n                <div className=\"example--radio\">\n                  <label>Who is this Need for?</label>\n                  <div className=\"radio--custom\">\n                    <input type=\"radio\" name=\"dashing-example2\" id=\"example-ryan\" defaultChecked={true}/>\n                    <label htmlFor=\"example-ryan\" className=\"inline\">Ryan</label>\n                  </div>\n                  <div className=\"radio--custom\">\n                    <input type=\"radio\" name=\"dashing-example2\" id=\"example-jill\"/>\n                    <label htmlFor=\"example-jill\" className=\"inline\">Jill</label>\n                  </div>\n                  <div className=\"radio--custom\">\n                    <input type=\"radio\" name=\"dashing-example2\" id=\"example-jackson\"/>\n                    <label htmlFor=\"example-jackson\" className=\"inline\">Jackson</label>\n                  </div>\n                  <div className=\"radio--custom\">\n                    <input type=\"radio\" name=\"dashing-example2\" id=\"example-emily\"/>\n                    <label htmlFor=\"example-emily\" className=\"inline\">Emily</label>\n                  </div>\n                </div>\n              </fieldset>\n              <fieldset className=\"column column--half select--has-icon\">\n                <label>Who is this Need for?</label>\n                <select>\n                  <option>Ryan</option>\n                  <option>Jill</option>\n                  <option>Jackson</option>\n                  <option>Emily</option>\n                </select>\n              </fieldset>\n            </div>\n            <blockquote className=\"tips\" style={{ marginTop: \"2rem\" }}>\n              <strong>Tip: Radio Button vs. Dropdown Menus</strong>\n              <p style={{ marginBottom: \"0\" }}>There are times where a dropdown menu may be more appropriate to use than a radio button. Some examples of this may be:</p>\n              <ul>\n                <li>Designing for data entry, where your user may primarily be navigating via keyboard</li>\n                <li>Trying to save visual space</li>\n                <li>Working with more than 7 options</li>\n              </ul>\n            </blockquote>\n\n\n        </div>\n      </div>\n    </AppContent>\n  </Layout>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst SubNav = ({ pageName, sectionName }) => {\n\n  if (sectionName == null) {\n    sectionName = \"components\"\n  }\n  //For Component Names with a space\n  if (pageName === \"css grid\") {\n    pageName = \"css-grid\"\n  } else if (pageName === \"progress stepper\") {\n    pageName = \"progress-stepper\"\n  } else if (pageName === \"radio buttons\") {\n    pageName = \"radio-buttons\"\n  }\n\n  const getPageName = pageName;\n  const getSectionName = sectionName;\n\n  return (\n    <div className=\"subnav-links\">\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/code\"} activeClassName=\"active\">Code</Link>\n        <Link to={ getSectionName + \"/\" + getPageName  + \"/guidelines\"} activeClassName=\"active\">Guidelines</Link>\n    </div>\n  );\n};\n\nexport default SubNav\n"],"sourceRoot":""}