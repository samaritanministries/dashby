{"version":3,"sources":["../../../src/internal-plugins/query-runner/pages-writer.js"],"names":["_","require","fs","crypto","store","emitter","lastHash","writePages","bootstrapFinished","getState","program","jsonDataPaths","pages","values","pagesComponentDependencies","pagesData","forEach","path","matchPath","componentChunkName","jsonName","pageComponentsChunkNames","push","sortBy","p","newHash","createHash","update","JSON","stringify","digest","Promise","resolve","components","json","component","dataPath","uniqBy","c","syncRequires","map","join","asyncRequires","directory","writeAndMove","file","data","destination","tmp","Date","now","writeFile","then","move","overwrite","result","all","dataPaths","exports","oldPages","debouncedWritePages","debounce","isEqual","leading","on"],"mappings":"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","sourcesContent":["const _ = require(`lodash`)\nconst fs = require(`fs-extra`)\nconst crypto = require(`crypto`)\n\nconst { store, emitter } = require(`../../redux/`)\n\nimport { joinPath } from \"../../utils/path\"\n\nlet lastHash = null\n\n// Write out pages information.\nconst writePages = async () => {\n  bootstrapFinished = true\n  let { program, jsonDataPaths, pages } = store.getState()\n  pages = [...pages.values()]\n\n  const pagesComponentDependencies = {}\n\n  // Write out pages.json\n  let pagesData = []\n  pages.forEach(({ path, matchPath, componentChunkName, jsonName }) => {\n    const pageComponentsChunkNames = {\n      componentChunkName,\n    }\n\n    if (program._[0] === `develop`) {\n      pagesComponentDependencies[path] = pageComponentsChunkNames\n    }\n\n    pagesData.push({\n      ...pageComponentsChunkNames,\n      jsonName,\n      path,\n      matchPath,\n    })\n  })\n\n  pagesData = _.sortBy(\n    pagesData,\n    // Sort pages with matchPath to end so explicit routes\n    // will match before general.\n    p => (p.matchPath ? 1 : 0)\n  )\n\n  const newHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pagesComponentDependencies))\n    .digest(`hex`)\n\n  if (newHash === lastHash) {\n    // components didn't change - no need to rewrite pages.json\n    return Promise.resolve()\n  }\n\n  lastHash = newHash\n\n  // Get list of components, and json files.\n  let components = []\n  let json = []\n\n  pages.forEach(p => {\n    components.push({\n      componentChunkName: p.componentChunkName,\n      component: p.component,\n    })\n\n    if (p.jsonName && jsonDataPaths[p.jsonName]) {\n      json.push({ jsonName: p.jsonName, dataPath: jsonDataPaths[p.jsonName] })\n    }\n  })\n\n  components = _.uniqBy(components, c => c.componentChunkName)\n\n  // Create file with sync requires of components/json files.\n  let syncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n\\n`\n  syncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": preferDefault(require(\"${joinPath(\n          c.component\n        )}\"))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n\n  // Create file with async requires of components/json files.\n  let asyncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n`\n  asyncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": () => import(\"${joinPath(\n          c.component\n        )}\" /* webpackChunkName: \"${c.componentChunkName}\" */)`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n\n  asyncRequires += `exports.data = () => import(\"${joinPath(\n    program.directory,\n    `.cache`,\n    `data.json`\n  )}\")\\n\\n`\n\n  const writeAndMove = (file, data) => {\n    const destination = joinPath(program.directory, `.cache`, file)\n    const tmp = `${destination}.${Date.now()}`\n    return fs\n      .writeFile(tmp, data)\n      .then(() => fs.move(tmp, destination, { overwrite: true }))\n  }\n\n  const result = await Promise.all([\n    writeAndMove(`pages.json`, JSON.stringify(pagesData, null, 4)),\n    writeAndMove(`sync-requires.js`, syncRequires),\n    writeAndMove(`async-requires.js`, asyncRequires),\n    writeAndMove(\n      `data.json`,\n      JSON.stringify({\n        pages: pagesData,\n        dataPaths: jsonDataPaths,\n      })\n    ),\n  ])\n\n  return result\n}\n\nexports.writePages = writePages\n\nlet bootstrapFinished = false\nlet oldPages\nconst debouncedWritePages = _.debounce(\n  () => {\n    // Don't write pages again until bootstrap has finished.\n    if (bootstrapFinished && !_.isEqual(oldPages, store.getState().pages)) {\n      writePages()\n      oldPages = store.getState().pages\n    }\n  },\n  500,\n  { leading: true }\n)\nemitter.on(`CREATE_PAGE`, () => {\n  // Ignore CREATE_PAGE until bootstrap is finished\n  // as this is called many many times during bootstrap and\n  // we can ignore them until CREATE_PAGE_END is called.\n  //\n  // After bootstrap, we need to listen for this as stateful page\n  // creators e.g. the plugin \"gatsby-plugin-page-creator\"\n  // calls createPage directly so CREATE_PAGE_END won't get fired.\n  if (bootstrapFinished) {\n    debouncedWritePages()\n  }\n})\n\nemitter.on(`CREATE_PAGE_END`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE_BY_PATH`, () => {\n  debouncedWritePages()\n})\n"],"file":"pages-writer.js"}