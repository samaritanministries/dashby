{"version":3,"sources":["../../../src/internal-plugins/internal-data-bridge/gatsby-node.js"],"names":["crypto","require","moment","chokidar","systemPath","_","emitter","boundActionCreators","getNode","transformPackageJson","json","transformDeps","deps","entries","map","name","version","pick","dependencies","devDependencies","peerDependencies","optionalDependecies","bundledDependecies","createPageId","path","exports","sourceNodes","actions","store","createNode","state","getState","program","flattenedPlugins","page","id","parent","children","internal","type","contentDigest","createHash","update","JSON","stringify","digest","forEach","plugin","pluginFilepath","resolve","packageJson","buildTime","subtract","process","uptime","toJSON","createGatsbyConfigNode","config","configCopy","plugins","node","siteMetadata","port","host","pathToGatsbyConfig","join","directory","watch","on","oldCache","cache","e","undefined","onCreatePage","updatedAt","pageWithoutUpdated","description","pluginCreatorId","action","nodeId","payload","deleteNode"],"mappings":"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","sourcesContent":["const crypto = require(`crypto`)\nconst moment = require(`moment`)\nconst chokidar = require(`chokidar`)\nconst systemPath = require(`path`)\nconst _ = require(`lodash`)\n\nconst { emitter } = require(`../../redux`)\nconst { boundActionCreators } = require(`../../redux/actions`)\nconst { getNode } = require(`../../redux`)\n\nfunction transformPackageJson(json) {\n  const transformDeps = deps =>\n    _.entries(deps).map(([name, version]) => {\n      return {\n        name,\n        version,\n      }\n    })\n\n  json = _.pick(json, [\n    `name`,\n    `description`,\n    `version`,\n    `main`,\n    `keywords`,\n    `author`,\n    `license`,\n    `dependencies`,\n    `devDependencies`,\n    `peerDependencies`,\n    `optionalDependecies`,\n    `bundledDependecies`,\n  ])\n  json.dependencies = transformDeps(json.dependencies)\n  json.devDependencies = transformDeps(json.devDependencies)\n  json.peerDependencies = transformDeps(json.peerDependencies)\n  json.optionalDependecies = transformDeps(json.optionalDependecies)\n  json.bundledDependecies = transformDeps(json.bundledDependecies)\n\n  return json\n}\n\nconst createPageId = path => `SitePage ${path}`\n\nexports.sourceNodes = ({ actions, store }) => {\n  const { createNode } = actions\n  const state = store.getState()\n  const { program } = state\n  const { flattenedPlugins } = state\n\n  // Add our default development page since we know it's going to\n  // exist and we need a node to exist so its query works :-)\n  const page = { path: `/dev-404-page/` }\n  createNode({\n    ...page,\n    id: createPageId(page.path),\n    parent: `SOURCE`,\n    children: [],\n    internal: {\n      type: `SitePage`,\n      contentDigest: crypto\n        .createHash(`md5`)\n        .update(JSON.stringify(page))\n        .digest(`hex`),\n    },\n  })\n\n  flattenedPlugins.forEach(plugin => {\n    plugin.pluginFilepath = plugin.resolve\n    createNode({\n      ...plugin,\n      packageJson: transformPackageJson(\n        require(`${plugin.resolve}/package.json`)\n      ),\n      parent: `SOURCE`,\n      children: [],\n      internal: {\n        contentDigest: crypto\n          .createHash(`md5`)\n          .update(JSON.stringify(plugin))\n          .digest(`hex`),\n        type: `SitePlugin`,\n      },\n    })\n  })\n\n  // Add site node.\n  const buildTime = moment()\n    .subtract(process.uptime(), `seconds`)\n    .toJSON()\n\n  const createGatsbyConfigNode = (config = {}) => {\n    // Delete plugins from the config as we add plugins above.\n    const configCopy = { ...config }\n    delete configCopy.plugins\n    const node = {\n      siteMetadata: {\n        ...configCopy.siteMetadata,\n      },\n      port: state.program.port,\n      host: state.program.host,\n      ...configCopy,\n      buildTime,\n    }\n    createNode({\n      ...node,\n      id: `Site`,\n      parent: `SOURCE`,\n      children: [],\n      internal: {\n        contentDigest: crypto\n          .createHash(`md5`)\n          .update(JSON.stringify(node))\n          .digest(`hex`),\n        type: `Site`,\n      },\n    })\n  }\n\n  createGatsbyConfigNode(state.config)\n\n  const pathToGatsbyConfig = systemPath.join(\n    program.directory,\n    `gatsby-config.js`\n  )\n  chokidar.watch(pathToGatsbyConfig).on(`change`, () => {\n    const oldCache = require.cache[require.resolve(pathToGatsbyConfig)]\n    try {\n      // Delete require cache so we can reload the module.\n      delete require.cache[require.resolve(pathToGatsbyConfig)]\n      const config = require(pathToGatsbyConfig)\n      createGatsbyConfigNode(config)\n    } catch (e) {\n      // Restore the old cache since requiring the new gatsby-config.js failed.\n      if (oldCache !== undefined) {\n        require.cache[require.resolve(pathToGatsbyConfig)] = oldCache\n      }\n    }\n  })\n}\n\nexports.onCreatePage = ({ page, actions }) => {\n  const { createNode } = actions\n  // eslint-disable-next-line\n  const { updatedAt, ...pageWithoutUpdated } = page\n\n  // Add page.\n  createNode({\n    ...pageWithoutUpdated,\n    id: createPageId(page.path),\n    parent: `SOURCE`,\n    children: [],\n    internal: {\n      type: `SitePage`,\n      contentDigest: crypto\n        .createHash(`md5`)\n        .update(JSON.stringify(page))\n        .digest(`hex`),\n      description:\n        page.pluginCreatorId === `Plugin default-site-plugin`\n          ? `Your site's \"gatsby-node.js\"`\n          : page.pluginCreatorId,\n    },\n  })\n}\n\n// Listen for DELETE_PAGE and delete page nodes.\nemitter.on(`DELETE_PAGE`, action => {\n  const nodeId = createPageId(action.payload.path)\n  const node = getNode(nodeId)\n  boundActionCreators.deleteNode({ node })\n})\n"],"file":"gatsby-node.js"}