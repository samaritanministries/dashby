(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{160:function(e,t,a){"use strict";a.r(t);var n=a(7),l=a.n(n),r=a(0),s=a.n(r),i=a(212),o=a(4),c=a.n(o),m=a(215),d=a(216),p=a(214),u=a(222),f="Forms".toLowerCase(),b=function(e){function t(){return e.apply(this,arguments)||this}return l()(t,e),t.prototype.render=function(){var e=this.props.location;return s.a.createElement(m.a,null,s.a.createElement("header",{className:"subnav"},s.a.createElement("h1",null,"Forms"),s.a.createElement(d.a,{pageName:f})),s.a.createElement(p.a,null,s.a.createElement("div",{className:"grid grid-padding"},s.a.createElement("h2",{id:"forms"},"Forms",s.a.createElement(i.a,{to:e.pathname+"/#forms",className:"button button--transparent button--copy-link"})),s.a.createElement("div",{className:"example-container"},s.a.createElement("div",{className:"card"},s.a.createElement("div",{className:"card-content"},s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"form-text"},"Text Input"),s.a.createElement("input",{type:"text",id:"form-text"})),s.a.createElement("fieldset",{className:"is-optional"},s.a.createElement("label",{htmlFor:"form-text-optional"},"Text Input"),s.a.createElement("input",{type:"text",id:"form-text-optional",placeholder:"This input is optional"})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"form-text-disabled"},"Text Input disabled"),s.a.createElement("input",{type:"text",id:"form-text-disabled",value:"This input is disabled",disabled:!0})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"form-textarea"},"Textarea"),s.a.createElement("textarea",{id:"form-textarea"})))),s.a.createElement(u.a,null,'\x3c!-- Default Input --\x3e\n<fieldset>\n  <label for="form-text">Text Input</label>\n  <input type="text" id="form-text"/>\n</fieldset>\n\n\x3c!-- Add is-optional to fieldset to add label --\x3e\n<fieldset class="is-optional">\n  <label for="form-text-optional">Text Input</label>\n  <input type="text" id="form-text-optional" placeholder="This input is optional" />\n</fieldset>\n\n<fieldset>\n  <label for="form-text-disabled">Text Input disabled</label>\n  <input type="text" id="form-text-disabled" value="This input is disabled" disabled />\n</fieldset>\n\n<fieldset>\n  <label for="form-textarea">Textarea</label>\n  <textarea id="form-textarea"></textarea>\n</fieldset>\n')),s.a.createElement("h2",{className:"mt-space-xl",id:"selectMenu"},"Select Menu",s.a.createElement(i.a,{to:e.pathname+"/#selectMenu",className:"button button--transparent button--copy-link"})),s.a.createElement("p",null,"To add the drop-down icon, add the ",s.a.createElement("code",{className:"example-text"},".select--has-icon")," class to the parent container. Ensure you also have the dashing-icon font library properly installed."),s.a.createElement("div",{className:"example-container"},s.a.createElement("div",{className:"card"},s.a.createElement("div",{className:"card-content"},s.a.createElement("fieldset",{className:"select--has-icon"},s.a.createElement("label",{htmlFor:"form-add-on-menu"},"Select Menu"),s.a.createElement("select",{id:"form-add-on-menu"},s.a.createElement("option",null,"Option 1"),s.a.createElement("option",null,"Option 2"),s.a.createElement("option",null,"Option 3"))))),s.a.createElement(u.a,null,'\x3c!-- Select Element with custom icon --\x3e\n<div card="card">\n<div card="card-content">\n  <fieldset class="select--has-icon">\n    <label for="form-add-on-menu">Select Menu</label>\n    <select id="form-add-on-menu">\n      <option>Option 1</option>\n      <option>Option 2</option>\n      <option>Option 3</option>\n    </select>\n  </fieldset>\n</div>\n</div>')),s.a.createElement("h2",{className:"mt-space-xl",id:"inputGroups"},"Input Groups",s.a.createElement(i.a,{to:e.pathname+"/#inputGroups",className:"button button--transparent button--copy-link"})),s.a.createElement("div",{className:"example-container"},s.a.createElement("div",{className:"card"},s.a.createElement("div",{className:"card-content flex-content"},s.a.createElement("div",{className:"flex-row"},s.a.createElement("fieldset",{className:"select--has-icon"},s.a.createElement("label",{htmlFor:"form-input-group"},"Input Group"),s.a.createElement("div",{className:"input--add-on"},s.a.createElement("input",{type:"text",className:"add-on--before",id:"form-input-group",placeholder:"e.g. (481) 516-2342"}),s.a.createElement("select",{type:"text",className:"add-on--after"},s.a.createElement("option",null,"Home"),s.a.createElement("option",null,"Mobile"),s.a.createElement("option",null,"Work"))))),s.a.createElement("div",{className:"flex-row"},s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"form-input-action1"},"Add-on button"),s.a.createElement("div",{className:"input--add-on"},s.a.createElement("input",{type:"text",className:"add-on--before",id:"form-input-action1"}),s.a.createElement("input",{type:"submit",className:"button button--green add-on--after",value:"Submit"}))),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"form-input-action4"},"Add-on border icon"),s.a.createElement("div",{className:"input--add-on"},s.a.createElement("input",{type:"text",className:"add-on--before",id:"form-input-action4"}),s.a.createElement("button",{className:"button--icon button--border add-on--after"},s.a.createElement("i",{className:"dashing-icon dashing-icon--search"}))))))),s.a.createElement(u.a,null,'\x3c!-- This is an example of an add-on --\x3e\n<div class="card">\n<div class="card-content flex-content">\n  <div class="flex-row">\n    <fieldset class="select--has-icon">\n      <label for="form-input-group">Input Group</label>\n      <div class="input--add-on">\n        <input type="text" class="add-on--before" id="form-input-group" placeholder="e.g. (481) 516-2342"/>\n        <select type="text" class="add-on--after">\n          <option>Home</option>\n          <option>Mobile</option>\n          <option>Work</option>\n        </select>\n      </div>\n    </fieldset>\n  </div>\n  <div class="flex-row">\n    <fieldset>\n      <label for="form-input-action1">Add-on button</label>\n      <div class="input--add-on">\n        <input type="text" class="add-on--before" id="form-input-action1"/>\n        <input type="submit" class="button button--green add-on--after" value="Submit" />\n      </div>\n    </fieldset>\n    <fieldset>\n      <label for="form-input-action4">Add-on border icon</label>\n      <div class="input--add-on">\n        <input type="text" class="add-on--before" id="form-input-action4"/>\n        <button class="button--icon button--border add-on--after">\n          <i class="dashing-icon dashing-icon--search"></i>\n        </button>\n      </div>\n    </fieldset>\n  </div>\n</div>\n</div>')),s.a.createElement("h2",{className:"mt-space-xl",id:"inputMessageStates"},"Input Message States",s.a.createElement(i.a,{to:e.pathname+"/#inputMessageStates",className:"button button--transparent button--copy-link"})),s.a.createElement("div",{className:"example-container"},s.a.createElement("div",{className:"card"},s.a.createElement("div",{className:"card-content"},s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"text-message"},"Text Input with message"),s.a.createElement("input",{type:"text",id:"text-message"}),s.a.createElement("div",{className:"message"},"Default messages can be used to give additional information about an input.")),s.a.createElement("fieldset",{className:"has-error"},s.a.createElement("label",{htmlFor:"text-error"},"Text Input with error"),s.a.createElement("input",{type:"text",id:"text-error"}),s.a.createElement("div",{className:"message"},"Error messages are used to explain system failures or user errors.")),s.a.createElement("fieldset",{className:"has-warning"},s.a.createElement("label",{htmlFor:"text-warning"},"Text Input with warning"),s.a.createElement("input",{type:"text",id:"text-warning"}),s.a.createElement("div",{className:"message"},"Use warnings to convey important messages to your user.")))),s.a.createElement(u.a,null,'\x3c!-- Default Message --\x3e\n<div class="card">\n<div class="card-content">\n  <fieldset>\n    <label for="text-message">Text Input with message</label>\n    <input type="text" id="text-message"/>\n    <div class="message">Default messages can be used to give additional information about an input.</div>\n  </fieldset>\n\n  <fieldset class="has-error">\n    <label for="text-error">Text Input with error</label>\n    <input type="text" id="text-error"/>\n    <div class="message">Error messages are used to explain system failures or user errors.</div>\n  </fieldset>\n\n  <fieldset class="has-warning">\n    <label for="text-warning">Text Input with warning</label>\n    <input type="text" id="text-warning"/>\n    <div class="message">Use warnings to convey important messages to your user.</div>\n  </fieldset>\n</div>\n</div>')),s.a.createElement("h2",{className:"mt-space-xl",id:"otherSupportedInputTypes"},"Other Supported Input Types",s.a.createElement(i.a,{to:e.pathname+"/#otherSupportedInputTypes",className:"button button--transparent button--copy-link"})),s.a.createElement("div",{className:"example-container"},s.a.createElement("div",{className:"card"},s.a.createElement("div",{className:"card-content"},s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"date"},"Date"),s.a.createElement("input",{type:"date",id:"date"})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"time"},"Time"),s.a.createElement("input",{type:"time",id:"time"})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"month"},"Month"),s.a.createElement("input",{type:"month",id:"month"})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"email"},"Email"),s.a.createElement("input",{type:"email",id:"email",placeholder:"e.g. ryan@fitzinator.com"})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"password"},"Password"),s.a.createElement("input",{type:"password",id:"password"})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"number"},"Number"),s.a.createElement("input",{type:"number",id:"number"})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"tel"},"Tel"),s.a.createElement("input",{type:"tel",id:"tel"})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"file"},"File"),s.a.createElement("input",{type:"file",id:"file"})))),s.a.createElement(u.a,null,'<div class="card">\n<div class="card-content">\n  <fieldset>\n    <label for="date">Date</label>\n    <input type="date" id="date"/>\n  </fieldset>\n\n  <fieldset>\n    <label for="time">Time</label>\n    <input type="time" id="time"/>\n  </fieldset>\n\n  <fieldset>\n    <label for="month">Month</label>\n    <input type="month" id="month"/>\n  </fieldset>\n\n  <fieldset>\n    <label for="email">Email</label>\n    <input type="email" id="email" placeholder="e.g. ryan@fitzinator.com"/>\n  </fieldset>\n\n  <fieldset>\n    <label for="password">Password</label>\n    <input type="password" id="password"/>\n  </fieldset>\n\n  <fieldset>\n    <label for="number">Number</label>\n    <input type="number" id="number"/>\n  </fieldset>\n\n  <fieldset>\n    <label for="tel">Tel</label>\n    <input type="tel" id="tel"/>\n  </fieldset>\n\n  <fieldset>\n    <label for="file">File</label>\n    <input type="file" id="file"/>\n  </fieldset>\n</div>\n</div>')),s.a.createElement("h2",{className:"mt-space-xl",id:"customRangeSlider"},"Custom Range Slider",s.a.createElement(i.a,{to:e.pathname+"/#customRangeSlider",className:"button button--transparent button--copy-link"})),s.a.createElement("p",{className:"text-color--red"},"Not supported in Internet Explorer"),s.a.createElement("div",{className:"example-container"},s.a.createElement("div",{className:"card"},s.a.createElement("div",{className:"card-content"},s.a.createElement("fieldset",{className:"range--custom"},s.a.createElement("label",{htmlFor:"range"},"Range"),s.a.createElement("input",{type:"range",id:"range"})))),s.a.createElement(u.a,null,'\x3c!-- Custom Range Slider --\x3e\n<fieldset class="range--custom">\n<label for="range">Range</label>\n<input type="range" id="range"/>\n</fieldset>')),s.a.createElement("h2",{className:"mt-space-xl",id:"formExample"},"Form Example",s.a.createElement(i.a,{to:e.pathname+"/#formExample",className:"button button--transparent button--copy-link"})),s.a.createElement("div",{className:"example-container"},s.a.createElement("div",{className:"card"},s.a.createElement("div",{className:"card-header has-border"},s.a.createElement("h2",{className:"no-margin"},"Card Header")),s.a.createElement("div",{className:"card-content flex-content"},s.a.createElement("div",{className:"flex-row"},s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"form-text"},"Text Input"),s.a.createElement("input",{type:"text",id:"form-text"})),s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"form-text2"},"Text Input"),s.a.createElement("input",{type:"text",id:"form-text2"}))),s.a.createElement("div",{className:"flex-row"},s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"form-date"},"Date Input"),s.a.createElement("input",{type:"date",id:"form-date"})),s.a.createElement("fieldset",{className:"select--has-icon"},s.a.createElement("label",{htmlfor:"form-select"},"Select"),s.a.createElement("select",{id:"form-select"},s.a.createElement("option",null,"Option 1"),s.a.createElement("option",null,"Option 2"))),s.a.createElement("fieldset",{className:"spacer"})),s.a.createElement("div",{className:"flex-row"},s.a.createElement("fieldset",null,s.a.createElement("label",{htmlFor:"form-textarea"},"Textarea"),s.a.createElement("textarea",{id:"form-textarea"})))),s.a.createElement("div",{className:"card-footer"},s.a.createElement("button",{className:"mr-space-xs"},"Submit"),s.a.createElement("button",{className:"button--transparent button--gray"},"Cancel"))),s.a.createElement(u.a,null,'\x3c!-- Custom Range Slider --\x3e\n<div class="card">\n<div class="card-header has-border">\n  <h2 class="no-margin">Card Header</h2>\n</div>\n\n<div class="card-content flex-content">\n  <div class="flex-row">\n    <fieldset>\n      <label for="form-text">Text Input</label>\n      <input type="text" id="form-text"/>\n    </fieldset>\n    <fieldset>\n      <label for="form-text2">Text Input</label>\n      <input type="text" id="form-text2"/>\n    </fieldset>\n  </div>\n  <div class="flex-row">\n    <fieldset>\n      <label for="form-date">Date Input</label>\n      <input type="date" id="form-date"/>\n    </fieldset>\n    <fieldset class="select--has-icon">\n      <label for="form-select">Select</label>\n      <select id="form-select">\n        <option>Option 1</option>\n        <option>Option 2</option>\n      </select>\n    </fieldset>\n    <fieldset class="spacer"></fieldset>\n  </div>\n  <div class="flex-row">\n    <fieldset>\n      <label for="form-textarea">Textarea</label>\n      <textarea id="form-textarea"></textarea>\n    </fieldset>\n  </div>\n</div>\n<div class="card-footer">\n  <button class="mr-space-xs">Submit</button>\n  <button class="button--transparent button--gray">Cancel</button>\n</div>\n</div>')))))},t}(s.a.Component);b.propTypes={location:c.a.object.isRequired},t.default=b}}]);
//# sourceMappingURL=component---src-pages-components-forms-code-js-190d3eb335e998827bc1.js.map