{"version":3,"sources":["webpack:///./src/pages/components/cards/loadingCard.js"],"names":["LoadingCard","render","this","bind","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","CardHeader","CardContent","CardFooter","className","props","hasBorder","numberOfLines","Array","from","length","_","k","key","hasFooter","React","Component","defaultProps"],"mappings":"6KAGqBA,0LAEnBC,OAAA,WACE,IAAMD,EAAcE,KAAKF,YAAYG,KAAKD,MAE1C,OACEE,EAAAC,EAAAC,cAACN,EAAD,SAIJA,YAAA,WACE,IAAMO,EAAaL,KAAKK,WAAWJ,KAAKD,MAClCM,EAAcN,KAAKM,YAAYL,KAAKD,MACpCO,EAAaP,KAAKO,WAAWN,KAAKD,MAExC,OACEE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAACC,EAAD,MACAH,EAAAC,EAAAC,cAACE,EAAD,MACAJ,EAAAC,EAAAC,cAACG,EAAD,UAKNF,WAAA,WAGE,OAFsBL,KAAKS,MAAnBC,UAIJR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACbN,EAAAC,EAAAC,cAAA,gBAKFF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACbN,EAAAC,EAAAC,cAAA,mBAMRE,YAAA,WAAc,IACJK,EAAkBX,KAAKS,MAAvBE,cAER,OACET,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBAEbI,MAAMC,KAAK,CAAEC,OAAQH,GAAiB,SAACI,EAAGC,GAAJ,OACpCd,EAAAC,EAAAC,cAAA,KAAGa,IAAKD,UAOhBT,WAAA,WAEE,OADsBP,KAAKS,MAAnBS,UAGJhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACbN,EAAAC,EAAAC,cAAA,WAII,SAjE2Be,IAAMC,WAsE/CtB,EAAYuB,aAAe,CACzBX,WAAW,EACXQ,WAAW,EACXP,cAAe","file":"component---src-pages-components-cards-loading-card-js-911df97120df79e9b78a.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class LoadingCard extends React.Component {\n\n  render() {\n    const LoadingCard = this.LoadingCard.bind(this);\n\n    return (\n      <LoadingCard />\n    );\n  }\n\n  LoadingCard() {\n    const CardHeader = this.CardHeader.bind(this);\n    const CardContent = this.CardContent.bind(this);\n    const CardFooter = this.CardFooter.bind(this);\n\n    return (\n      <div className=\"card is-loading\">\n        <CardHeader />\n        <CardContent />\n        <CardFooter />\n      </div>\n    );\n  }\n\n  CardHeader() {\n    const { hasBorder } = this.props;\n\n    if (hasBorder) {\n      return (\n        <div className=\"card-header has-border\">\n          <h3>&nbsp;</h3>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"card-header\">\n          <h3>&nbsp;</h3>\n        </div>\n      );\n    }\n  }\n\n  CardContent() {\n    const { numberOfLines } = this.props;\n\n    return (\n      <div className=\"card-content\">\n      {\n        Array.from({ length: numberOfLines }, (_, k) => (\n          <p key={k}></p>\n        ))\n      }\n    </div>\n    );\n  }\n\n  CardFooter() {\n    const { hasFooter } = this.props;\n    if (hasFooter) {\n      return (\n        <div className=\"card-footer\">\n          <p></p>\n        </div>\n      );\n    } else {\n      return (null);\n    }\n  }\n}\n\nLoadingCard.defaultProps = {\n  hasBorder: false,\n  hasFooter: false,\n  numberOfLines: 1\n};\n\nLoadingCard.propTypes = {\n  hasBorder: PropTypes.bool,\n  hasFooter: PropTypes.bool,\n  numberOfLines: PropTypes.number\n};\n"],"sourceRoot":""}