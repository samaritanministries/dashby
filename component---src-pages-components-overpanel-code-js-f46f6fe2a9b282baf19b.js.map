{"version":3,"sources":["webpack:///./src/pages/components/overpanel/code.js"],"names":["currentPageNameLower","toLowerCase","OverpanelCode","render","location","this","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","className","_components_subnavigation__WEBPACK_IMPORTED_MODULE_5__","pageName","_components_appcontent__WEBPACK_IMPORTED_MODULE_6__","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","pathname","style","marginBottom","_components_codetoggle__WEBPACK_IMPORTED_MODULE_7__","React","Component","propTypes","PropTypes","object","isRequired"],"mappings":"mMAUMA,EADkB,YACqBC,cAEvCC,4FAGJC,OAAA,WAAS,IACCC,EAAaC,KAAKC,MAAlBF,SAER,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAChBJ,EAAAC,EAAAC,cAAA,UAZc,aAadF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQC,SAAUb,KAEpBO,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAEbJ,EAAAC,EAAAC,cAAA,MAAIM,GAAG,aAAP,YACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAIb,EAASc,SAAW,cAAeP,UAAU,kDAEzDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAEbJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAML,UAAU,yBAAyBM,GAAG,oCAAoCE,MAAO,CAAEC,aAAc,SAAvG,0BAEAb,EAAAC,EAAAC,cAACY,EAAA,EAAD,yxBAwBFd,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcI,GAAG,mBAA/B,mBACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAIb,EAASc,SAAW,oBAAqBP,UAAU,kDAE/DJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,8GAAoIJ,EAAAC,EAAAC,cAAA,uBAApI,IAA2JF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,aAA3J,KACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4CAAJ,IAAgDF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,iBAChDJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sCAAJ,IAA0CF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,gBAC1CJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uCAAJ,IAA2CF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,gBAC3CJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uCAAJ,IAA2CF,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAhB,iBAE7CJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAACY,EAAA,EAAD,6HA1DcC,IAAMC,WAA5BrB,EACGsB,UAAY,CAAEpB,SAAUqB,IAAUC,OAAOC,YAwEnCzB","file":"component---src-pages-components-overpanel-code-js-f46f6fe2a9b282baf19b.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\n\nconst currentPageName = \"Overpanel\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nclass OverpanelCode extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n          <div className=\"grid grid-padding\">\n\n            <h2 id=\"overpanel\">Overpanel\n              <Link to={location.pathname + \"/#overpanel\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n\n              <Link className=\"button button--primary\" to=\"../../templates/overpanel-example\" style={{ marginBottom: \"1rem\" }}>View Example Overpanel</Link>\n\n              <CodeToggle>\n{`<div class=\"overpanel\">\n<header class=\"title-bar\">\n  <div class=\"title-content\">\n    <div>\n      <h2>Overpanel Title</h2>\n      <p>Overpanel description</p>\n    </div>\n    <a href=\"/templates/default\">\n      <button class=\"button button--secondary\"><i class=\"dashing-icon dashing-icon--close\"></i> Close</button>\n    </a>\n  </div>\n</header>\n\n<section class=\"content\">\n  <div class=\"grid grid-padding\">\n    <h2>Example Fullscreen Page</h2>\n    <p>This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple!</p>\n  </div>\n</section>\n</div>`}\n              </CodeToggle>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"overpanelWidths\">Overpanel Widths\n              <Link to={location.pathname + \"/#overpanelWidths\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <p className=\"no-margin\">To change the max width of the overpanel and page content, all you need to do is apply an additional class <strong>AFTER</strong> <code className=\"example-text\">overpanel</code>.</p>\n            <ul className=\"no-margin\">\n              <li><strong>Extra Small Width (350px):</strong> <code className=\"example-text\">overpanel-xs</code></li>\n              <li><strong>Small Width (600px):</strong> <code className=\"example-text\">overpanel-s</code></li>\n              <li><strong>Medium Width (800px):</strong> <code className=\"example-text\">overpanel-m</code></li>\n              <li><strong>Large Width (1200px):</strong> <code className=\"example-text\">overpanel-l</code></li>\n            </ul>\n            <div className=\"example-container\">\n              <div className=\"show-code\">\n              <CodeToggle>\n{`<!-- By default the content width is set to overpanel-s -->\n<div class=\"overpanel overpanel-l\">\n...`}\n              </CodeToggle>\n            </div>\n            </div>\n\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n\nexport default OverpanelCode;\n"],"sourceRoot":""}